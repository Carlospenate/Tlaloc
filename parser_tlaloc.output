State 37 conflicts: 2 shift/reduce
State 45 conflicts: 2 shift/reduce
State 53 conflicts: 1 reduce/reduce
State 54 conflicts: 2 shift/reduce
State 74 conflicts: 2 shift/reduce
State 75 conflicts: 2 shift/reduce
State 76 conflicts: 2 shift/reduce
State 77 conflicts: 2 shift/reduce
State 78 conflicts: 2 shift/reduce
State 86 conflicts: 1 shift/reduce
State 103 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 105 conflicts: 2 shift/reduce
State 153 conflicts: 2 shift/reduce
State 154 conflicts: 2 shift/reduce
State 156 conflicts: 2 shift/reduce
State 157 conflicts: 2 shift/reduce
State 160 conflicts: 2 shift/reduce
State 163 conflicts: 2 shift/reduce
State 173 conflicts: 2 shift/reduce
State 181 conflicts: 2 shift/reduce
State 185 conflicts: 2 shift/reduce
State 191 conflicts: 2 shift/reduce
State 196 conflicts: 2 shift/reduce
State 211 conflicts: 2 shift/reduce
State 217 conflicts: 2 shift/reduce


Grammar

    0 $accept: tlaloc $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    4 vars: vars vars_def
    5     | /* empty */

    6 $@3: /* empty */

    7 $@4: /* empty */

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO

    9 declaracion: APUNTADOR ID
   10            | ID

   11 params: APUNTADOR ID
   12       | ID

   13 $@5: /* empty */

   14 params: ID $@5 dimension_arreglo

   15 tipo: INTEGER
   16     | STRING
   17     | BOOLEAN
   18     | DECIMAL
   19     | VOID

   20 asignacion_var: IGUAL expresion
   21               | dimension_arreglo
   22               | /* empty */

   23 $@6: /* empty */

   24 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@6 CORCHETE_CERRADO

   25 $@7: /* empty */

   26 $@8: /* empty */

   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO

   28 expresion: exp
   29          | exp operador_logico exp

   30 funcion_matematica: math_choices PAR_ABIERTO exp PAR_CERRADO

   31 math_choices: ABS
   32             | COS
   33             | SIN
   34             | LOG
   35             | TAN
   36             | SQRT

   37 operador_logico: AND
   38                | OR
   39                | MAYOR_QUE
   40                | MENOR_QUE
   41                | DIFERENTE
   42                | IGUAL_IGUAL
   43                | /* empty */

   44 exp: termino
   45    | termino MAS termino
   46    | termino MENOS termino

   47 termino: exponencial
   48        | exponencial POR exponencial
   49        | exponencial DIVISION exponencial

   50 exponencial: factor
   51            | factor EXPONENCIAL

   52 factor: var
   53       | PAR_ABIERTO expresion PAR_CERRADO
   54       | factor_alterno

   55 factor_alterno: operadores_binarios factor_alterno_choices

   56 operadores_binarios: MAS
   57                    | MENOS
   58                    | /* empty */

   59 factor_alterno_choices: CTE_INTEGER
   60                       | llamado
   61                       | funcion_matematica
   62                       | ID CORCHETE_ABIERTO exp CORCHETE_CERRADO
   63                       | ID

   64 var: ID
   65    | CTE_INTEGER
   66    | CTE_STRING
   67    | CTE_DECIMAL
   68    | VERDADERO
   69    | FALSO

   70 metodo: metodo metodo_def
   71       | /* empty */

   72 $@9: /* empty */

   73 $@10: /* empty */

   74 metodo_main: METHOD VOID MAIN $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 END METHOD

   75 $@11: /* empty */

   76 $@12: /* empty */

   77 $@13: /* empty */

   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD

   79 metodo_body: metodo_body body_code
   80            | /* empty */

   81 parametros: parametros_def

   82 $@14: /* empty */

   83 parametros_def: tipo $@14 params parametros_extra
   84               | /* empty */

   85 parametros_extra: COMA parametros_def
   86                 | /* empty */

   87 body_code: vars_def
   88          | asignacion
   89          | estatuto
   90          | llamado PUNTO
   91          | default_functions

   92 llamado: ID PAR_ABIERTO exp PAR_CERRADO

   93 asignacion: ID IGUAL expresion PUNTO
   94           | array_assignment

   95 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

   97 estatuto: if_statement
   98         | for_statement
   99         | while_statement
  100         | select_statement

  101 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

  102 for_statement: FOR ID IGUAL exp TO exp for_step END FOR

  103 for_step: DOS_PUNTOS metodo_body
  104         | STEP exp DOS_PUNTOS metodo_body

  105 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

  106 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

  107 case_statement: case_statement_def case_statement
  108               | /* empty */

  109 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

  110 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  111                  | read

  112 read: READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO

  113 ids: ids_def ids
  114    | /* empty */

  115 ids_def: COMA ID

  116 default_function_input: MAS default_function_input_def default_function_input
  117                       | /* empty */

  118 default_function_input_def: expresion
  119                           | COMILLAS CTE_STRING COMILLAS

  120 default_choices: PRINT
  121                | PRINTLINE


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 3
METHOD (259) 74 78
PRINT (260) 120
PRINTLINE (261) 121
READ (262) 112
CASE (263) 106 109
DEFAULT (264) 106
DEFINE (265) 8
AS (266) 8
TO (267) 102
STEP (268) 104
INTEGER (269) 15
DECIMAL (270) 18
MAIN (271) 74
STRING (272) 16
BOOLEAN (273) 17
END (274) 3 74 78 101 102 105 106 109
FALSO (275) 69
VERDADERO (276) 68
VOID (277) 19 74
RETURN (278) 78
AND (279) 37
OR (280) 38
ABS (281) 31
COS (282) 32
SIN (283) 33
LOG (284) 34
TAN (285) 35
SQRT (286) 36
FOR (287) 102
WHILE (288) 105
IF (289) 101
SELECT (290) 106
ELSE (291) 101
PAR_ABIERTO (292) 30 53 74 78 92 101 105 110 112
PAR_CERRADO (293) 30 53 74 78 92 101 105 110 112
COMA (294) 27 85 96 115
DOS_PUNTOS (295) 3 74 78 101 103 104 105 106 109
CORCHETE_ABIERTO (296) 24 27 62 95 96
CORCHETE_CERRADO (297) 24 27 62 95 96
IGUAL (298) 20 93 95 96 102
IGUAL_IGUAL (299) 42
MENOR_QUE (300) 40
MAYOR_QUE (301) 39
DIFERENTE (302) 41
POR (303) 48
MAS (304) 45 56 116
MENOS (305) 46 57
DIVISION (306) 49
EXPONENCIAL (307) 51
PUNTO (308) 8 78 90 93 95 96 110 112
APUNTADOR (309) 9 11
COMILLAS (310) 119
ID (311) 3 9 10 11 12 14 62 63 64 78 92 93 95 96 102 106 112 115
CTE_STRING (312) 66 119
CTE_DECIMAL (313) 67
CTE_INTEGER (314) 24 27 59 65 109


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
tlaloc (61)
    on left: 3, on right: 0
$@1 (62)
    on left: 1, on right: 3
$@2 (63)
    on left: 2, on right: 3
vars (64)
    on left: 4 5, on right: 3 4
vars_def (65)
    on left: 8, on right: 4 87
$@3 (66)
    on left: 6, on right: 8
$@4 (67)
    on left: 7, on right: 8
declaracion (68)
    on left: 9 10, on right: 8
params (69)
    on left: 11 12 14, on right: 83
$@5 (70)
    on left: 13, on right: 14
tipo (71)
    on left: 15 16 17 18 19, on right: 8 78 83
asignacion_var (72)
    on left: 20 21 22, on right: 8
dimension_arreglo (73)
    on left: 24 27, on right: 14 21
$@6 (74)
    on left: 23, on right: 24
$@7 (75)
    on left: 25, on right: 27
$@8 (76)
    on left: 26, on right: 27
expresion (77)
    on left: 28 29, on right: 20 53 78 93 95 96 101 105 118
funcion_matematica (78)
    on left: 30, on right: 61
math_choices (79)
    on left: 31 32 33 34 35 36, on right: 30
operador_logico (80)
    on left: 37 38 39 40 41 42 43, on right: 29
exp (81)
    on left: 44 45 46, on right: 28 29 30 62 92 95 96 102 104
termino (82)
    on left: 47 48 49, on right: 44 45 46
exponencial (83)
    on left: 50 51, on right: 47 48 49
factor (84)
    on left: 52 53 54, on right: 50 51
factor_alterno (85)
    on left: 55, on right: 54
operadores_binarios (86)
    on left: 56 57 58, on right: 55
factor_alterno_choices (87)
    on left: 59 60 61 62 63, on right: 55
var (88)
    on left: 64 65 66 67 68 69, on right: 52
metodo (89)
    on left: 70 71, on right: 3 70
metodo_main (90)
    on left: 74, on right: 3
$@9 (91)
    on left: 72, on right: 74
$@10 (92)
    on left: 73, on right: 74
metodo_def (93)
    on left: 78, on right: 70
$@11 (94)
    on left: 75, on right: 78
$@12 (95)
    on left: 76, on right: 78
$@13 (96)
    on left: 77, on right: 78
metodo_body (97)
    on left: 79 80, on right: 74 78 79 101 103 104 105 106 109
parametros (98)
    on left: 81, on right: 74 78
parametros_def (99)
    on left: 83 84, on right: 81 85
$@14 (100)
    on left: 82, on right: 83
parametros_extra (101)
    on left: 85 86, on right: 83
body_code (102)
    on left: 87 88 89 90 91, on right: 79
llamado (103)
    on left: 92, on right: 60 90
asignacion (104)
    on left: 93 94, on right: 88
array_assignment (105)
    on left: 95 96, on right: 94
estatuto (106)
    on left: 97 98 99 100, on right: 89
if_statement (107)
    on left: 101, on right: 97
for_statement (108)
    on left: 102, on right: 98
for_step (109)
    on left: 103 104, on right: 102
while_statement (110)
    on left: 105, on right: 99
select_statement (111)
    on left: 106, on right: 100
case_statement (112)
    on left: 107 108, on right: 106 107
case_statement_def (113)
    on left: 109, on right: 107
default_functions (114)
    on left: 110 111, on right: 91
read (115)
    on left: 112, on right: 111
ids (116)
    on left: 113 114, on right: 112 113
ids_def (117)
    on left: 115, on right: 113
default_function_input (118)
    on left: 116 117, on right: 110 116
default_function_input_def (119)
    on left: 118 119, on right: 110 116
default_choices (120)
    on left: 120 121, on right: 110


state 0

    0 $accept: . tlaloc $end
    3 tlaloc: . PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    PROGRAM  shift, and go to state 1

    tlaloc  go to state 2


state 1

    3 tlaloc: PROGRAM . ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    ID  shift, and go to state 3


state 2

    0 $accept: tlaloc . $end

    $end  shift, and go to state 4


state 3

    1 $@1: .
    3 tlaloc: PROGRAM ID . $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


state 4

    0 $accept: tlaloc $end .

    $default  accept


state 5

    3 tlaloc: PROGRAM ID $@1 . DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    DOS_PUNTOS  shift, and go to state 6


state 6

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS . vars $@2 metodo metodo_main END PROGRAM
    4 vars: . vars vars_def
    5     | .

    $default  reduce using rule 5 (vars)

    vars  go to state 7


state 7

    2 $@2: .  [METHOD]
    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars . $@2 metodo metodo_main END PROGRAM
    4 vars: vars . vars_def
    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO

    DEFINE  shift, and go to state 8

    $default  reduce using rule 2 ($@2)

    $@2       go to state 9
    vars_def  go to state 10


state 8

    8 vars_def: DEFINE . declaracion $@3 AS tipo $@4 asignacion_var PUNTO
    9 declaracion: . APUNTADOR ID
   10            | . ID

    APUNTADOR  shift, and go to state 11
    ID         shift, and go to state 12

    declaracion  go to state 13


state 9

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 . metodo metodo_main END PROGRAM
   70 metodo: . metodo metodo_def
   71       | .

    $default  reduce using rule 71 (metodo)

    metodo  go to state 14


state 10

    4 vars: vars vars_def .

    $default  reduce using rule 4 (vars)


state 11

    9 declaracion: APUNTADOR . ID

    ID  shift, and go to state 15


state 12

   10 declaracion: ID .

    $default  reduce using rule 10 (declaracion)


state 13

    6 $@3: .
    8 vars_def: DEFINE declaracion . $@3 AS tipo $@4 asignacion_var PUNTO

    $default  reduce using rule 6 ($@3)

    $@3  go to state 16


state 14

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo . metodo_main END PROGRAM
   70 metodo: metodo . metodo_def
   74 metodo_main: . METHOD VOID MAIN $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 END METHOD
   78 metodo_def: . METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD

    METHOD  shift, and go to state 17

    metodo_main  go to state 18
    metodo_def   go to state 19


state 15

    9 declaracion: APUNTADOR ID .

    $default  reduce using rule 9 (declaracion)


state 16

    8 vars_def: DEFINE declaracion $@3 . AS tipo $@4 asignacion_var PUNTO

    AS  shift, and go to state 20


state 17

   15 tipo: . INTEGER
   16     | . STRING
   17     | . BOOLEAN
   18     | . DECIMAL
   19     | . VOID
   74 metodo_main: METHOD . VOID MAIN $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 END METHOD
   78 metodo_def: METHOD . tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 25

    tipo  go to state 26


state 18

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main . END PROGRAM

    END  shift, and go to state 27


state 19

   70 metodo: metodo metodo_def .

    $default  reduce using rule 70 (metodo)


state 20

    8 vars_def: DEFINE declaracion $@3 AS . tipo $@4 asignacion_var PUNTO
   15 tipo: . INTEGER
   16     | . STRING
   17     | . BOOLEAN
   18     | . DECIMAL
   19     | . VOID

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    tipo  go to state 29


state 21

   15 tipo: INTEGER .

    $default  reduce using rule 15 (tipo)


state 22

   18 tipo: DECIMAL .

    $default  reduce using rule 18 (tipo)


state 23

   16 tipo: STRING .

    $default  reduce using rule 16 (tipo)


state 24

   17 tipo: BOOLEAN .

    $default  reduce using rule 17 (tipo)


state 25

   19 tipo: VOID .  [ID]
   74 metodo_main: METHOD VOID . MAIN $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 END METHOD

    MAIN  shift, and go to state 30

    $default  reduce using rule 19 (tipo)


state 26

   75 $@11: .
   78 metodo_def: METHOD tipo . $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD

    $default  reduce using rule 75 ($@11)

    $@11  go to state 31


state 27

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END . PROGRAM

    PROGRAM  shift, and go to state 32


state 28

   19 tipo: VOID .

    $default  reduce using rule 19 (tipo)


state 29

    7 $@4: .
    8 vars_def: DEFINE declaracion $@3 AS tipo . $@4 asignacion_var PUNTO

    $default  reduce using rule 7 ($@4)

    $@4  go to state 33


state 30

   72 $@9: .
   74 metodo_main: METHOD VOID MAIN . $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 END METHOD

    $default  reduce using rule 72 ($@9)

    $@9  go to state 34


state 31

   78 metodo_def: METHOD tipo $@11 . ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD

    ID  shift, and go to state 35


state 32

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM .

    $default  reduce using rule 3 (tlaloc)


state 33

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 . asignacion_var PUNTO
   20 asignacion_var: . IGUAL expresion
   21               | . dimension_arreglo
   22               | .  [PUNTO]
   24 dimension_arreglo: . CORCHETE_ABIERTO CTE_INTEGER $@6 CORCHETE_CERRADO
   27                  | . CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO

    CORCHETE_ABIERTO  shift, and go to state 36
    IGUAL             shift, and go to state 37

    $default  reduce using rule 22 (asignacion_var)

    asignacion_var     go to state 38
    dimension_arreglo  go to state 39


state 34

   74 metodo_main: METHOD VOID MAIN $@9 . PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 END METHOD

    PAR_ABIERTO  shift, and go to state 40


state 35

   76 $@12: .
   78 metodo_def: METHOD tipo $@11 ID . $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD

    $default  reduce using rule 76 ($@12)

    $@12  go to state 41


state 36

   24 dimension_arreglo: CORCHETE_ABIERTO . CTE_INTEGER $@6 CORCHETE_CERRADO
   27                  | CORCHETE_ABIERTO . CTE_INTEGER $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO

    CTE_INTEGER  shift, and go to state 42


state 37

   20 asignacion_var: IGUAL . expresion
   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    expresion            go to state 52
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 38

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 asignacion_var . PUNTO

    PUNTO  shift, and go to state 60


state 39

   21 asignacion_var: dimension_arreglo .

    $default  reduce using rule 21 (asignacion_var)


state 40

   15 tipo: . INTEGER
   16     | . STRING
   17     | . BOOLEAN
   18     | . DECIMAL
   19     | . VOID
   74 metodo_main: METHOD VOID MAIN $@9 PAR_ABIERTO . parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 END METHOD
   81 parametros: . parametros_def
   83 parametros_def: . tipo $@14 params parametros_extra
   84               | .  [PAR_CERRADO]

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    $default  reduce using rule 84 (parametros_def)

    tipo            go to state 61
    parametros      go to state 62
    parametros_def  go to state 63


state 41

   78 metodo_def: METHOD tipo $@11 ID $@12 . PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD

    PAR_ABIERTO  shift, and go to state 64


state 42

   23 $@6: .  [CORCHETE_CERRADO]
   24 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER . $@6 CORCHETE_CERRADO
   25 $@7: .  [COMA]
   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER . $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO

    COMA      reduce using rule 25 ($@7)
    $default  reduce using rule 23 ($@6)

    $@6  go to state 65
    $@7  go to state 66


state 43

   69 var: FALSO .

    $default  reduce using rule 69 (var)


state 44

   68 var: VERDADERO .

    $default  reduce using rule 68 (var)


state 45

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   53       | PAR_ABIERTO . expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    expresion            go to state 67
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 46

   56 operadores_binarios: MAS .

    $default  reduce using rule 56 (operadores_binarios)


state 47

   57 operadores_binarios: MENOS .

    $default  reduce using rule 57 (operadores_binarios)


state 48

   64 var: ID .

    $default  reduce using rule 64 (var)


state 49

   66 var: CTE_STRING .

    $default  reduce using rule 66 (var)


state 50

   67 var: CTE_DECIMAL .

    $default  reduce using rule 67 (var)


state 51

   65 var: CTE_INTEGER .

    $default  reduce using rule 65 (var)


state 52

   20 asignacion_var: IGUAL expresion .

    $default  reduce using rule 20 (asignacion_var)


state 53

   28 expresion: exp .  [PAR_CERRADO, MAS, PUNTO]
   29          | exp . operador_logico exp
   37 operador_logico: . AND
   38                | . OR
   39                | . MAYOR_QUE
   40                | . MENOR_QUE
   41                | . DIFERENTE
   42                | . IGUAL_IGUAL
   43                | .  [FALSO, VERDADERO, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, MAS, MENOS, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]

    AND          shift, and go to state 68
    OR           shift, and go to state 69
    IGUAL_IGUAL  shift, and go to state 70
    MENOR_QUE    shift, and go to state 71
    MAYOR_QUE    shift, and go to state 72
    DIFERENTE    shift, and go to state 73

    PAR_CERRADO  reduce using rule 28 (expresion)
    MAS          reduce using rule 28 (expresion)
    MAS          [reduce using rule 43 (operador_logico)]
    PUNTO        reduce using rule 28 (expresion)
    $default     reduce using rule 43 (operador_logico)

    operador_logico  go to state 74


state 54

   44 exp: termino .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, MAS, MENOS, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   45    | termino . MAS termino
   46    | termino . MENOS termino

    MAS    shift, and go to state 75
    MENOS  shift, and go to state 76

    MAS       [reduce using rule 44 (exp)]
    MENOS     [reduce using rule 44 (exp)]
    $default  reduce using rule 44 (exp)


state 55

   47 termino: exponencial .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, MAS, MENOS, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   48        | exponencial . POR exponencial
   49        | exponencial . DIVISION exponencial

    POR       shift, and go to state 77
    DIVISION  shift, and go to state 78

    $default  reduce using rule 47 (termino)


state 56

   50 exponencial: factor .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, POR, MAS, MENOS, DIVISION, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   51            | factor . EXPONENCIAL

    EXPONENCIAL  shift, and go to state 79

    $default  reduce using rule 50 (exponencial)


state 57

   54 factor: factor_alterno .

    $default  reduce using rule 54 (factor)


state 58

   30 funcion_matematica: . math_choices PAR_ABIERTO exp PAR_CERRADO
   31 math_choices: . ABS
   32             | . COS
   33             | . SIN
   34             | . LOG
   35             | . TAN
   36             | . SQRT
   55 factor_alterno: operadores_binarios . factor_alterno_choices
   59 factor_alterno_choices: . CTE_INTEGER
   60                       | . llamado
   61                       | . funcion_matematica
   62                       | . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO
   63                       | . ID
   92 llamado: . ID PAR_ABIERTO exp PAR_CERRADO

    ABS          shift, and go to state 80
    COS          shift, and go to state 81
    SIN          shift, and go to state 82
    LOG          shift, and go to state 83
    TAN          shift, and go to state 84
    SQRT         shift, and go to state 85
    ID           shift, and go to state 86
    CTE_INTEGER  shift, and go to state 87

    funcion_matematica      go to state 88
    math_choices            go to state 89
    factor_alterno_choices  go to state 90
    llamado                 go to state 91


state 59

   52 factor: var .

    $default  reduce using rule 52 (factor)


state 60

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO .

    $default  reduce using rule 8 (vars_def)


state 61

   82 $@14: .
   83 parametros_def: tipo . $@14 params parametros_extra

    $default  reduce using rule 82 ($@14)

    $@14  go to state 92


state 62

   74 metodo_main: METHOD VOID MAIN $@9 PAR_ABIERTO parametros . PAR_CERRADO DOS_PUNTOS metodo_body $@10 END METHOD

    PAR_CERRADO  shift, and go to state 93


state 63

   81 parametros: parametros_def .

    $default  reduce using rule 81 (parametros)


state 64

   15 tipo: . INTEGER
   16     | . STRING
   17     | . BOOLEAN
   18     | . DECIMAL
   19     | . VOID
   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO . parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD
   81 parametros: . parametros_def
   83 parametros_def: . tipo $@14 params parametros_extra
   84               | .  [PAR_CERRADO]

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    $default  reduce using rule 84 (parametros_def)

    tipo            go to state 61
    parametros      go to state 94
    parametros_def  go to state 63


state 65

   24 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@6 . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 95


state 66

   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 . COMA CTE_INTEGER $@8 CORCHETE_CERRADO

    COMA  shift, and go to state 96


state 67

   53 factor: PAR_ABIERTO expresion . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 97


state 68

   37 operador_logico: AND .

    $default  reduce using rule 37 (operador_logico)


state 69

   38 operador_logico: OR .

    $default  reduce using rule 38 (operador_logico)


state 70

   42 operador_logico: IGUAL_IGUAL .

    $default  reduce using rule 42 (operador_logico)


state 71

   40 operador_logico: MENOR_QUE .

    $default  reduce using rule 40 (operador_logico)


state 72

   39 operador_logico: MAYOR_QUE .

    $default  reduce using rule 39 (operador_logico)


state 73

   41 operador_logico: DIFERENTE .

    $default  reduce using rule 41 (operador_logico)


state 74

   29 expresion: exp operador_logico . exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exp                  go to state 98
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 75

   45 exp: termino MAS . termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    termino              go to state 99
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 76

   46 exp: termino MENOS . termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    termino              go to state 100
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 77

   48 termino: exponencial POR . exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exponencial          go to state 101
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 78

   49 termino: exponencial DIVISION . exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exponencial          go to state 102
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 79

   51 exponencial: factor EXPONENCIAL .

    $default  reduce using rule 51 (exponencial)


state 80

   31 math_choices: ABS .

    $default  reduce using rule 31 (math_choices)


state 81

   32 math_choices: COS .

    $default  reduce using rule 32 (math_choices)


state 82

   33 math_choices: SIN .

    $default  reduce using rule 33 (math_choices)


state 83

   34 math_choices: LOG .

    $default  reduce using rule 34 (math_choices)


state 84

   35 math_choices: TAN .

    $default  reduce using rule 35 (math_choices)


state 85

   36 math_choices: SQRT .

    $default  reduce using rule 36 (math_choices)


state 86

   62 factor_alterno_choices: ID . CORCHETE_ABIERTO exp CORCHETE_CERRADO
   63                       | ID .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, POR, MAS, MENOS, DIVISION, EXPONENCIAL, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   92 llamado: ID . PAR_ABIERTO exp PAR_CERRADO

    PAR_ABIERTO       shift, and go to state 103
    CORCHETE_ABIERTO  shift, and go to state 104

    PAR_ABIERTO  [reduce using rule 63 (factor_alterno_choices)]
    $default     reduce using rule 63 (factor_alterno_choices)


state 87

   59 factor_alterno_choices: CTE_INTEGER .

    $default  reduce using rule 59 (factor_alterno_choices)


state 88

   61 factor_alterno_choices: funcion_matematica .

    $default  reduce using rule 61 (factor_alterno_choices)


state 89

   30 funcion_matematica: math_choices . PAR_ABIERTO exp PAR_CERRADO

    PAR_ABIERTO  shift, and go to state 105


state 90

   55 factor_alterno: operadores_binarios factor_alterno_choices .

    $default  reduce using rule 55 (factor_alterno)


state 91

   60 factor_alterno_choices: llamado .

    $default  reduce using rule 60 (factor_alterno_choices)


state 92

   11 params: . APUNTADOR ID
   12       | . ID
   14       | . ID $@5 dimension_arreglo
   83 parametros_def: tipo $@14 . params parametros_extra

    APUNTADOR  shift, and go to state 106
    ID         shift, and go to state 107

    params  go to state 108


state 93

   74 metodo_main: METHOD VOID MAIN $@9 PAR_ABIERTO parametros PAR_CERRADO . DOS_PUNTOS metodo_body $@10 END METHOD

    DOS_PUNTOS  shift, and go to state 109


state 94

   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros . PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD

    PAR_CERRADO  shift, and go to state 110


state 95

   24 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@6 CORCHETE_CERRADO .

    $default  reduce using rule 24 (dimension_arreglo)


state 96

   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 COMA . CTE_INTEGER $@8 CORCHETE_CERRADO

    CTE_INTEGER  shift, and go to state 111


state 97

   53 factor: PAR_ABIERTO expresion PAR_CERRADO .

    $default  reduce using rule 53 (factor)


state 98

   29 expresion: exp operador_logico exp .

    $default  reduce using rule 29 (expresion)


state 99

   45 exp: termino MAS termino .

    $default  reduce using rule 45 (exp)


state 100

   46 exp: termino MENOS termino .

    $default  reduce using rule 46 (exp)


state 101

   48 termino: exponencial POR exponencial .

    $default  reduce using rule 48 (termino)


state 102

   49 termino: exponencial DIVISION exponencial .

    $default  reduce using rule 49 (termino)


state 103

   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
   92 llamado: ID PAR_ABIERTO . exp PAR_CERRADO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exp                  go to state 112
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 104

   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   62 factor_alterno_choices: ID CORCHETE_ABIERTO . exp CORCHETE_CERRADO
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exp                  go to state 113
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 105

   30 funcion_matematica: math_choices PAR_ABIERTO . exp PAR_CERRADO
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exp                  go to state 114
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 106

   11 params: APUNTADOR . ID

    ID  shift, and go to state 115


state 107

   12 params: ID .  [PAR_CERRADO, COMA]
   13 $@5: .  [CORCHETE_ABIERTO]
   14 params: ID . $@5 dimension_arreglo

    CORCHETE_ABIERTO  reduce using rule 13 ($@5)
    $default          reduce using rule 12 (params)

    $@5  go to state 116


state 108

   83 parametros_def: tipo $@14 params . parametros_extra
   85 parametros_extra: . COMA parametros_def
   86                 | .  [PAR_CERRADO]

    COMA  shift, and go to state 117

    $default  reduce using rule 86 (parametros_extra)

    parametros_extra  go to state 118


state 109

   74 metodo_main: METHOD VOID MAIN $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS . metodo_body $@10 END METHOD
   79 metodo_body: . metodo_body body_code
   80            | .

    $default  reduce using rule 80 (metodo_body)

    metodo_body  go to state 119


state 110

   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO . DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD

    DOS_PUNTOS  shift, and go to state 120


state 111

   26 $@8: .
   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER . $@8 CORCHETE_CERRADO

    $default  reduce using rule 26 ($@8)

    $@8  go to state 121


state 112

   92 llamado: ID PAR_ABIERTO exp . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 122


state 113

   62 factor_alterno_choices: ID CORCHETE_ABIERTO exp . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 123


state 114

   30 funcion_matematica: math_choices PAR_ABIERTO exp . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 124


state 115

   11 params: APUNTADOR ID .

    $default  reduce using rule 11 (params)


state 116

   14 params: ID $@5 . dimension_arreglo
   24 dimension_arreglo: . CORCHETE_ABIERTO CTE_INTEGER $@6 CORCHETE_CERRADO
   27                  | . CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO

    CORCHETE_ABIERTO  shift, and go to state 36

    dimension_arreglo  go to state 125


state 117

   15 tipo: . INTEGER
   16     | . STRING
   17     | . BOOLEAN
   18     | . DECIMAL
   19     | . VOID
   83 parametros_def: . tipo $@14 params parametros_extra
   84               | .  [PAR_CERRADO]
   85 parametros_extra: COMA . parametros_def

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    $default  reduce using rule 84 (parametros_def)

    tipo            go to state 61
    parametros_def  go to state 126


state 118

   83 parametros_def: tipo $@14 params parametros_extra .

    $default  reduce using rule 83 (parametros_def)


state 119

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   73 $@10: .  [END]
   74 metodo_main: METHOD VOID MAIN $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body . $@10 END METHOD
   79 metodo_body: metodo_body . body_code
   87 body_code: . vars_def
   88          | . asignacion
   89          | . estatuto
   90          | . llamado PUNTO
   91          | . default_functions
   92 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   93 asignacion: . ID IGUAL expresion PUNTO
   94           | . array_assignment
   95 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   97 estatuto: . if_statement
   98         | . for_statement
   99         | . while_statement
  100         | . select_statement
  101 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  102 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  105 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  106 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  110 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  111                  | . read
  112 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  120 default_choices: . PRINT
  121                | . PRINTLINE

    PRINT      shift, and go to state 127
    PRINTLINE  shift, and go to state 128
    READ       shift, and go to state 129
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 130
    WHILE      shift, and go to state 131
    IF         shift, and go to state 132
    SELECT     shift, and go to state 133
    ID         shift, and go to state 134

    $default  reduce using rule 73 ($@10)

    vars_def           go to state 135
    $@10               go to state 136
    body_code          go to state 137
    llamado            go to state 138
    asignacion         go to state 139
    array_assignment   go to state 140
    estatuto           go to state 141
    if_statement       go to state 142
    for_statement      go to state 143
    while_statement    go to state 144
    select_statement   go to state 145
    default_functions  go to state 146
    read               go to state 147
    default_choices    go to state 148


state 120

   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS . metodo_body $@13 RETURN expresion PUNTO END METHOD
   79 metodo_body: . metodo_body body_code
   80            | .

    $default  reduce using rule 80 (metodo_body)

    metodo_body  go to state 149


state 121

   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER $@8 . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 150


state 122

   92 llamado: ID PAR_ABIERTO exp PAR_CERRADO .

    $default  reduce using rule 92 (llamado)


state 123

   62 factor_alterno_choices: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO .

    $default  reduce using rule 62 (factor_alterno_choices)


state 124

   30 funcion_matematica: math_choices PAR_ABIERTO exp PAR_CERRADO .

    $default  reduce using rule 30 (funcion_matematica)


state 125

   14 params: ID $@5 dimension_arreglo .

    $default  reduce using rule 14 (params)


state 126

   85 parametros_extra: COMA parametros_def .

    $default  reduce using rule 85 (parametros_extra)


state 127

  120 default_choices: PRINT .

    $default  reduce using rule 120 (default_choices)


state 128

  121 default_choices: PRINTLINE .

    $default  reduce using rule 121 (default_choices)


state 129

  112 read: READ . PAR_ABIERTO ID ids PAR_CERRADO PUNTO

    PAR_ABIERTO  shift, and go to state 151


state 130

  102 for_statement: FOR . ID IGUAL exp TO exp for_step END FOR

    ID  shift, and go to state 152


state 131

  105 while_statement: WHILE . PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    PAR_ABIERTO  shift, and go to state 153


state 132

  101 if_statement: IF . PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    PAR_ABIERTO  shift, and go to state 154


state 133

  106 select_statement: SELECT . ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    ID  shift, and go to state 155


state 134

   92 llamado: ID . PAR_ABIERTO exp PAR_CERRADO
   93 asignacion: ID . IGUAL expresion PUNTO
   95 array_assignment: ID . CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | ID . CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    PAR_ABIERTO       shift, and go to state 103
    CORCHETE_ABIERTO  shift, and go to state 156
    IGUAL             shift, and go to state 157


state 135

   87 body_code: vars_def .

    $default  reduce using rule 87 (body_code)


state 136

   74 metodo_main: METHOD VOID MAIN $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 . END METHOD

    END  shift, and go to state 158


state 137

   79 metodo_body: metodo_body body_code .

    $default  reduce using rule 79 (metodo_body)


state 138

   90 body_code: llamado . PUNTO

    PUNTO  shift, and go to state 159


state 139

   88 body_code: asignacion .

    $default  reduce using rule 88 (body_code)


state 140

   94 asignacion: array_assignment .

    $default  reduce using rule 94 (asignacion)


state 141

   89 body_code: estatuto .

    $default  reduce using rule 89 (body_code)


state 142

   97 estatuto: if_statement .

    $default  reduce using rule 97 (estatuto)


state 143

   98 estatuto: for_statement .

    $default  reduce using rule 98 (estatuto)


state 144

   99 estatuto: while_statement .

    $default  reduce using rule 99 (estatuto)


state 145

  100 estatuto: select_statement .

    $default  reduce using rule 100 (estatuto)


state 146

   91 body_code: default_functions .

    $default  reduce using rule 91 (body_code)


state 147

  111 default_functions: read .

    $default  reduce using rule 111 (default_functions)


state 148

  110 default_functions: default_choices . PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO

    PAR_ABIERTO  shift, and go to state 160


state 149

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   77 $@13: .  [RETURN]
   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body . $@13 RETURN expresion PUNTO END METHOD
   79 metodo_body: metodo_body . body_code
   87 body_code: . vars_def
   88          | . asignacion
   89          | . estatuto
   90          | . llamado PUNTO
   91          | . default_functions
   92 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   93 asignacion: . ID IGUAL expresion PUNTO
   94           | . array_assignment
   95 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   97 estatuto: . if_statement
   98         | . for_statement
   99         | . while_statement
  100         | . select_statement
  101 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  102 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  105 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  106 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  110 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  111                  | . read
  112 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  120 default_choices: . PRINT
  121                | . PRINTLINE

    PRINT      shift, and go to state 127
    PRINTLINE  shift, and go to state 128
    READ       shift, and go to state 129
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 130
    WHILE      shift, and go to state 131
    IF         shift, and go to state 132
    SELECT     shift, and go to state 133
    ID         shift, and go to state 134

    $default  reduce using rule 77 ($@13)

    vars_def           go to state 135
    $@13               go to state 161
    body_code          go to state 137
    llamado            go to state 138
    asignacion         go to state 139
    array_assignment   go to state 140
    estatuto           go to state 141
    if_statement       go to state 142
    for_statement      go to state 143
    while_statement    go to state 144
    select_statement   go to state 145
    default_functions  go to state 146
    read               go to state 147
    default_choices    go to state 148


state 150

   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO .

    $default  reduce using rule 27 (dimension_arreglo)


state 151

  112 read: READ PAR_ABIERTO . ID ids PAR_CERRADO PUNTO

    ID  shift, and go to state 162


state 152

  102 for_statement: FOR ID . IGUAL exp TO exp for_step END FOR

    IGUAL  shift, and go to state 163


state 153

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
  105 while_statement: WHILE PAR_ABIERTO . expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    expresion            go to state 164
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 154

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
  101 if_statement: IF PAR_ABIERTO . expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    expresion            go to state 165
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 155

  106 select_statement: SELECT ID . DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DOS_PUNTOS  shift, and go to state 166


state 156

   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
   95 array_assignment: ID CORCHETE_ABIERTO . exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | ID CORCHETE_ABIERTO . exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exp                  go to state 167
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 157

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
   93 asignacion: ID IGUAL . expresion PUNTO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    expresion            go to state 168
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 158

   74 metodo_main: METHOD VOID MAIN $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 END . METHOD

    METHOD  shift, and go to state 169


state 159

   90 body_code: llamado PUNTO .

    $default  reduce using rule 90 (body_code)


state 160

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
  110 default_functions: default_choices PAR_ABIERTO . default_function_input_def default_function_input PAR_CERRADO PUNTO
  118 default_function_input_def: . expresion
  119                           | . COMILLAS CTE_STRING COMILLAS

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    COMILLAS     shift, and go to state 170
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    expresion                   go to state 171
    exp                         go to state 53
    termino                     go to state 54
    exponencial                 go to state 55
    factor                      go to state 56
    factor_alterno              go to state 57
    operadores_binarios         go to state 58
    var                         go to state 59
    default_function_input_def  go to state 172


state 161

   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 . RETURN expresion PUNTO END METHOD

    RETURN  shift, and go to state 173


state 162

  112 read: READ PAR_ABIERTO ID . ids PAR_CERRADO PUNTO
  113 ids: . ids_def ids
  114    | .  [PAR_CERRADO]
  115 ids_def: . COMA ID

    COMA  shift, and go to state 174

    $default  reduce using rule 114 (ids)

    ids      go to state 175
    ids_def  go to state 176


state 163

   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
  102 for_statement: FOR ID IGUAL . exp TO exp for_step END FOR

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exp                  go to state 177
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 164

  105 while_statement: WHILE PAR_ABIERTO expresion . PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    PAR_CERRADO  shift, and go to state 178


state 165

  101 if_statement: IF PAR_ABIERTO expresion . PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    PAR_CERRADO  shift, and go to state 179


state 166

  106 select_statement: SELECT ID DOS_PUNTOS . CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    CASE  shift, and go to state 180


state 167

   95 array_assignment: ID CORCHETE_ABIERTO exp . CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | ID CORCHETE_ABIERTO exp . COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    COMA              shift, and go to state 181
    CORCHETE_CERRADO  shift, and go to state 182


state 168

   93 asignacion: ID IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 183


state 169

   74 metodo_main: METHOD VOID MAIN $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 END METHOD .

    $default  reduce using rule 74 (metodo_main)


state 170

  119 default_function_input_def: COMILLAS . CTE_STRING COMILLAS

    CTE_STRING  shift, and go to state 184


state 171

  118 default_function_input_def: expresion .

    $default  reduce using rule 118 (default_function_input_def)


state 172

  110 default_functions: default_choices PAR_ABIERTO default_function_input_def . default_function_input PAR_CERRADO PUNTO
  116 default_function_input: . MAS default_function_input_def default_function_input
  117                       | .  [PAR_CERRADO]

    MAS  shift, and go to state 185

    $default  reduce using rule 117 (default_function_input)

    default_function_input  go to state 186


state 173

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN . expresion PUNTO END METHOD

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    expresion            go to state 187
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 174

  115 ids_def: COMA . ID

    ID  shift, and go to state 188


state 175

  112 read: READ PAR_ABIERTO ID ids . PAR_CERRADO PUNTO

    PAR_CERRADO  shift, and go to state 189


state 176

  113 ids: . ids_def ids
  113    | ids_def . ids
  114    | .  [PAR_CERRADO]
  115 ids_def: . COMA ID

    COMA  shift, and go to state 174

    $default  reduce using rule 114 (ids)

    ids      go to state 190
    ids_def  go to state 176


state 177

  102 for_statement: FOR ID IGUAL exp . TO exp for_step END FOR

    TO  shift, and go to state 191


state 178

  105 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO . DOS_PUNTOS metodo_body END WHILE

    DOS_PUNTOS  shift, and go to state 192


state 179

  101 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO . DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    DOS_PUNTOS  shift, and go to state 193


state 180

  106 select_statement: SELECT ID DOS_PUNTOS CASE . DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DEFAULT  shift, and go to state 194


state 181

   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
   96 array_assignment: ID CORCHETE_ABIERTO exp COMA . exp CORCHETE_CERRADO IGUAL expresion PUNTO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exp                  go to state 195
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 182

   95 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 196


state 183

   93 asignacion: ID IGUAL expresion PUNTO .

    $default  reduce using rule 93 (asignacion)


state 184

  119 default_function_input_def: COMILLAS CTE_STRING . COMILLAS

    COMILLAS  shift, and go to state 197


state 185

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
  116 default_function_input: MAS . default_function_input_def default_function_input
  118 default_function_input_def: . expresion
  119                           | . COMILLAS CTE_STRING COMILLAS

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    COMILLAS     shift, and go to state 170
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    expresion                   go to state 171
    exp                         go to state 53
    termino                     go to state 54
    exponencial                 go to state 55
    factor                      go to state 56
    factor_alterno              go to state 57
    operadores_binarios         go to state 58
    var                         go to state 59
    default_function_input_def  go to state 198


state 186

  110 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input . PAR_CERRADO PUNTO

    PAR_CERRADO  shift, and go to state 199


state 187

   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion . PUNTO END METHOD

    PUNTO  shift, and go to state 200


state 188

  115 ids_def: COMA ID .

    $default  reduce using rule 115 (ids_def)


state 189

  112 read: READ PAR_ABIERTO ID ids PAR_CERRADO . PUNTO

    PUNTO  shift, and go to state 201


state 190

  113 ids: ids_def ids .

    $default  reduce using rule 113 (ids)


state 191

   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
  102 for_statement: FOR ID IGUAL exp TO . exp for_step END FOR

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exp                  go to state 202
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 192

   79 metodo_body: . metodo_body body_code
   80            | .
  105 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS . metodo_body END WHILE

    $default  reduce using rule 80 (metodo_body)

    metodo_body  go to state 203


state 193

   79 metodo_body: . metodo_body body_code
   80            | .
  101 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS . metodo_body ELSE DOS_PUNTOS metodo_body END IF

    $default  reduce using rule 80 (metodo_body)

    metodo_body  go to state 204


state 194

  106 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT . DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DOS_PUNTOS  shift, and go to state 205


state 195

   96 array_assignment: ID CORCHETE_ABIERTO exp COMA exp . CORCHETE_CERRADO IGUAL expresion PUNTO

    CORCHETE_CERRADO  shift, and go to state 206


state 196

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
   95 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL . expresion PUNTO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    expresion            go to state 207
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 197

  119 default_function_input_def: COMILLAS CTE_STRING COMILLAS .

    $default  reduce using rule 119 (default_function_input_def)


state 198

  116 default_function_input: . MAS default_function_input_def default_function_input
  116                       | MAS default_function_input_def . default_function_input
  117                       | .  [PAR_CERRADO]

    MAS  shift, and go to state 185

    $default  reduce using rule 117 (default_function_input)

    default_function_input  go to state 208


state 199

  110 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO . PUNTO

    PUNTO  shift, and go to state 209


state 200

   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO . END METHOD

    END  shift, and go to state 210


state 201

  112 read: READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO .

    $default  reduce using rule 112 (read)


state 202

  102 for_statement: FOR ID IGUAL exp TO exp . for_step END FOR
  103 for_step: . DOS_PUNTOS metodo_body
  104         | . STEP exp DOS_PUNTOS metodo_body

    STEP        shift, and go to state 211
    DOS_PUNTOS  shift, and go to state 212

    for_step  go to state 213


state 203

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   79 metodo_body: metodo_body . body_code
   87 body_code: . vars_def
   88          | . asignacion
   89          | . estatuto
   90          | . llamado PUNTO
   91          | . default_functions
   92 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   93 asignacion: . ID IGUAL expresion PUNTO
   94           | . array_assignment
   95 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   97 estatuto: . if_statement
   98         | . for_statement
   99         | . while_statement
  100         | . select_statement
  101 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  102 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  105 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  105                | WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body . END WHILE
  106 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  110 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  111                  | . read
  112 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  120 default_choices: . PRINT
  121                | . PRINTLINE

    PRINT      shift, and go to state 127
    PRINTLINE  shift, and go to state 128
    READ       shift, and go to state 129
    DEFINE     shift, and go to state 8
    END        shift, and go to state 214
    FOR        shift, and go to state 130
    WHILE      shift, and go to state 131
    IF         shift, and go to state 132
    SELECT     shift, and go to state 133
    ID         shift, and go to state 134

    vars_def           go to state 135
    body_code          go to state 137
    llamado            go to state 138
    asignacion         go to state 139
    array_assignment   go to state 140
    estatuto           go to state 141
    if_statement       go to state 142
    for_statement      go to state 143
    while_statement    go to state 144
    select_statement   go to state 145
    default_functions  go to state 146
    read               go to state 147
    default_choices    go to state 148


state 204

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   79 metodo_body: metodo_body . body_code
   87 body_code: . vars_def
   88          | . asignacion
   89          | . estatuto
   90          | . llamado PUNTO
   91          | . default_functions
   92 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   93 asignacion: . ID IGUAL expresion PUNTO
   94           | . array_assignment
   95 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   97 estatuto: . if_statement
   98         | . for_statement
   99         | . while_statement
  100         | . select_statement
  101 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  101             | IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body . ELSE DOS_PUNTOS metodo_body END IF
  102 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  105 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  106 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  110 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  111                  | . read
  112 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  120 default_choices: . PRINT
  121                | . PRINTLINE

    PRINT      shift, and go to state 127
    PRINTLINE  shift, and go to state 128
    READ       shift, and go to state 129
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 130
    WHILE      shift, and go to state 131
    IF         shift, and go to state 132
    SELECT     shift, and go to state 133
    ELSE       shift, and go to state 215
    ID         shift, and go to state 134

    vars_def           go to state 135
    body_code          go to state 137
    llamado            go to state 138
    asignacion         go to state 139
    array_assignment   go to state 140
    estatuto           go to state 141
    if_statement       go to state 142
    for_statement      go to state 143
    while_statement    go to state 144
    select_statement   go to state 145
    default_functions  go to state 146
    read               go to state 147
    default_choices    go to state 148


state 205

   79 metodo_body: . metodo_body body_code
   80            | .
  106 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS . metodo_body END CASE case_statement END SELECT

    $default  reduce using rule 80 (metodo_body)

    metodo_body  go to state 216


state 206

   96 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 217


state 207

   95 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 218


state 208

  116 default_function_input: MAS default_function_input_def default_function_input .

    $default  reduce using rule 116 (default_function_input)


state 209

  110 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO .

    $default  reduce using rule 110 (default_functions)


state 210

   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END . METHOD

    METHOD  shift, and go to state 219


state 211

   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
  104 for_step: STEP . exp DOS_PUNTOS metodo_body

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    exp                  go to state 220
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 212

   79 metodo_body: . metodo_body body_code
   80            | .
  103 for_step: DOS_PUNTOS . metodo_body

    $default  reduce using rule 80 (metodo_body)

    metodo_body  go to state 221


state 213

  102 for_statement: FOR ID IGUAL exp TO exp for_step . END FOR

    END  shift, and go to state 222


state 214

  105 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END . WHILE

    WHILE  shift, and go to state 223


state 215

  101 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE . DOS_PUNTOS metodo_body END IF

    DOS_PUNTOS  shift, and go to state 224


state 216

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   79 metodo_body: metodo_body . body_code
   87 body_code: . vars_def
   88          | . asignacion
   89          | . estatuto
   90          | . llamado PUNTO
   91          | . default_functions
   92 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   93 asignacion: . ID IGUAL expresion PUNTO
   94           | . array_assignment
   95 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   97 estatuto: . if_statement
   98         | . for_statement
   99         | . while_statement
  100         | . select_statement
  101 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  102 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  105 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  106 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  106                 | SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body . END CASE case_statement END SELECT
  110 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  111                  | . read
  112 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  120 default_choices: . PRINT
  121                | . PRINTLINE

    PRINT      shift, and go to state 127
    PRINTLINE  shift, and go to state 128
    READ       shift, and go to state 129
    DEFINE     shift, and go to state 8
    END        shift, and go to state 225
    FOR        shift, and go to state 130
    WHILE      shift, and go to state 131
    IF         shift, and go to state 132
    SELECT     shift, and go to state 133
    ID         shift, and go to state 134

    vars_def           go to state 135
    body_code          go to state 137
    llamado            go to state 138
    asignacion         go to state 139
    array_assignment   go to state 140
    estatuto           go to state 141
    if_statement       go to state 142
    for_statement      go to state 143
    while_statement    go to state 144
    select_statement   go to state 145
    default_functions  go to state 146
    read               go to state 147
    default_choices    go to state 148


state 217

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   45    | . termino MAS termino
   46    | . termino MENOS termino
   47 termino: . exponencial
   48        | . exponencial POR exponencial
   49        | . exponencial DIVISION exponencial
   50 exponencial: . factor
   51            | . factor EXPONENCIAL
   52 factor: . var
   53       | . PAR_ABIERTO expresion PAR_CERRADO
   54       | . factor_alterno
   55 factor_alterno: . operadores_binarios factor_alterno_choices
   56 operadores_binarios: . MAS
   57                    | . MENOS
   58                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 var: . ID
   65    | . CTE_INTEGER
   66    | . CTE_STRING
   67    | . CTE_DECIMAL
   68    | . VERDADERO
   69    | . FALSO
   96 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL . expresion PUNTO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 58 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 58 (operadores_binarios)]
    $default     reduce using rule 58 (operadores_binarios)

    expresion            go to state 226
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 218

   95 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO .

    $default  reduce using rule 95 (array_assignment)


state 219

   78 metodo_def: METHOD tipo $@11 ID $@12 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@13 RETURN expresion PUNTO END METHOD .

    $default  reduce using rule 78 (metodo_def)


state 220

  104 for_step: STEP exp . DOS_PUNTOS metodo_body

    DOS_PUNTOS  shift, and go to state 227


state 221

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   79 metodo_body: metodo_body . body_code
   87 body_code: . vars_def
   88          | . asignacion
   89          | . estatuto
   90          | . llamado PUNTO
   91          | . default_functions
   92 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   93 asignacion: . ID IGUAL expresion PUNTO
   94           | . array_assignment
   95 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   97 estatuto: . if_statement
   98         | . for_statement
   99         | . while_statement
  100         | . select_statement
  101 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  102 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  103 for_step: DOS_PUNTOS metodo_body .  [END]
  105 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  106 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  110 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  111                  | . read
  112 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  120 default_choices: . PRINT
  121                | . PRINTLINE

    PRINT      shift, and go to state 127
    PRINTLINE  shift, and go to state 128
    READ       shift, and go to state 129
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 130
    WHILE      shift, and go to state 131
    IF         shift, and go to state 132
    SELECT     shift, and go to state 133
    ID         shift, and go to state 134

    $default  reduce using rule 103 (for_step)

    vars_def           go to state 135
    body_code          go to state 137
    llamado            go to state 138
    asignacion         go to state 139
    array_assignment   go to state 140
    estatuto           go to state 141
    if_statement       go to state 142
    for_statement      go to state 143
    while_statement    go to state 144
    select_statement   go to state 145
    default_functions  go to state 146
    read               go to state 147
    default_choices    go to state 148


state 222

  102 for_statement: FOR ID IGUAL exp TO exp for_step END . FOR

    FOR  shift, and go to state 228


state 223

  105 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE .

    $default  reduce using rule 105 (while_statement)


state 224

   79 metodo_body: . metodo_body body_code
   80            | .
  101 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS . metodo_body END IF

    $default  reduce using rule 80 (metodo_body)

    metodo_body  go to state 229


state 225

  106 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END . CASE case_statement END SELECT

    CASE  shift, and go to state 230


state 226

   96 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 231


state 227

   79 metodo_body: . metodo_body body_code
   80            | .
  104 for_step: STEP exp DOS_PUNTOS . metodo_body

    $default  reduce using rule 80 (metodo_body)

    metodo_body  go to state 232


state 228

  102 for_statement: FOR ID IGUAL exp TO exp for_step END FOR .

    $default  reduce using rule 102 (for_statement)


state 229

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   79 metodo_body: metodo_body . body_code
   87 body_code: . vars_def
   88          | . asignacion
   89          | . estatuto
   90          | . llamado PUNTO
   91          | . default_functions
   92 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   93 asignacion: . ID IGUAL expresion PUNTO
   94           | . array_assignment
   95 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   97 estatuto: . if_statement
   98         | . for_statement
   99         | . while_statement
  100         | . select_statement
  101 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  101             | IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body . END IF
  102 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  105 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  106 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  110 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  111                  | . read
  112 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  120 default_choices: . PRINT
  121                | . PRINTLINE

    PRINT      shift, and go to state 127
    PRINTLINE  shift, and go to state 128
    READ       shift, and go to state 129
    DEFINE     shift, and go to state 8
    END        shift, and go to state 233
    FOR        shift, and go to state 130
    WHILE      shift, and go to state 131
    IF         shift, and go to state 132
    SELECT     shift, and go to state 133
    ID         shift, and go to state 134

    vars_def           go to state 135
    body_code          go to state 137
    llamado            go to state 138
    asignacion         go to state 139
    array_assignment   go to state 140
    estatuto           go to state 141
    if_statement       go to state 142
    for_statement      go to state 143
    while_statement    go to state 144
    select_statement   go to state 145
    default_functions  go to state 146
    read               go to state 147
    default_choices    go to state 148


state 230

  106 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE . case_statement END SELECT
  107 case_statement: . case_statement_def case_statement
  108               | .  [END]
  109 case_statement_def: . CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CASE  shift, and go to state 234

    $default  reduce using rule 108 (case_statement)

    case_statement      go to state 235
    case_statement_def  go to state 236


state 231

   96 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO .

    $default  reduce using rule 96 (array_assignment)


state 232

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   79 metodo_body: metodo_body . body_code
   87 body_code: . vars_def
   88          | . asignacion
   89          | . estatuto
   90          | . llamado PUNTO
   91          | . default_functions
   92 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   93 asignacion: . ID IGUAL expresion PUNTO
   94           | . array_assignment
   95 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   97 estatuto: . if_statement
   98         | . for_statement
   99         | . while_statement
  100         | . select_statement
  101 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  102 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  104 for_step: STEP exp DOS_PUNTOS metodo_body .  [END]
  105 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  106 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  110 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  111                  | . read
  112 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  120 default_choices: . PRINT
  121                | . PRINTLINE

    PRINT      shift, and go to state 127
    PRINTLINE  shift, and go to state 128
    READ       shift, and go to state 129
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 130
    WHILE      shift, and go to state 131
    IF         shift, and go to state 132
    SELECT     shift, and go to state 133
    ID         shift, and go to state 134

    $default  reduce using rule 104 (for_step)

    vars_def           go to state 135
    body_code          go to state 137
    llamado            go to state 138
    asignacion         go to state 139
    array_assignment   go to state 140
    estatuto           go to state 141
    if_statement       go to state 142
    for_statement      go to state 143
    while_statement    go to state 144
    select_statement   go to state 145
    default_functions  go to state 146
    read               go to state 147
    default_choices    go to state 148


state 233

  101 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END . IF

    IF  shift, and go to state 237


state 234

  109 case_statement_def: CASE . CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CTE_INTEGER  shift, and go to state 238


state 235

  106 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement . END SELECT

    END  shift, and go to state 239


state 236

  107 case_statement: . case_statement_def case_statement
  107               | case_statement_def . case_statement
  108               | .  [END]
  109 case_statement_def: . CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CASE  shift, and go to state 234

    $default  reduce using rule 108 (case_statement)

    case_statement      go to state 240
    case_statement_def  go to state 236


state 237

  101 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF .

    $default  reduce using rule 101 (if_statement)


state 238

  109 case_statement_def: CASE CTE_INTEGER . DOS_PUNTOS metodo_body END CASE

    DOS_PUNTOS  shift, and go to state 241


state 239

  106 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END . SELECT

    SELECT  shift, and go to state 242


state 240

  107 case_statement: case_statement_def case_statement .

    $default  reduce using rule 107 (case_statement)


state 241

   79 metodo_body: . metodo_body body_code
   80            | .
  109 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS . metodo_body END CASE

    $default  reduce using rule 80 (metodo_body)

    metodo_body  go to state 243


state 242

  106 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT .

    $default  reduce using rule 106 (select_statement)


state 243

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   79 metodo_body: metodo_body . body_code
   87 body_code: . vars_def
   88          | . asignacion
   89          | . estatuto
   90          | . llamado PUNTO
   91          | . default_functions
   92 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   93 asignacion: . ID IGUAL expresion PUNTO
   94           | . array_assignment
   95 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   96                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   97 estatuto: . if_statement
   98         | . for_statement
   99         | . while_statement
  100         | . select_statement
  101 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  102 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  105 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  106 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  109 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body . END CASE
  110 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  111                  | . read
  112 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  120 default_choices: . PRINT
  121                | . PRINTLINE

    PRINT      shift, and go to state 127
    PRINTLINE  shift, and go to state 128
    READ       shift, and go to state 129
    DEFINE     shift, and go to state 8
    END        shift, and go to state 244
    FOR        shift, and go to state 130
    WHILE      shift, and go to state 131
    IF         shift, and go to state 132
    SELECT     shift, and go to state 133
    ID         shift, and go to state 134

    vars_def           go to state 135
    body_code          go to state 137
    llamado            go to state 138
    asignacion         go to state 139
    array_assignment   go to state 140
    estatuto           go to state 141
    if_statement       go to state 142
    for_statement      go to state 143
    while_statement    go to state 144
    select_statement   go to state 145
    default_functions  go to state 146
    read               go to state 147
    default_choices    go to state 148


state 244

  109 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END . CASE

    CASE  shift, and go to state 245


state 245

  109 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE .

    $default  reduce using rule 109 (case_statement_def)
