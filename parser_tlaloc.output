State 38 conflicts: 2 shift/reduce
State 47 conflicts: 2 shift/reduce
State 55 conflicts: 1 reduce/reduce
State 56 conflicts: 2 shift/reduce
State 75 conflicts: 2 shift/reduce
State 76 conflicts: 2 shift/reduce
State 77 conflicts: 2 shift/reduce
State 78 conflicts: 2 shift/reduce
State 79 conflicts: 2 shift/reduce
State 87 conflicts: 1 shift/reduce
State 104 conflicts: 2 shift/reduce
State 105 conflicts: 2 shift/reduce
State 106 conflicts: 2 shift/reduce
State 142 conflicts: 2 shift/reduce
State 143 conflicts: 2 shift/reduce
State 145 conflicts: 2 shift/reduce
State 146 conflicts: 2 shift/reduce
State 149 conflicts: 2 shift/reduce
State 152 conflicts: 2 shift/reduce
State 162 conflicts: 2 shift/reduce
State 170 conflicts: 2 shift/reduce
State 174 conflicts: 2 shift/reduce
State 180 conflicts: 2 shift/reduce
State 185 conflicts: 2 shift/reduce
State 200 conflicts: 2 shift/reduce
State 206 conflicts: 2 shift/reduce


Grammar

    0 $accept: tlaloc $end

    1 @1: /* empty */

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars metodo metodo_main END PROGRAM

    3 vars: vars vars_def
    4     | /* empty */

    5 @2: /* empty */

    6 @3: /* empty */

    7 vars_def: DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO

    8 declaracion: APUNTADOR ID
    9            | ID

   10 tipo: INTEGER
   11     | STRING
   12     | BOOLEAN
   13     | DECIMAL
   14     | VOID

   15 asignacion_var: IGUAL expresion
   16               | CORCHETE_ABIERTO CTE_INTEGER CORCHETE_CERRADO
   17               | CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO
   18               | /* empty */

   19 expresion: exp
   20          | exp operador_logico exp

   21 funcion_matematica: math_choices PAR_ABIERTO exp PAR_CERRADO

   22 math_choices: ABS
   23             | COS
   24             | SIN
   25             | LOG
   26             | TAN
   27             | SQRT

   28 operador_logico: AND
   29                | OR
   30                | MAYOR_QUE
   31                | MENOR_QUE
   32                | DIFERENTE
   33                | IGUAL_IGUAL
   34                | /* empty */

   35 exp: termino
   36    | termino MAS termino
   37    | termino MENOS termino

   38 termino: exponencial
   39        | exponencial POR exponencial
   40        | exponencial DIVISION exponencial

   41 exponencial: factor
   42            | factor EXPONENCIAL

   43 factor: var
   44       | PAR_ABIERTO expresion PAR_CERRADO
   45       | factor_alterno

   46 factor_alterno: operadores_binarios factor_alterno_choices

   47 operadores_binarios: MAS
   48                    | MENOS
   49                    | /* empty */

   50 factor_alterno_choices: CTE_INTEGER
   51                       | llamado
   52                       | funcion_matematica
   53                       | ID CORCHETE_ABIERTO exp CORCHETE_CERRADO
   54                       | ID

   55 var: ID
   56    | CTE_INTEGER
   57    | CTE_STRING
   58    | CTE_DECIMAL
   59    | VERDADERO
   60    | FALSO

   61 metodo: metodo metodo_def
   62       | /* empty */

   63 @4: /* empty */

   64 @5: /* empty */

   65 metodo_main: METHOD VOID MAIN @4 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @5 END METHOD

   66 @6: /* empty */

   67 @7: /* empty */

   68 @8: /* empty */

   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD

   70 metodo_body: metodo_body body_code
   71            | /* empty */

   72 parametros: parametros_def

   73 parametros_def: tipo declaracion parametros_extra
   74               | /* empty */

   75 parametros_extra: COMA parametros_def
   76                 | /* empty */

   77 body_code: vars_def
   78          | asignacion
   79          | estatuto
   80          | llamado PUNTO
   81          | default_functions

   82 llamado: ID PAR_ABIERTO exp PAR_CERRADO

   83 asignacion: ID IGUAL expresion PUNTO
   84           | array_assignment

   85 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

   87 estatuto: if_statement
   88         | for_statement
   89         | while_statement
   90         | select_statement

   91 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

   92 for_statement: FOR ID IGUAL exp TO exp for_step END FOR

   93 for_step: DOS_PUNTOS metodo_body
   94         | STEP exp DOS_PUNTOS metodo_body

   95 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

   96 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

   97 case_statement: case_statement_def case_statement
   98               | /* empty */

   99 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

  100 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  101                  | read

  102 read: READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO

  103 ids: ids_def ids
  104    | /* empty */

  105 ids_def: COMA ID

  106 default_function_input: MAS default_function_input_def default_function_input
  107                       | /* empty */

  108 default_function_input_def: expresion
  109                           | COMILLAS CTE_STRING COMILLAS

  110 default_choices: PRINT
  111                | PRINTLINE


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 2
METHOD (259) 65 69
PRINT (260) 110
PRINTLINE (261) 111
READ (262) 102
CASE (263) 96 99
DEFAULT (264) 96
DEFINE (265) 7
AS (266) 7
TO (267) 92
STEP (268) 94
INTEGER (269) 10
DECIMAL (270) 13
MAIN (271) 65
STRING (272) 11
BOOLEAN (273) 12
END (274) 2 65 69 91 92 95 96 99
FALSO (275) 60
VERDADERO (276) 59
VOID (277) 14 65
RETURN (278) 69
AND (279) 28
OR (280) 29
ABS (281) 22
COS (282) 23
SIN (283) 24
LOG (284) 25
TAN (285) 26
SQRT (286) 27
FOR (287) 92
WHILE (288) 95
IF (289) 91
SELECT (290) 96
ELSE (291) 91
PAR_ABIERTO (292) 21 44 65 69 82 91 95 100 102
PAR_CERRADO (293) 21 44 65 69 82 91 95 100 102
COMA (294) 17 75 86 105
DOS_PUNTOS (295) 2 65 69 91 93 94 95 96 99
CORCHETE_ABIERTO (296) 16 17 53 85 86
CORCHETE_CERRADO (297) 16 17 53 85 86
IGUAL (298) 15 83 85 86 92
IGUAL_IGUAL (299) 33
MENOR_QUE (300) 31
MAYOR_QUE (301) 30
DIFERENTE (302) 32
POR (303) 39
MAS (304) 36 47 106
MENOS (305) 37 48
DIVISION (306) 40
EXPONENCIAL (307) 42
PUNTO (308) 7 69 80 83 85 86 100 102
APUNTADOR (309) 8
COMILLAS (310) 109
ID (311) 2 8 9 53 54 55 69 82 83 85 86 92 96 102 105
CTE_STRING (312) 57 109
CTE_DECIMAL (313) 58
CTE_INTEGER (314) 16 17 50 56 99


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
tlaloc (61)
    on left: 2, on right: 0
@1 (62)
    on left: 1, on right: 2
vars (63)
    on left: 3 4, on right: 2 3
vars_def (64)
    on left: 7, on right: 3 77
@2 (65)
    on left: 5, on right: 7
@3 (66)
    on left: 6, on right: 7
declaracion (67)
    on left: 8 9, on right: 7 73
tipo (68)
    on left: 10 11 12 13 14, on right: 7 69 73
asignacion_var (69)
    on left: 15 16 17 18, on right: 7
expresion (70)
    on left: 19 20, on right: 15 44 69 83 85 86 91 95 108
funcion_matematica (71)
    on left: 21, on right: 52
math_choices (72)
    on left: 22 23 24 25 26 27, on right: 21
operador_logico (73)
    on left: 28 29 30 31 32 33 34, on right: 20
exp (74)
    on left: 35 36 37, on right: 19 20 21 53 82 85 86 92 94
termino (75)
    on left: 38 39 40, on right: 35 36 37
exponencial (76)
    on left: 41 42, on right: 38 39 40
factor (77)
    on left: 43 44 45, on right: 41 42
factor_alterno (78)
    on left: 46, on right: 45
operadores_binarios (79)
    on left: 47 48 49, on right: 46
factor_alterno_choices (80)
    on left: 50 51 52 53 54, on right: 46
var (81)
    on left: 55 56 57 58 59 60, on right: 43
metodo (82)
    on left: 61 62, on right: 2 61
metodo_main (83)
    on left: 65, on right: 2
@4 (84)
    on left: 63, on right: 65
@5 (85)
    on left: 64, on right: 65
metodo_def (86)
    on left: 69, on right: 61
@6 (87)
    on left: 66, on right: 69
@7 (88)
    on left: 67, on right: 69
@8 (89)
    on left: 68, on right: 69
metodo_body (90)
    on left: 70 71, on right: 65 69 70 91 93 94 95 96 99
parametros (91)
    on left: 72, on right: 65 69
parametros_def (92)
    on left: 73 74, on right: 72 75
parametros_extra (93)
    on left: 75 76, on right: 73
body_code (94)
    on left: 77 78 79 80 81, on right: 70
llamado (95)
    on left: 82, on right: 51 80
asignacion (96)
    on left: 83 84, on right: 78
array_assignment (97)
    on left: 85 86, on right: 84
estatuto (98)
    on left: 87 88 89 90, on right: 79
if_statement (99)
    on left: 91, on right: 87
for_statement (100)
    on left: 92, on right: 88
for_step (101)
    on left: 93 94, on right: 92
while_statement (102)
    on left: 95, on right: 89
select_statement (103)
    on left: 96, on right: 90
case_statement (104)
    on left: 97 98, on right: 96 97
case_statement_def (105)
    on left: 99, on right: 97
default_functions (106)
    on left: 100 101, on right: 81
read (107)
    on left: 102, on right: 101
ids (108)
    on left: 103 104, on right: 102 103
ids_def (109)
    on left: 105, on right: 103
default_function_input (110)
    on left: 106 107, on right: 100 106
default_function_input_def (111)
    on left: 108 109, on right: 100 106
default_choices (112)
    on left: 110 111, on right: 100


state 0

    0 $accept: . tlaloc $end
    2 tlaloc: . PROGRAM ID @1 DOS_PUNTOS vars metodo metodo_main END PROGRAM

    PROGRAM  shift, and go to state 1

    tlaloc  go to state 2


state 1

    2 tlaloc: PROGRAM . ID @1 DOS_PUNTOS vars metodo metodo_main END PROGRAM

    ID  shift, and go to state 3


state 2

    0 $accept: tlaloc . $end

    $end  shift, and go to state 4


state 3

    1 @1: .
    2 tlaloc: PROGRAM ID . @1 DOS_PUNTOS vars metodo metodo_main END PROGRAM

    $default  reduce using rule 1 (@1)

    @1  go to state 5


state 4

    0 $accept: tlaloc $end .

    $default  accept


state 5

    2 tlaloc: PROGRAM ID @1 . DOS_PUNTOS vars metodo metodo_main END PROGRAM

    DOS_PUNTOS  shift, and go to state 6


state 6

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS . vars metodo metodo_main END PROGRAM
    3 vars: . vars vars_def
    4     | .

    $default  reduce using rule 4 (vars)

    vars  go to state 7


state 7

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars . metodo metodo_main END PROGRAM
    3 vars: vars . vars_def
    7 vars_def: . DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO
   61 metodo: . metodo metodo_def
   62       | .  [METHOD]

    DEFINE  shift, and go to state 8

    $default  reduce using rule 62 (metodo)

    vars_def  go to state 9
    metodo    go to state 10


state 8

    7 vars_def: DEFINE . declaracion @2 AS tipo @3 asignacion_var PUNTO
    8 declaracion: . APUNTADOR ID
    9            | . ID

    APUNTADOR  shift, and go to state 11
    ID         shift, and go to state 12

    declaracion  go to state 13


state 9

    3 vars: vars vars_def .

    $default  reduce using rule 3 (vars)


state 10

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars metodo . metodo_main END PROGRAM
   61 metodo: metodo . metodo_def
   65 metodo_main: . METHOD VOID MAIN @4 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @5 END METHOD
   69 metodo_def: . METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD

    METHOD  shift, and go to state 14

    metodo_main  go to state 15
    metodo_def   go to state 16


state 11

    8 declaracion: APUNTADOR . ID

    ID  shift, and go to state 17


state 12

    9 declaracion: ID .

    $default  reduce using rule 9 (declaracion)


state 13

    5 @2: .
    7 vars_def: DEFINE declaracion . @2 AS tipo @3 asignacion_var PUNTO

    $default  reduce using rule 5 (@2)

    @2  go to state 18


state 14

   10 tipo: . INTEGER
   11     | . STRING
   12     | . BOOLEAN
   13     | . DECIMAL
   14     | . VOID
   65 metodo_main: METHOD . VOID MAIN @4 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @5 END METHOD
   69 metodo_def: METHOD . tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD

    INTEGER  shift, and go to state 19
    DECIMAL  shift, and go to state 20
    STRING   shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    VOID     shift, and go to state 23

    tipo  go to state 24


state 15

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars metodo metodo_main . END PROGRAM

    END  shift, and go to state 25


state 16

   61 metodo: metodo metodo_def .

    $default  reduce using rule 61 (metodo)


state 17

    8 declaracion: APUNTADOR ID .

    $default  reduce using rule 8 (declaracion)


state 18

    7 vars_def: DEFINE declaracion @2 . AS tipo @3 asignacion_var PUNTO

    AS  shift, and go to state 26


state 19

   10 tipo: INTEGER .

    $default  reduce using rule 10 (tipo)


state 20

   13 tipo: DECIMAL .

    $default  reduce using rule 13 (tipo)


state 21

   11 tipo: STRING .

    $default  reduce using rule 11 (tipo)


state 22

   12 tipo: BOOLEAN .

    $default  reduce using rule 12 (tipo)


state 23

   14 tipo: VOID .  [ID]
   65 metodo_main: METHOD VOID . MAIN @4 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @5 END METHOD

    MAIN  shift, and go to state 27

    $default  reduce using rule 14 (tipo)


state 24

   66 @6: .
   69 metodo_def: METHOD tipo . @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD

    $default  reduce using rule 66 (@6)

    @6  go to state 28


state 25

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars metodo metodo_main END . PROGRAM

    PROGRAM  shift, and go to state 29


state 26

    7 vars_def: DEFINE declaracion @2 AS . tipo @3 asignacion_var PUNTO
   10 tipo: . INTEGER
   11     | . STRING
   12     | . BOOLEAN
   13     | . DECIMAL
   14     | . VOID

    INTEGER  shift, and go to state 19
    DECIMAL  shift, and go to state 20
    STRING   shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    VOID     shift, and go to state 30

    tipo  go to state 31


state 27

   63 @4: .
   65 metodo_main: METHOD VOID MAIN . @4 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @5 END METHOD

    $default  reduce using rule 63 (@4)

    @4  go to state 32


state 28

   69 metodo_def: METHOD tipo @6 . ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD

    ID  shift, and go to state 33


state 29

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars metodo metodo_main END PROGRAM .

    $default  reduce using rule 2 (tlaloc)


state 30

   14 tipo: VOID .

    $default  reduce using rule 14 (tipo)


state 31

    6 @3: .
    7 vars_def: DEFINE declaracion @2 AS tipo . @3 asignacion_var PUNTO

    $default  reduce using rule 6 (@3)

    @3  go to state 34


state 32

   65 metodo_main: METHOD VOID MAIN @4 . PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @5 END METHOD

    PAR_ABIERTO  shift, and go to state 35


state 33

   67 @7: .
   69 metodo_def: METHOD tipo @6 ID . @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD

    $default  reduce using rule 67 (@7)

    @7  go to state 36


state 34

    7 vars_def: DEFINE declaracion @2 AS tipo @3 . asignacion_var PUNTO
   15 asignacion_var: . IGUAL expresion
   16               | . CORCHETE_ABIERTO CTE_INTEGER CORCHETE_CERRADO
   17               | . CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO
   18               | .  [PUNTO]

    CORCHETE_ABIERTO  shift, and go to state 37
    IGUAL             shift, and go to state 38

    $default  reduce using rule 18 (asignacion_var)

    asignacion_var  go to state 39


state 35

   10 tipo: . INTEGER
   11     | . STRING
   12     | . BOOLEAN
   13     | . DECIMAL
   14     | . VOID
   65 metodo_main: METHOD VOID MAIN @4 PAR_ABIERTO . parametros PAR_CERRADO DOS_PUNTOS metodo_body @5 END METHOD
   72 parametros: . parametros_def
   73 parametros_def: . tipo declaracion parametros_extra
   74               | .  [PAR_CERRADO]

    INTEGER  shift, and go to state 19
    DECIMAL  shift, and go to state 20
    STRING   shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    VOID     shift, and go to state 30

    $default  reduce using rule 74 (parametros_def)

    tipo            go to state 40
    parametros      go to state 41
    parametros_def  go to state 42


state 36

   69 metodo_def: METHOD tipo @6 ID @7 . PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD

    PAR_ABIERTO  shift, and go to state 43


state 37

   16 asignacion_var: CORCHETE_ABIERTO . CTE_INTEGER CORCHETE_CERRADO
   17               | CORCHETE_ABIERTO . CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO

    CTE_INTEGER  shift, and go to state 44


state 38

   15 asignacion_var: IGUAL . expresion
   19 expresion: . exp
   20          | . exp operador_logico exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    expresion            go to state 54
    exp                  go to state 55
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 39

    7 vars_def: DEFINE declaracion @2 AS tipo @3 asignacion_var . PUNTO

    PUNTO  shift, and go to state 62


state 40

    8 declaracion: . APUNTADOR ID
    9            | . ID
   73 parametros_def: tipo . declaracion parametros_extra

    APUNTADOR  shift, and go to state 11
    ID         shift, and go to state 12

    declaracion  go to state 63


state 41

   65 metodo_main: METHOD VOID MAIN @4 PAR_ABIERTO parametros . PAR_CERRADO DOS_PUNTOS metodo_body @5 END METHOD

    PAR_CERRADO  shift, and go to state 64


state 42

   72 parametros: parametros_def .

    $default  reduce using rule 72 (parametros)


state 43

   10 tipo: . INTEGER
   11     | . STRING
   12     | . BOOLEAN
   13     | . DECIMAL
   14     | . VOID
   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO . parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD
   72 parametros: . parametros_def
   73 parametros_def: . tipo declaracion parametros_extra
   74               | .  [PAR_CERRADO]

    INTEGER  shift, and go to state 19
    DECIMAL  shift, and go to state 20
    STRING   shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    VOID     shift, and go to state 30

    $default  reduce using rule 74 (parametros_def)

    tipo            go to state 40
    parametros      go to state 65
    parametros_def  go to state 42


state 44

   16 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER . CORCHETE_CERRADO
   17               | CORCHETE_ABIERTO CTE_INTEGER . COMA CTE_INTEGER CORCHETE_CERRADO

    COMA              shift, and go to state 66
    CORCHETE_CERRADO  shift, and go to state 67


state 45

   60 var: FALSO .

    $default  reduce using rule 60 (var)


state 46

   59 var: VERDADERO .

    $default  reduce using rule 59 (var)


state 47

   19 expresion: . exp
   20          | . exp operador_logico exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   44       | PAR_ABIERTO . expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    expresion            go to state 68
    exp                  go to state 55
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 48

   47 operadores_binarios: MAS .

    $default  reduce using rule 47 (operadores_binarios)


state 49

   48 operadores_binarios: MENOS .

    $default  reduce using rule 48 (operadores_binarios)


state 50

   55 var: ID .

    $default  reduce using rule 55 (var)


state 51

   57 var: CTE_STRING .

    $default  reduce using rule 57 (var)


state 52

   58 var: CTE_DECIMAL .

    $default  reduce using rule 58 (var)


state 53

   56 var: CTE_INTEGER .

    $default  reduce using rule 56 (var)


state 54

   15 asignacion_var: IGUAL expresion .

    $default  reduce using rule 15 (asignacion_var)


state 55

   19 expresion: exp .  [PAR_CERRADO, MAS, PUNTO]
   20          | exp . operador_logico exp
   28 operador_logico: . AND
   29                | . OR
   30                | . MAYOR_QUE
   31                | . MENOR_QUE
   32                | . DIFERENTE
   33                | . IGUAL_IGUAL
   34                | .  [FALSO, VERDADERO, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, MAS, MENOS, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]

    AND          shift, and go to state 69
    OR           shift, and go to state 70
    IGUAL_IGUAL  shift, and go to state 71
    MENOR_QUE    shift, and go to state 72
    MAYOR_QUE    shift, and go to state 73
    DIFERENTE    shift, and go to state 74

    PAR_CERRADO  reduce using rule 19 (expresion)
    MAS          reduce using rule 19 (expresion)
    MAS          [reduce using rule 34 (operador_logico)]
    PUNTO        reduce using rule 19 (expresion)
    $default     reduce using rule 34 (operador_logico)

    operador_logico  go to state 75


state 56

   35 exp: termino .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, MAS, MENOS, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   36    | termino . MAS termino
   37    | termino . MENOS termino

    MAS    shift, and go to state 76
    MENOS  shift, and go to state 77

    MAS       [reduce using rule 35 (exp)]
    MENOS     [reduce using rule 35 (exp)]
    $default  reduce using rule 35 (exp)


state 57

   38 termino: exponencial .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, MAS, MENOS, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   39        | exponencial . POR exponencial
   40        | exponencial . DIVISION exponencial

    POR       shift, and go to state 78
    DIVISION  shift, and go to state 79

    $default  reduce using rule 38 (termino)


state 58

   41 exponencial: factor .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, POR, MAS, MENOS, DIVISION, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   42            | factor . EXPONENCIAL

    EXPONENCIAL  shift, and go to state 80

    $default  reduce using rule 41 (exponencial)


state 59

   45 factor: factor_alterno .

    $default  reduce using rule 45 (factor)


state 60

   21 funcion_matematica: . math_choices PAR_ABIERTO exp PAR_CERRADO
   22 math_choices: . ABS
   23             | . COS
   24             | . SIN
   25             | . LOG
   26             | . TAN
   27             | . SQRT
   46 factor_alterno: operadores_binarios . factor_alterno_choices
   50 factor_alterno_choices: . CTE_INTEGER
   51                       | . llamado
   52                       | . funcion_matematica
   53                       | . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO
   54                       | . ID
   82 llamado: . ID PAR_ABIERTO exp PAR_CERRADO

    ABS          shift, and go to state 81
    COS          shift, and go to state 82
    SIN          shift, and go to state 83
    LOG          shift, and go to state 84
    TAN          shift, and go to state 85
    SQRT         shift, and go to state 86
    ID           shift, and go to state 87
    CTE_INTEGER  shift, and go to state 88

    funcion_matematica      go to state 89
    math_choices            go to state 90
    factor_alterno_choices  go to state 91
    llamado                 go to state 92


state 61

   43 factor: var .

    $default  reduce using rule 43 (factor)


state 62

    7 vars_def: DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO .

    $default  reduce using rule 7 (vars_def)


state 63

   73 parametros_def: tipo declaracion . parametros_extra
   75 parametros_extra: . COMA parametros_def
   76                 | .  [PAR_CERRADO]

    COMA  shift, and go to state 93

    $default  reduce using rule 76 (parametros_extra)

    parametros_extra  go to state 94


state 64

   65 metodo_main: METHOD VOID MAIN @4 PAR_ABIERTO parametros PAR_CERRADO . DOS_PUNTOS metodo_body @5 END METHOD

    DOS_PUNTOS  shift, and go to state 95


state 65

   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros . PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD

    PAR_CERRADO  shift, and go to state 96


state 66

   17 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER COMA . CTE_INTEGER CORCHETE_CERRADO

    CTE_INTEGER  shift, and go to state 97


state 67

   16 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER CORCHETE_CERRADO .

    $default  reduce using rule 16 (asignacion_var)


state 68

   44 factor: PAR_ABIERTO expresion . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 98


state 69

   28 operador_logico: AND .

    $default  reduce using rule 28 (operador_logico)


state 70

   29 operador_logico: OR .

    $default  reduce using rule 29 (operador_logico)


state 71

   33 operador_logico: IGUAL_IGUAL .

    $default  reduce using rule 33 (operador_logico)


state 72

   31 operador_logico: MENOR_QUE .

    $default  reduce using rule 31 (operador_logico)


state 73

   30 operador_logico: MAYOR_QUE .

    $default  reduce using rule 30 (operador_logico)


state 74

   32 operador_logico: DIFERENTE .

    $default  reduce using rule 32 (operador_logico)


state 75

   20 expresion: exp operador_logico . exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exp                  go to state 99
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 76

   36 exp: termino MAS . termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    termino              go to state 100
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 77

   37 exp: termino MENOS . termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    termino              go to state 101
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 78

   39 termino: exponencial POR . exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exponencial          go to state 102
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 79

   40 termino: exponencial DIVISION . exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exponencial          go to state 103
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 80

   42 exponencial: factor EXPONENCIAL .

    $default  reduce using rule 42 (exponencial)


state 81

   22 math_choices: ABS .

    $default  reduce using rule 22 (math_choices)


state 82

   23 math_choices: COS .

    $default  reduce using rule 23 (math_choices)


state 83

   24 math_choices: SIN .

    $default  reduce using rule 24 (math_choices)


state 84

   25 math_choices: LOG .

    $default  reduce using rule 25 (math_choices)


state 85

   26 math_choices: TAN .

    $default  reduce using rule 26 (math_choices)


state 86

   27 math_choices: SQRT .

    $default  reduce using rule 27 (math_choices)


state 87

   53 factor_alterno_choices: ID . CORCHETE_ABIERTO exp CORCHETE_CERRADO
   54                       | ID .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, POR, MAS, MENOS, DIVISION, EXPONENCIAL, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   82 llamado: ID . PAR_ABIERTO exp PAR_CERRADO

    PAR_ABIERTO       shift, and go to state 104
    CORCHETE_ABIERTO  shift, and go to state 105

    PAR_ABIERTO  [reduce using rule 54 (factor_alterno_choices)]
    $default     reduce using rule 54 (factor_alterno_choices)


state 88

   50 factor_alterno_choices: CTE_INTEGER .

    $default  reduce using rule 50 (factor_alterno_choices)


state 89

   52 factor_alterno_choices: funcion_matematica .

    $default  reduce using rule 52 (factor_alterno_choices)


state 90

   21 funcion_matematica: math_choices . PAR_ABIERTO exp PAR_CERRADO

    PAR_ABIERTO  shift, and go to state 106


state 91

   46 factor_alterno: operadores_binarios factor_alterno_choices .

    $default  reduce using rule 46 (factor_alterno)


state 92

   51 factor_alterno_choices: llamado .

    $default  reduce using rule 51 (factor_alterno_choices)


state 93

   10 tipo: . INTEGER
   11     | . STRING
   12     | . BOOLEAN
   13     | . DECIMAL
   14     | . VOID
   73 parametros_def: . tipo declaracion parametros_extra
   74               | .  [PAR_CERRADO]
   75 parametros_extra: COMA . parametros_def

    INTEGER  shift, and go to state 19
    DECIMAL  shift, and go to state 20
    STRING   shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    VOID     shift, and go to state 30

    $default  reduce using rule 74 (parametros_def)

    tipo            go to state 40
    parametros_def  go to state 107


state 94

   73 parametros_def: tipo declaracion parametros_extra .

    $default  reduce using rule 73 (parametros_def)


state 95

   65 metodo_main: METHOD VOID MAIN @4 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS . metodo_body @5 END METHOD
   70 metodo_body: . metodo_body body_code
   71            | .

    $default  reduce using rule 71 (metodo_body)

    metodo_body  go to state 108


state 96

   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO . DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD

    DOS_PUNTOS  shift, and go to state 109


state 97

   17 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 110


state 98

   44 factor: PAR_ABIERTO expresion PAR_CERRADO .

    $default  reduce using rule 44 (factor)


state 99

   20 expresion: exp operador_logico exp .

    $default  reduce using rule 20 (expresion)


state 100

   36 exp: termino MAS termino .

    $default  reduce using rule 36 (exp)


state 101

   37 exp: termino MENOS termino .

    $default  reduce using rule 37 (exp)


state 102

   39 termino: exponencial POR exponencial .

    $default  reduce using rule 39 (termino)


state 103

   40 termino: exponencial DIVISION exponencial .

    $default  reduce using rule 40 (termino)


state 104

   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   82 llamado: ID PAR_ABIERTO . exp PAR_CERRADO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exp                  go to state 111
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 105

   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 factor_alterno_choices: ID CORCHETE_ABIERTO . exp CORCHETE_CERRADO
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exp                  go to state 112
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 106

   21 funcion_matematica: math_choices PAR_ABIERTO . exp PAR_CERRADO
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exp                  go to state 113
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 107

   75 parametros_extra: COMA parametros_def .

    $default  reduce using rule 75 (parametros_extra)


state 108

    7 vars_def: . DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO
   64 @5: .  [END]
   65 metodo_main: METHOD VOID MAIN @4 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body . @5 END METHOD
   70 metodo_body: metodo_body . body_code
   77 body_code: . vars_def
   78          | . asignacion
   79          | . estatuto
   80          | . llamado PUNTO
   81          | . default_functions
   82 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   83 asignacion: . ID IGUAL expresion PUNTO
   84           | . array_assignment
   85 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   87 estatuto: . if_statement
   88         | . for_statement
   89         | . while_statement
   90         | . select_statement
   91 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   92 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   95 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   96 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  100 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  101                  | . read
  102 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  110 default_choices: . PRINT
  111                | . PRINTLINE

    PRINT      shift, and go to state 114
    PRINTLINE  shift, and go to state 115
    READ       shift, and go to state 116
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    $default  reduce using rule 64 (@5)

    vars_def           go to state 122
    @5                 go to state 123
    body_code          go to state 124
    llamado            go to state 125
    asignacion         go to state 126
    array_assignment   go to state 127
    estatuto           go to state 128
    if_statement       go to state 129
    for_statement      go to state 130
    while_statement    go to state 131
    select_statement   go to state 132
    default_functions  go to state 133
    read               go to state 134
    default_choices    go to state 135


state 109

   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS . metodo_body @8 RETURN expresion PUNTO END METHOD
   70 metodo_body: . metodo_body body_code
   71            | .

    $default  reduce using rule 71 (metodo_body)

    metodo_body  go to state 136


state 110

   17 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO .

    $default  reduce using rule 17 (asignacion_var)


state 111

   82 llamado: ID PAR_ABIERTO exp . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 137


state 112

   53 factor_alterno_choices: ID CORCHETE_ABIERTO exp . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 138


state 113

   21 funcion_matematica: math_choices PAR_ABIERTO exp . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 139


state 114

  110 default_choices: PRINT .

    $default  reduce using rule 110 (default_choices)


state 115

  111 default_choices: PRINTLINE .

    $default  reduce using rule 111 (default_choices)


state 116

  102 read: READ . PAR_ABIERTO ID ids PAR_CERRADO PUNTO

    PAR_ABIERTO  shift, and go to state 140


state 117

   92 for_statement: FOR . ID IGUAL exp TO exp for_step END FOR

    ID  shift, and go to state 141


state 118

   95 while_statement: WHILE . PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    PAR_ABIERTO  shift, and go to state 142


state 119

   91 if_statement: IF . PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    PAR_ABIERTO  shift, and go to state 143


state 120

   96 select_statement: SELECT . ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    ID  shift, and go to state 144


state 121

   82 llamado: ID . PAR_ABIERTO exp PAR_CERRADO
   83 asignacion: ID . IGUAL expresion PUNTO
   85 array_assignment: ID . CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | ID . CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    PAR_ABIERTO       shift, and go to state 104
    CORCHETE_ABIERTO  shift, and go to state 145
    IGUAL             shift, and go to state 146


state 122

   77 body_code: vars_def .

    $default  reduce using rule 77 (body_code)


state 123

   65 metodo_main: METHOD VOID MAIN @4 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @5 . END METHOD

    END  shift, and go to state 147


state 124

   70 metodo_body: metodo_body body_code .

    $default  reduce using rule 70 (metodo_body)


state 125

   80 body_code: llamado . PUNTO

    PUNTO  shift, and go to state 148


state 126

   78 body_code: asignacion .

    $default  reduce using rule 78 (body_code)


state 127

   84 asignacion: array_assignment .

    $default  reduce using rule 84 (asignacion)


state 128

   79 body_code: estatuto .

    $default  reduce using rule 79 (body_code)


state 129

   87 estatuto: if_statement .

    $default  reduce using rule 87 (estatuto)


state 130

   88 estatuto: for_statement .

    $default  reduce using rule 88 (estatuto)


state 131

   89 estatuto: while_statement .

    $default  reduce using rule 89 (estatuto)


state 132

   90 estatuto: select_statement .

    $default  reduce using rule 90 (estatuto)


state 133

   81 body_code: default_functions .

    $default  reduce using rule 81 (body_code)


state 134

  101 default_functions: read .

    $default  reduce using rule 101 (default_functions)


state 135

  100 default_functions: default_choices . PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO

    PAR_ABIERTO  shift, and go to state 149


state 136

    7 vars_def: . DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO
   68 @8: .  [RETURN]
   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body . @8 RETURN expresion PUNTO END METHOD
   70 metodo_body: metodo_body . body_code
   77 body_code: . vars_def
   78          | . asignacion
   79          | . estatuto
   80          | . llamado PUNTO
   81          | . default_functions
   82 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   83 asignacion: . ID IGUAL expresion PUNTO
   84           | . array_assignment
   85 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   87 estatuto: . if_statement
   88         | . for_statement
   89         | . while_statement
   90         | . select_statement
   91 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   92 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   95 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   96 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  100 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  101                  | . read
  102 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  110 default_choices: . PRINT
  111                | . PRINTLINE

    PRINT      shift, and go to state 114
    PRINTLINE  shift, and go to state 115
    READ       shift, and go to state 116
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    $default  reduce using rule 68 (@8)

    vars_def           go to state 122
    @8                 go to state 150
    body_code          go to state 124
    llamado            go to state 125
    asignacion         go to state 126
    array_assignment   go to state 127
    estatuto           go to state 128
    if_statement       go to state 129
    for_statement      go to state 130
    while_statement    go to state 131
    select_statement   go to state 132
    default_functions  go to state 133
    read               go to state 134
    default_choices    go to state 135


state 137

   82 llamado: ID PAR_ABIERTO exp PAR_CERRADO .

    $default  reduce using rule 82 (llamado)


state 138

   53 factor_alterno_choices: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO .

    $default  reduce using rule 53 (factor_alterno_choices)


state 139

   21 funcion_matematica: math_choices PAR_ABIERTO exp PAR_CERRADO .

    $default  reduce using rule 21 (funcion_matematica)


state 140

  102 read: READ PAR_ABIERTO . ID ids PAR_CERRADO PUNTO

    ID  shift, and go to state 151


state 141

   92 for_statement: FOR ID . IGUAL exp TO exp for_step END FOR

    IGUAL  shift, and go to state 152


state 142

   19 expresion: . exp
   20          | . exp operador_logico exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   95 while_statement: WHILE PAR_ABIERTO . expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    expresion            go to state 153
    exp                  go to state 55
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 143

   19 expresion: . exp
   20          | . exp operador_logico exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   91 if_statement: IF PAR_ABIERTO . expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    expresion            go to state 154
    exp                  go to state 55
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 144

   96 select_statement: SELECT ID . DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DOS_PUNTOS  shift, and go to state 155


state 145

   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   85 array_assignment: ID CORCHETE_ABIERTO . exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | ID CORCHETE_ABIERTO . exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exp                  go to state 156
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 146

   19 expresion: . exp
   20          | . exp operador_logico exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   83 asignacion: ID IGUAL . expresion PUNTO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    expresion            go to state 157
    exp                  go to state 55
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 147

   65 metodo_main: METHOD VOID MAIN @4 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @5 END . METHOD

    METHOD  shift, and go to state 158


state 148

   80 body_code: llamado PUNTO .

    $default  reduce using rule 80 (body_code)


state 149

   19 expresion: . exp
   20          | . exp operador_logico exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
  100 default_functions: default_choices PAR_ABIERTO . default_function_input_def default_function_input PAR_CERRADO PUNTO
  108 default_function_input_def: . expresion
  109                           | . COMILLAS CTE_STRING COMILLAS

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    COMILLAS     shift, and go to state 159
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    expresion                   go to state 160
    exp                         go to state 55
    termino                     go to state 56
    exponencial                 go to state 57
    factor                      go to state 58
    factor_alterno              go to state 59
    operadores_binarios         go to state 60
    var                         go to state 61
    default_function_input_def  go to state 161


state 150

   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 . RETURN expresion PUNTO END METHOD

    RETURN  shift, and go to state 162


state 151

  102 read: READ PAR_ABIERTO ID . ids PAR_CERRADO PUNTO
  103 ids: . ids_def ids
  104    | .  [PAR_CERRADO]
  105 ids_def: . COMA ID

    COMA  shift, and go to state 163

    $default  reduce using rule 104 (ids)

    ids      go to state 164
    ids_def  go to state 165


state 152

   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   92 for_statement: FOR ID IGUAL . exp TO exp for_step END FOR

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exp                  go to state 166
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 153

   95 while_statement: WHILE PAR_ABIERTO expresion . PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    PAR_CERRADO  shift, and go to state 167


state 154

   91 if_statement: IF PAR_ABIERTO expresion . PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    PAR_CERRADO  shift, and go to state 168


state 155

   96 select_statement: SELECT ID DOS_PUNTOS . CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    CASE  shift, and go to state 169


state 156

   85 array_assignment: ID CORCHETE_ABIERTO exp . CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | ID CORCHETE_ABIERTO exp . COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    COMA              shift, and go to state 170
    CORCHETE_CERRADO  shift, and go to state 171


state 157

   83 asignacion: ID IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 172


state 158

   65 metodo_main: METHOD VOID MAIN @4 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @5 END METHOD .

    $default  reduce using rule 65 (metodo_main)


state 159

  109 default_function_input_def: COMILLAS . CTE_STRING COMILLAS

    CTE_STRING  shift, and go to state 173


state 160

  108 default_function_input_def: expresion .

    $default  reduce using rule 108 (default_function_input_def)


state 161

  100 default_functions: default_choices PAR_ABIERTO default_function_input_def . default_function_input PAR_CERRADO PUNTO
  106 default_function_input: . MAS default_function_input_def default_function_input
  107                       | .  [PAR_CERRADO]

    MAS  shift, and go to state 174

    $default  reduce using rule 107 (default_function_input)

    default_function_input  go to state 175


state 162

   19 expresion: . exp
   20          | . exp operador_logico exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN . expresion PUNTO END METHOD

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    expresion            go to state 176
    exp                  go to state 55
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 163

  105 ids_def: COMA . ID

    ID  shift, and go to state 177


state 164

  102 read: READ PAR_ABIERTO ID ids . PAR_CERRADO PUNTO

    PAR_CERRADO  shift, and go to state 178


state 165

  103 ids: . ids_def ids
  103    | ids_def . ids
  104    | .  [PAR_CERRADO]
  105 ids_def: . COMA ID

    COMA  shift, and go to state 163

    $default  reduce using rule 104 (ids)

    ids      go to state 179
    ids_def  go to state 165


state 166

   92 for_statement: FOR ID IGUAL exp . TO exp for_step END FOR

    TO  shift, and go to state 180


state 167

   95 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO . DOS_PUNTOS metodo_body END WHILE

    DOS_PUNTOS  shift, and go to state 181


state 168

   91 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO . DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    DOS_PUNTOS  shift, and go to state 182


state 169

   96 select_statement: SELECT ID DOS_PUNTOS CASE . DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DEFAULT  shift, and go to state 183


state 170

   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   86 array_assignment: ID CORCHETE_ABIERTO exp COMA . exp CORCHETE_CERRADO IGUAL expresion PUNTO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exp                  go to state 184
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 171

   85 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 185


state 172

   83 asignacion: ID IGUAL expresion PUNTO .

    $default  reduce using rule 83 (asignacion)


state 173

  109 default_function_input_def: COMILLAS CTE_STRING . COMILLAS

    COMILLAS  shift, and go to state 186


state 174

   19 expresion: . exp
   20          | . exp operador_logico exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
  106 default_function_input: MAS . default_function_input_def default_function_input
  108 default_function_input_def: . expresion
  109                           | . COMILLAS CTE_STRING COMILLAS

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    COMILLAS     shift, and go to state 159
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    expresion                   go to state 160
    exp                         go to state 55
    termino                     go to state 56
    exponencial                 go to state 57
    factor                      go to state 58
    factor_alterno              go to state 59
    operadores_binarios         go to state 60
    var                         go to state 61
    default_function_input_def  go to state 187


state 175

  100 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input . PAR_CERRADO PUNTO

    PAR_CERRADO  shift, and go to state 188


state 176

   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion . PUNTO END METHOD

    PUNTO  shift, and go to state 189


state 177

  105 ids_def: COMA ID .

    $default  reduce using rule 105 (ids_def)


state 178

  102 read: READ PAR_ABIERTO ID ids PAR_CERRADO . PUNTO

    PUNTO  shift, and go to state 190


state 179

  103 ids: ids_def ids .

    $default  reduce using rule 103 (ids)


state 180

   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   92 for_statement: FOR ID IGUAL exp TO . exp for_step END FOR

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exp                  go to state 191
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 181

   70 metodo_body: . metodo_body body_code
   71            | .
   95 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS . metodo_body END WHILE

    $default  reduce using rule 71 (metodo_body)

    metodo_body  go to state 192


state 182

   70 metodo_body: . metodo_body body_code
   71            | .
   91 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS . metodo_body ELSE DOS_PUNTOS metodo_body END IF

    $default  reduce using rule 71 (metodo_body)

    metodo_body  go to state 193


state 183

   96 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT . DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DOS_PUNTOS  shift, and go to state 194


state 184

   86 array_assignment: ID CORCHETE_ABIERTO exp COMA exp . CORCHETE_CERRADO IGUAL expresion PUNTO

    CORCHETE_CERRADO  shift, and go to state 195


state 185

   19 expresion: . exp
   20          | . exp operador_logico exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   85 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL . expresion PUNTO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    expresion            go to state 196
    exp                  go to state 55
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 186

  109 default_function_input_def: COMILLAS CTE_STRING COMILLAS .

    $default  reduce using rule 109 (default_function_input_def)


state 187

  106 default_function_input: . MAS default_function_input_def default_function_input
  106                       | MAS default_function_input_def . default_function_input
  107                       | .  [PAR_CERRADO]

    MAS  shift, and go to state 174

    $default  reduce using rule 107 (default_function_input)

    default_function_input  go to state 197


state 188

  100 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO . PUNTO

    PUNTO  shift, and go to state 198


state 189

   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO . END METHOD

    END  shift, and go to state 199


state 190

  102 read: READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO .

    $default  reduce using rule 102 (read)


state 191

   92 for_statement: FOR ID IGUAL exp TO exp . for_step END FOR
   93 for_step: . DOS_PUNTOS metodo_body
   94         | . STEP exp DOS_PUNTOS metodo_body

    STEP        shift, and go to state 200
    DOS_PUNTOS  shift, and go to state 201

    for_step  go to state 202


state 192

    7 vars_def: . DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO
   70 metodo_body: metodo_body . body_code
   77 body_code: . vars_def
   78          | . asignacion
   79          | . estatuto
   80          | . llamado PUNTO
   81          | . default_functions
   82 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   83 asignacion: . ID IGUAL expresion PUNTO
   84           | . array_assignment
   85 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   87 estatuto: . if_statement
   88         | . for_statement
   89         | . while_statement
   90         | . select_statement
   91 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   92 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   95 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   95                | WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body . END WHILE
   96 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  100 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  101                  | . read
  102 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  110 default_choices: . PRINT
  111                | . PRINTLINE

    PRINT      shift, and go to state 114
    PRINTLINE  shift, and go to state 115
    READ       shift, and go to state 116
    DEFINE     shift, and go to state 8
    END        shift, and go to state 203
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 124
    llamado            go to state 125
    asignacion         go to state 126
    array_assignment   go to state 127
    estatuto           go to state 128
    if_statement       go to state 129
    for_statement      go to state 130
    while_statement    go to state 131
    select_statement   go to state 132
    default_functions  go to state 133
    read               go to state 134
    default_choices    go to state 135


state 193

    7 vars_def: . DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO
   70 metodo_body: metodo_body . body_code
   77 body_code: . vars_def
   78          | . asignacion
   79          | . estatuto
   80          | . llamado PUNTO
   81          | . default_functions
   82 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   83 asignacion: . ID IGUAL expresion PUNTO
   84           | . array_assignment
   85 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   87 estatuto: . if_statement
   88         | . for_statement
   89         | . while_statement
   90         | . select_statement
   91 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   91             | IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body . ELSE DOS_PUNTOS metodo_body END IF
   92 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   95 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   96 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  100 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  101                  | . read
  102 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  110 default_choices: . PRINT
  111                | . PRINTLINE

    PRINT      shift, and go to state 114
    PRINTLINE  shift, and go to state 115
    READ       shift, and go to state 116
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ELSE       shift, and go to state 204
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 124
    llamado            go to state 125
    asignacion         go to state 126
    array_assignment   go to state 127
    estatuto           go to state 128
    if_statement       go to state 129
    for_statement      go to state 130
    while_statement    go to state 131
    select_statement   go to state 132
    default_functions  go to state 133
    read               go to state 134
    default_choices    go to state 135


state 194

   70 metodo_body: . metodo_body body_code
   71            | .
   96 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS . metodo_body END CASE case_statement END SELECT

    $default  reduce using rule 71 (metodo_body)

    metodo_body  go to state 205


state 195

   86 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 206


state 196

   85 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 207


state 197

  106 default_function_input: MAS default_function_input_def default_function_input .

    $default  reduce using rule 106 (default_function_input)


state 198

  100 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO .

    $default  reduce using rule 100 (default_functions)


state 199

   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END . METHOD

    METHOD  shift, and go to state 208


state 200

   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   94 for_step: STEP . exp DOS_PUNTOS metodo_body

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    exp                  go to state 209
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 201

   70 metodo_body: . metodo_body body_code
   71            | .
   93 for_step: DOS_PUNTOS . metodo_body

    $default  reduce using rule 71 (metodo_body)

    metodo_body  go to state 210


state 202

   92 for_statement: FOR ID IGUAL exp TO exp for_step . END FOR

    END  shift, and go to state 211


state 203

   95 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END . WHILE

    WHILE  shift, and go to state 212


state 204

   91 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE . DOS_PUNTOS metodo_body END IF

    DOS_PUNTOS  shift, and go to state 213


state 205

    7 vars_def: . DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO
   70 metodo_body: metodo_body . body_code
   77 body_code: . vars_def
   78          | . asignacion
   79          | . estatuto
   80          | . llamado PUNTO
   81          | . default_functions
   82 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   83 asignacion: . ID IGUAL expresion PUNTO
   84           | . array_assignment
   85 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   87 estatuto: . if_statement
   88         | . for_statement
   89         | . while_statement
   90         | . select_statement
   91 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   92 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   95 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   96 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   96                 | SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body . END CASE case_statement END SELECT
  100 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  101                  | . read
  102 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  110 default_choices: . PRINT
  111                | . PRINTLINE

    PRINT      shift, and go to state 114
    PRINTLINE  shift, and go to state 115
    READ       shift, and go to state 116
    DEFINE     shift, and go to state 8
    END        shift, and go to state 214
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 124
    llamado            go to state 125
    asignacion         go to state 126
    array_assignment   go to state 127
    estatuto           go to state 128
    if_statement       go to state 129
    for_statement      go to state 130
    while_statement    go to state 131
    select_statement   go to state 132
    default_functions  go to state 133
    read               go to state 134
    default_choices    go to state 135


state 206

   19 expresion: . exp
   20          | . exp operador_logico exp
   35 exp: . termino
   36    | . termino MAS termino
   37    | . termino MENOS termino
   38 termino: . exponencial
   39        | . exponencial POR exponencial
   40        | . exponencial DIVISION exponencial
   41 exponencial: . factor
   42            | . factor EXPONENCIAL
   43 factor: . var
   44       | . PAR_ABIERTO expresion PAR_CERRADO
   45       | . factor_alterno
   46 factor_alterno: . operadores_binarios factor_alterno_choices
   47 operadores_binarios: . MAS
   48                    | . MENOS
   49                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 var: . ID
   56    | . CTE_INTEGER
   57    | . CTE_STRING
   58    | . CTE_DECIMAL
   59    | . VERDADERO
   60    | . FALSO
   86 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL . expresion PUNTO

    FALSO        shift, and go to state 45
    VERDADERO    shift, and go to state 46
    PAR_ABIERTO  shift, and go to state 47
    MAS          shift, and go to state 48
    MENOS        shift, and go to state 49
    ID           shift, and go to state 50
    CTE_STRING   shift, and go to state 51
    CTE_DECIMAL  shift, and go to state 52
    CTE_INTEGER  shift, and go to state 53

    ID           [reduce using rule 49 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 49 (operadores_binarios)]
    $default     reduce using rule 49 (operadores_binarios)

    expresion            go to state 215
    exp                  go to state 55
    termino              go to state 56
    exponencial          go to state 57
    factor               go to state 58
    factor_alterno       go to state 59
    operadores_binarios  go to state 60
    var                  go to state 61


state 207

   85 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO .

    $default  reduce using rule 85 (array_assignment)


state 208

   69 metodo_def: METHOD tipo @6 ID @7 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body @8 RETURN expresion PUNTO END METHOD .

    $default  reduce using rule 69 (metodo_def)


state 209

   94 for_step: STEP exp . DOS_PUNTOS metodo_body

    DOS_PUNTOS  shift, and go to state 216


state 210

    7 vars_def: . DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO
   70 metodo_body: metodo_body . body_code
   77 body_code: . vars_def
   78          | . asignacion
   79          | . estatuto
   80          | . llamado PUNTO
   81          | . default_functions
   82 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   83 asignacion: . ID IGUAL expresion PUNTO
   84           | . array_assignment
   85 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   87 estatuto: . if_statement
   88         | . for_statement
   89         | . while_statement
   90         | . select_statement
   91 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   92 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   93 for_step: DOS_PUNTOS metodo_body .  [END]
   95 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   96 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  100 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  101                  | . read
  102 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  110 default_choices: . PRINT
  111                | . PRINTLINE

    PRINT      shift, and go to state 114
    PRINTLINE  shift, and go to state 115
    READ       shift, and go to state 116
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    $default  reduce using rule 93 (for_step)

    vars_def           go to state 122
    body_code          go to state 124
    llamado            go to state 125
    asignacion         go to state 126
    array_assignment   go to state 127
    estatuto           go to state 128
    if_statement       go to state 129
    for_statement      go to state 130
    while_statement    go to state 131
    select_statement   go to state 132
    default_functions  go to state 133
    read               go to state 134
    default_choices    go to state 135


state 211

   92 for_statement: FOR ID IGUAL exp TO exp for_step END . FOR

    FOR  shift, and go to state 217


state 212

   95 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE .

    $default  reduce using rule 95 (while_statement)


state 213

   70 metodo_body: . metodo_body body_code
   71            | .
   91 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS . metodo_body END IF

    $default  reduce using rule 71 (metodo_body)

    metodo_body  go to state 218


state 214

   96 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END . CASE case_statement END SELECT

    CASE  shift, and go to state 219


state 215

   86 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 220


state 216

   70 metodo_body: . metodo_body body_code
   71            | .
   94 for_step: STEP exp DOS_PUNTOS . metodo_body

    $default  reduce using rule 71 (metodo_body)

    metodo_body  go to state 221


state 217

   92 for_statement: FOR ID IGUAL exp TO exp for_step END FOR .

    $default  reduce using rule 92 (for_statement)


state 218

    7 vars_def: . DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO
   70 metodo_body: metodo_body . body_code
   77 body_code: . vars_def
   78          | . asignacion
   79          | . estatuto
   80          | . llamado PUNTO
   81          | . default_functions
   82 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   83 asignacion: . ID IGUAL expresion PUNTO
   84           | . array_assignment
   85 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   87 estatuto: . if_statement
   88         | . for_statement
   89         | . while_statement
   90         | . select_statement
   91 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   91             | IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body . END IF
   92 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   95 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   96 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  100 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  101                  | . read
  102 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  110 default_choices: . PRINT
  111                | . PRINTLINE

    PRINT      shift, and go to state 114
    PRINTLINE  shift, and go to state 115
    READ       shift, and go to state 116
    DEFINE     shift, and go to state 8
    END        shift, and go to state 222
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 124
    llamado            go to state 125
    asignacion         go to state 126
    array_assignment   go to state 127
    estatuto           go to state 128
    if_statement       go to state 129
    for_statement      go to state 130
    while_statement    go to state 131
    select_statement   go to state 132
    default_functions  go to state 133
    read               go to state 134
    default_choices    go to state 135


state 219

   96 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE . case_statement END SELECT
   97 case_statement: . case_statement_def case_statement
   98               | .  [END]
   99 case_statement_def: . CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CASE  shift, and go to state 223

    $default  reduce using rule 98 (case_statement)

    case_statement      go to state 224
    case_statement_def  go to state 225


state 220

   86 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO .

    $default  reduce using rule 86 (array_assignment)


state 221

    7 vars_def: . DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO
   70 metodo_body: metodo_body . body_code
   77 body_code: . vars_def
   78          | . asignacion
   79          | . estatuto
   80          | . llamado PUNTO
   81          | . default_functions
   82 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   83 asignacion: . ID IGUAL expresion PUNTO
   84           | . array_assignment
   85 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   87 estatuto: . if_statement
   88         | . for_statement
   89         | . while_statement
   90         | . select_statement
   91 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   92 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   94 for_step: STEP exp DOS_PUNTOS metodo_body .  [END]
   95 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   96 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  100 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  101                  | . read
  102 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  110 default_choices: . PRINT
  111                | . PRINTLINE

    PRINT      shift, and go to state 114
    PRINTLINE  shift, and go to state 115
    READ       shift, and go to state 116
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    $default  reduce using rule 94 (for_step)

    vars_def           go to state 122
    body_code          go to state 124
    llamado            go to state 125
    asignacion         go to state 126
    array_assignment   go to state 127
    estatuto           go to state 128
    if_statement       go to state 129
    for_statement      go to state 130
    while_statement    go to state 131
    select_statement   go to state 132
    default_functions  go to state 133
    read               go to state 134
    default_choices    go to state 135


state 222

   91 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END . IF

    IF  shift, and go to state 226


state 223

   99 case_statement_def: CASE . CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CTE_INTEGER  shift, and go to state 227


state 224

   96 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement . END SELECT

    END  shift, and go to state 228


state 225

   97 case_statement: . case_statement_def case_statement
   97               | case_statement_def . case_statement
   98               | .  [END]
   99 case_statement_def: . CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CASE  shift, and go to state 223

    $default  reduce using rule 98 (case_statement)

    case_statement      go to state 229
    case_statement_def  go to state 225


state 226

   91 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF .

    $default  reduce using rule 91 (if_statement)


state 227

   99 case_statement_def: CASE CTE_INTEGER . DOS_PUNTOS metodo_body END CASE

    DOS_PUNTOS  shift, and go to state 230


state 228

   96 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END . SELECT

    SELECT  shift, and go to state 231


state 229

   97 case_statement: case_statement_def case_statement .

    $default  reduce using rule 97 (case_statement)


state 230

   70 metodo_body: . metodo_body body_code
   71            | .
   99 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS . metodo_body END CASE

    $default  reduce using rule 71 (metodo_body)

    metodo_body  go to state 232


state 231

   96 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT .

    $default  reduce using rule 96 (select_statement)


state 232

    7 vars_def: . DEFINE declaracion @2 AS tipo @3 asignacion_var PUNTO
   70 metodo_body: metodo_body . body_code
   77 body_code: . vars_def
   78          | . asignacion
   79          | . estatuto
   80          | . llamado PUNTO
   81          | . default_functions
   82 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   83 asignacion: . ID IGUAL expresion PUNTO
   84           | . array_assignment
   85 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   86                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   87 estatuto: . if_statement
   88         | . for_statement
   89         | . while_statement
   90         | . select_statement
   91 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   92 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   95 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   96 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   99 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body . END CASE
  100 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  101                  | . read
  102 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  110 default_choices: . PRINT
  111                | . PRINTLINE

    PRINT      shift, and go to state 114
    PRINTLINE  shift, and go to state 115
    READ       shift, and go to state 116
    DEFINE     shift, and go to state 8
    END        shift, and go to state 233
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 124
    llamado            go to state 125
    asignacion         go to state 126
    array_assignment   go to state 127
    estatuto           go to state 128
    if_statement       go to state 129
    for_statement      go to state 130
    while_statement    go to state 131
    select_statement   go to state 132
    default_functions  go to state 133
    read               go to state 134
    default_choices    go to state 135


state 233

   99 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END . CASE

    CASE  shift, and go to state 234


state 234

   99 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE .

    $default  reduce using rule 99 (case_statement_def)
