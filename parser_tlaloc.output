State 37 conflicts: 2 shift/reduce
State 45 conflicts: 2 shift/reduce
State 53 conflicts: 1 reduce/reduce
State 54 conflicts: 2 shift/reduce
State 74 conflicts: 2 shift/reduce
State 77 conflicts: 2 shift/reduce
State 78 conflicts: 2 shift/reduce
State 86 conflicts: 1 shift/reduce
State 99 conflicts: 2 shift/reduce
State 100 conflicts: 2 shift/reduce
State 103 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 105 conflicts: 2 shift/reduce
State 155 conflicts: 2 shift/reduce
State 156 conflicts: 2 shift/reduce
State 158 conflicts: 2 shift/reduce
State 162 conflicts: 2 shift/reduce
State 165 conflicts: 2 shift/reduce
State 170 conflicts: 2 shift/reduce
State 175 conflicts: 2 shift/reduce
State 183 conflicts: 2 shift/reduce
State 187 conflicts: 2 shift/reduce
State 193 conflicts: 2 shift/reduce
State 198 conflicts: 2 shift/reduce
State 214 conflicts: 2 shift/reduce
State 220 conflicts: 2 shift/reduce


Grammar

    0 $accept: tlaloc $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    4 vars: vars vars_def
    5     | /* empty */

    6 $@3: /* empty */

    7 $@4: /* empty */

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO

    9 declaracion: APUNTADOR ID
   10            | ID

   11 params: APUNTADOR ID
   12       | ID

   13 $@5: /* empty */

   14 params: ID $@5 dimension_arreglo

   15 tipo: INTEGER
   16     | STRING
   17     | BOOLEAN
   18     | DECIMAL
   19     | VOID

   20 asignacion_var: IGUAL expresion
   21               | dimension_arreglo
   22               | /* empty */

   23 $@6: /* empty */

   24 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@6 CORCHETE_CERRADO

   25 $@7: /* empty */

   26 $@8: /* empty */

   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO

   28 expresion: exp
   29          | exp operador_logico exp

   30 funcion_matematica: math_choices PAR_ABIERTO exp PAR_CERRADO

   31 math_choices: ABS
   32             | COS
   33             | SIN
   34             | LOG
   35             | TAN
   36             | SQRT

   37 operador_logico: AND
   38                | OR
   39                | MAYOR_QUE
   40                | MENOR_QUE
   41                | DIFERENTE
   42                | IGUAL_IGUAL
   43                | /* empty */

   44 exp: termino

   45 $@9: /* empty */

   46 exp: termino MAS $@9 termino

   47 $@10: /* empty */

   48 exp: termino MENOS $@10 termino

   49 termino: exponencial
   50        | exponencial POR exponencial
   51        | exponencial DIVISION exponencial

   52 exponencial: factor
   53            | factor EXPONENCIAL

   54 factor: var
   55       | PAR_ABIERTO expresion PAR_CERRADO
   56       | factor_alterno

   57 factor_alterno: operadores_binarios factor_alterno_choices

   58 operadores_binarios: MAS
   59                    | MENOS
   60                    | /* empty */

   61 factor_alterno_choices: CTE_INTEGER
   62                       | llamado
   63                       | funcion_matematica
   64                       | ID CORCHETE_ABIERTO exp CORCHETE_CERRADO
   65                       | ID

   66 var: ID
   67    | CTE_INTEGER
   68    | CTE_STRING
   69    | CTE_DECIMAL
   70    | VERDADERO
   71    | FALSO

   72 metodo: metodo metodo_def
   73       | /* empty */

   74 $@11: /* empty */

   75 $@12: /* empty */

   76 metodo_main: METHOD VOID MAIN $@11 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@12 END METHOD

   77 $@13: /* empty */

   78 $@14: /* empty */

   79 $@15: /* empty */

   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD

   81 metodo_body: metodo_body body_code
   82            | /* empty */

   83 parametros: parametros_def

   84 $@16: /* empty */

   85 parametros_def: tipo $@16 params parametros_extra
   86               | /* empty */

   87 parametros_extra: COMA parametros_def
   88                 | /* empty */

   89 body_code: vars_def
   90          | asignacion
   91          | estatuto
   92          | llamado PUNTO
   93          | default_functions

   94 llamado: ID PAR_ABIERTO exp PAR_CERRADO

   95 $@17: /* empty */

   96 asignacion: ID $@17 IGUAL expresion PUNTO
   97           | array_assignment

   98 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

  100 estatuto: if_statement
  101         | for_statement
  102         | while_statement
  103         | select_statement

  104 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

  105 for_statement: FOR ID IGUAL exp TO exp for_step END FOR

  106 for_step: DOS_PUNTOS metodo_body
  107         | STEP exp DOS_PUNTOS metodo_body

  108 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

  109 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

  110 case_statement: case_statement_def case_statement
  111               | /* empty */

  112 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

  113 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  114                  | read

  115 read: READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO

  116 ids: ids_def ids
  117    | /* empty */

  118 ids_def: COMA ID

  119 default_function_input: MAS default_function_input_def default_function_input
  120                       | /* empty */

  121 default_function_input_def: expresion
  122                           | COMILLAS CTE_STRING COMILLAS

  123 default_choices: PRINT
  124                | PRINTLINE


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 3
METHOD (259) 76 80
PRINT (260) 123
PRINTLINE (261) 124
READ (262) 115
CASE (263) 109 112
DEFAULT (264) 109
DEFINE (265) 8
AS (266) 8
TO (267) 105
STEP (268) 107
INTEGER (269) 15
DECIMAL (270) 18
MAIN (271) 76
STRING (272) 16
BOOLEAN (273) 17
END (274) 3 76 80 104 105 108 109 112
FALSO (275) 71
VERDADERO (276) 70
VOID (277) 19 76
RETURN (278) 80
AND (279) 37
OR (280) 38
ABS (281) 31
COS (282) 32
SIN (283) 33
LOG (284) 34
TAN (285) 35
SQRT (286) 36
FOR (287) 105
WHILE (288) 108
IF (289) 104
SELECT (290) 109
ELSE (291) 104
PAR_ABIERTO (292) 30 55 76 80 94 104 108 113 115
PAR_CERRADO (293) 30 55 76 80 94 104 108 113 115
COMA (294) 27 87 99 118
DOS_PUNTOS (295) 3 76 80 104 106 107 108 109 112
CORCHETE_ABIERTO (296) 24 27 64 98 99
CORCHETE_CERRADO (297) 24 27 64 98 99
IGUAL (298) 20 96 98 99 105
IGUAL_IGUAL (299) 42
MENOR_QUE (300) 40
MAYOR_QUE (301) 39
DIFERENTE (302) 41
POR (303) 50
MAS (304) 46 58 119
MENOS (305) 48 59
DIVISION (306) 51
EXPONENCIAL (307) 53
PUNTO (308) 8 80 92 96 98 99 113 115
APUNTADOR (309) 9 11
COMILLAS (310) 122
ID (311) 3 9 10 11 12 14 64 65 66 80 94 96 98 99 105 109 115 118
CTE_STRING (312) 68 122
CTE_DECIMAL (313) 69
CTE_INTEGER (314) 24 27 61 67 112


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
tlaloc (61)
    on left: 3, on right: 0
$@1 (62)
    on left: 1, on right: 3
$@2 (63)
    on left: 2, on right: 3
vars (64)
    on left: 4 5, on right: 3 4
vars_def (65)
    on left: 8, on right: 4 89
$@3 (66)
    on left: 6, on right: 8
$@4 (67)
    on left: 7, on right: 8
declaracion (68)
    on left: 9 10, on right: 8
params (69)
    on left: 11 12 14, on right: 85
$@5 (70)
    on left: 13, on right: 14
tipo (71)
    on left: 15 16 17 18 19, on right: 8 80 85
asignacion_var (72)
    on left: 20 21 22, on right: 8
dimension_arreglo (73)
    on left: 24 27, on right: 14 21
$@6 (74)
    on left: 23, on right: 24
$@7 (75)
    on left: 25, on right: 27
$@8 (76)
    on left: 26, on right: 27
expresion (77)
    on left: 28 29, on right: 20 55 80 96 98 99 104 108 121
funcion_matematica (78)
    on left: 30, on right: 63
math_choices (79)
    on left: 31 32 33 34 35 36, on right: 30
operador_logico (80)
    on left: 37 38 39 40 41 42 43, on right: 29
exp (81)
    on left: 44 46 48, on right: 28 29 30 64 94 98 99 105 107
$@9 (82)
    on left: 45, on right: 46
$@10 (83)
    on left: 47, on right: 48
termino (84)
    on left: 49 50 51, on right: 44 46 48
exponencial (85)
    on left: 52 53, on right: 49 50 51
factor (86)
    on left: 54 55 56, on right: 52 53
factor_alterno (87)
    on left: 57, on right: 56
operadores_binarios (88)
    on left: 58 59 60, on right: 57
factor_alterno_choices (89)
    on left: 61 62 63 64 65, on right: 57
var (90)
    on left: 66 67 68 69 70 71, on right: 54
metodo (91)
    on left: 72 73, on right: 3 72
metodo_main (92)
    on left: 76, on right: 3
$@11 (93)
    on left: 74, on right: 76
$@12 (94)
    on left: 75, on right: 76
metodo_def (95)
    on left: 80, on right: 72
$@13 (96)
    on left: 77, on right: 80
$@14 (97)
    on left: 78, on right: 80
$@15 (98)
    on left: 79, on right: 80
metodo_body (99)
    on left: 81 82, on right: 76 80 81 104 106 107 108 109 112
parametros (100)
    on left: 83, on right: 76 80
parametros_def (101)
    on left: 85 86, on right: 83 87
$@16 (102)
    on left: 84, on right: 85
parametros_extra (103)
    on left: 87 88, on right: 85
body_code (104)
    on left: 89 90 91 92 93, on right: 81
llamado (105)
    on left: 94, on right: 62 92
asignacion (106)
    on left: 96 97, on right: 90
$@17 (107)
    on left: 95, on right: 96
array_assignment (108)
    on left: 98 99, on right: 97
estatuto (109)
    on left: 100 101 102 103, on right: 91
if_statement (110)
    on left: 104, on right: 100
for_statement (111)
    on left: 105, on right: 101
for_step (112)
    on left: 106 107, on right: 105
while_statement (113)
    on left: 108, on right: 102
select_statement (114)
    on left: 109, on right: 103
case_statement (115)
    on left: 110 111, on right: 109 110
case_statement_def (116)
    on left: 112, on right: 110
default_functions (117)
    on left: 113 114, on right: 93
read (118)
    on left: 115, on right: 114
ids (119)
    on left: 116 117, on right: 115 116
ids_def (120)
    on left: 118, on right: 116
default_function_input (121)
    on left: 119 120, on right: 113 119
default_function_input_def (122)
    on left: 121 122, on right: 113 119
default_choices (123)
    on left: 123 124, on right: 113


state 0

    0 $accept: . tlaloc $end
    3 tlaloc: . PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    PROGRAM  shift, and go to state 1

    tlaloc  go to state 2


state 1

    3 tlaloc: PROGRAM . ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    ID  shift, and go to state 3


state 2

    0 $accept: tlaloc . $end

    $end  shift, and go to state 4


state 3

    1 $@1: .
    3 tlaloc: PROGRAM ID . $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


state 4

    0 $accept: tlaloc $end .

    $default  accept


state 5

    3 tlaloc: PROGRAM ID $@1 . DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    DOS_PUNTOS  shift, and go to state 6


state 6

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS . vars $@2 metodo metodo_main END PROGRAM
    4 vars: . vars vars_def
    5     | .

    $default  reduce using rule 5 (vars)

    vars  go to state 7


state 7

    2 $@2: .  [METHOD]
    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars . $@2 metodo metodo_main END PROGRAM
    4 vars: vars . vars_def
    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO

    DEFINE  shift, and go to state 8

    $default  reduce using rule 2 ($@2)

    $@2       go to state 9
    vars_def  go to state 10


state 8

    8 vars_def: DEFINE . declaracion $@3 AS tipo $@4 asignacion_var PUNTO
    9 declaracion: . APUNTADOR ID
   10            | . ID

    APUNTADOR  shift, and go to state 11
    ID         shift, and go to state 12

    declaracion  go to state 13


state 9

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 . metodo metodo_main END PROGRAM
   72 metodo: . metodo metodo_def
   73       | .

    $default  reduce using rule 73 (metodo)

    metodo  go to state 14


state 10

    4 vars: vars vars_def .

    $default  reduce using rule 4 (vars)


state 11

    9 declaracion: APUNTADOR . ID

    ID  shift, and go to state 15


state 12

   10 declaracion: ID .

    $default  reduce using rule 10 (declaracion)


state 13

    6 $@3: .
    8 vars_def: DEFINE declaracion . $@3 AS tipo $@4 asignacion_var PUNTO

    $default  reduce using rule 6 ($@3)

    $@3  go to state 16


state 14

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo . metodo_main END PROGRAM
   72 metodo: metodo . metodo_def
   76 metodo_main: . METHOD VOID MAIN $@11 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@12 END METHOD
   80 metodo_def: . METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD

    METHOD  shift, and go to state 17

    metodo_main  go to state 18
    metodo_def   go to state 19


state 15

    9 declaracion: APUNTADOR ID .

    $default  reduce using rule 9 (declaracion)


state 16

    8 vars_def: DEFINE declaracion $@3 . AS tipo $@4 asignacion_var PUNTO

    AS  shift, and go to state 20


state 17

   15 tipo: . INTEGER
   16     | . STRING
   17     | . BOOLEAN
   18     | . DECIMAL
   19     | . VOID
   76 metodo_main: METHOD . VOID MAIN $@11 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@12 END METHOD
   80 metodo_def: METHOD . tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 25

    tipo  go to state 26


state 18

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main . END PROGRAM

    END  shift, and go to state 27


state 19

   72 metodo: metodo metodo_def .

    $default  reduce using rule 72 (metodo)


state 20

    8 vars_def: DEFINE declaracion $@3 AS . tipo $@4 asignacion_var PUNTO
   15 tipo: . INTEGER
   16     | . STRING
   17     | . BOOLEAN
   18     | . DECIMAL
   19     | . VOID

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    tipo  go to state 29


state 21

   15 tipo: INTEGER .

    $default  reduce using rule 15 (tipo)


state 22

   18 tipo: DECIMAL .

    $default  reduce using rule 18 (tipo)


state 23

   16 tipo: STRING .

    $default  reduce using rule 16 (tipo)


state 24

   17 tipo: BOOLEAN .

    $default  reduce using rule 17 (tipo)


state 25

   19 tipo: VOID .  [ID]
   76 metodo_main: METHOD VOID . MAIN $@11 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@12 END METHOD

    MAIN  shift, and go to state 30

    $default  reduce using rule 19 (tipo)


state 26

   77 $@13: .
   80 metodo_def: METHOD tipo . $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD

    $default  reduce using rule 77 ($@13)

    $@13  go to state 31


state 27

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END . PROGRAM

    PROGRAM  shift, and go to state 32


state 28

   19 tipo: VOID .

    $default  reduce using rule 19 (tipo)


state 29

    7 $@4: .
    8 vars_def: DEFINE declaracion $@3 AS tipo . $@4 asignacion_var PUNTO

    $default  reduce using rule 7 ($@4)

    $@4  go to state 33


state 30

   74 $@11: .
   76 metodo_main: METHOD VOID MAIN . $@11 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@12 END METHOD

    $default  reduce using rule 74 ($@11)

    $@11  go to state 34


state 31

   80 metodo_def: METHOD tipo $@13 . ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD

    ID  shift, and go to state 35


state 32

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM .

    $default  reduce using rule 3 (tlaloc)


state 33

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 . asignacion_var PUNTO
   20 asignacion_var: . IGUAL expresion
   21               | . dimension_arreglo
   22               | .  [PUNTO]
   24 dimension_arreglo: . CORCHETE_ABIERTO CTE_INTEGER $@6 CORCHETE_CERRADO
   27                  | . CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO

    CORCHETE_ABIERTO  shift, and go to state 36
    IGUAL             shift, and go to state 37

    $default  reduce using rule 22 (asignacion_var)

    asignacion_var     go to state 38
    dimension_arreglo  go to state 39


state 34

   76 metodo_main: METHOD VOID MAIN $@11 . PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@12 END METHOD

    PAR_ABIERTO  shift, and go to state 40


state 35

   78 $@14: .
   80 metodo_def: METHOD tipo $@13 ID . $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD

    $default  reduce using rule 78 ($@14)

    $@14  go to state 41


state 36

   24 dimension_arreglo: CORCHETE_ABIERTO . CTE_INTEGER $@6 CORCHETE_CERRADO
   27                  | CORCHETE_ABIERTO . CTE_INTEGER $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO

    CTE_INTEGER  shift, and go to state 42


state 37

   20 asignacion_var: IGUAL . expresion
   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    expresion            go to state 52
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 38

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 asignacion_var . PUNTO

    PUNTO  shift, and go to state 60


state 39

   21 asignacion_var: dimension_arreglo .

    $default  reduce using rule 21 (asignacion_var)


state 40

   15 tipo: . INTEGER
   16     | . STRING
   17     | . BOOLEAN
   18     | . DECIMAL
   19     | . VOID
   76 metodo_main: METHOD VOID MAIN $@11 PAR_ABIERTO . parametros PAR_CERRADO DOS_PUNTOS metodo_body $@12 END METHOD
   83 parametros: . parametros_def
   85 parametros_def: . tipo $@16 params parametros_extra
   86               | .  [PAR_CERRADO]

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    $default  reduce using rule 86 (parametros_def)

    tipo            go to state 61
    parametros      go to state 62
    parametros_def  go to state 63


state 41

   80 metodo_def: METHOD tipo $@13 ID $@14 . PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD

    PAR_ABIERTO  shift, and go to state 64


state 42

   23 $@6: .  [CORCHETE_CERRADO]
   24 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER . $@6 CORCHETE_CERRADO
   25 $@7: .  [COMA]
   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER . $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO

    COMA      reduce using rule 25 ($@7)
    $default  reduce using rule 23 ($@6)

    $@6  go to state 65
    $@7  go to state 66


state 43

   71 var: FALSO .

    $default  reduce using rule 71 (var)


state 44

   70 var: VERDADERO .

    $default  reduce using rule 70 (var)


state 45

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   55       | PAR_ABIERTO . expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    expresion            go to state 67
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 46

   58 operadores_binarios: MAS .

    $default  reduce using rule 58 (operadores_binarios)


state 47

   59 operadores_binarios: MENOS .

    $default  reduce using rule 59 (operadores_binarios)


state 48

   66 var: ID .

    $default  reduce using rule 66 (var)


state 49

   68 var: CTE_STRING .

    $default  reduce using rule 68 (var)


state 50

   69 var: CTE_DECIMAL .

    $default  reduce using rule 69 (var)


state 51

   67 var: CTE_INTEGER .

    $default  reduce using rule 67 (var)


state 52

   20 asignacion_var: IGUAL expresion .

    $default  reduce using rule 20 (asignacion_var)


state 53

   28 expresion: exp .  [PAR_CERRADO, MAS, PUNTO]
   29          | exp . operador_logico exp
   37 operador_logico: . AND
   38                | . OR
   39                | . MAYOR_QUE
   40                | . MENOR_QUE
   41                | . DIFERENTE
   42                | . IGUAL_IGUAL
   43                | .  [FALSO, VERDADERO, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, MAS, MENOS, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]

    AND          shift, and go to state 68
    OR           shift, and go to state 69
    IGUAL_IGUAL  shift, and go to state 70
    MENOR_QUE    shift, and go to state 71
    MAYOR_QUE    shift, and go to state 72
    DIFERENTE    shift, and go to state 73

    PAR_CERRADO  reduce using rule 28 (expresion)
    MAS          reduce using rule 28 (expresion)
    MAS          [reduce using rule 43 (operador_logico)]
    PUNTO        reduce using rule 28 (expresion)
    $default     reduce using rule 43 (operador_logico)

    operador_logico  go to state 74


state 54

   44 exp: termino .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, MAS, MENOS, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   46    | termino . MAS $@9 termino
   48    | termino . MENOS $@10 termino

    MAS    shift, and go to state 75
    MENOS  shift, and go to state 76

    MAS       [reduce using rule 44 (exp)]
    MENOS     [reduce using rule 44 (exp)]
    $default  reduce using rule 44 (exp)


state 55

   49 termino: exponencial .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, MAS, MENOS, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   50        | exponencial . POR exponencial
   51        | exponencial . DIVISION exponencial

    POR       shift, and go to state 77
    DIVISION  shift, and go to state 78

    $default  reduce using rule 49 (termino)


state 56

   52 exponencial: factor .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, POR, MAS, MENOS, DIVISION, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   53            | factor . EXPONENCIAL

    EXPONENCIAL  shift, and go to state 79

    $default  reduce using rule 52 (exponencial)


state 57

   56 factor: factor_alterno .

    $default  reduce using rule 56 (factor)


state 58

   30 funcion_matematica: . math_choices PAR_ABIERTO exp PAR_CERRADO
   31 math_choices: . ABS
   32             | . COS
   33             | . SIN
   34             | . LOG
   35             | . TAN
   36             | . SQRT
   57 factor_alterno: operadores_binarios . factor_alterno_choices
   61 factor_alterno_choices: . CTE_INTEGER
   62                       | . llamado
   63                       | . funcion_matematica
   64                       | . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO
   65                       | . ID
   94 llamado: . ID PAR_ABIERTO exp PAR_CERRADO

    ABS          shift, and go to state 80
    COS          shift, and go to state 81
    SIN          shift, and go to state 82
    LOG          shift, and go to state 83
    TAN          shift, and go to state 84
    SQRT         shift, and go to state 85
    ID           shift, and go to state 86
    CTE_INTEGER  shift, and go to state 87

    funcion_matematica      go to state 88
    math_choices            go to state 89
    factor_alterno_choices  go to state 90
    llamado                 go to state 91


state 59

   54 factor: var .

    $default  reduce using rule 54 (factor)


state 60

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO .

    $default  reduce using rule 8 (vars_def)


state 61

   84 $@16: .
   85 parametros_def: tipo . $@16 params parametros_extra

    $default  reduce using rule 84 ($@16)

    $@16  go to state 92


state 62

   76 metodo_main: METHOD VOID MAIN $@11 PAR_ABIERTO parametros . PAR_CERRADO DOS_PUNTOS metodo_body $@12 END METHOD

    PAR_CERRADO  shift, and go to state 93


state 63

   83 parametros: parametros_def .

    $default  reduce using rule 83 (parametros)


state 64

   15 tipo: . INTEGER
   16     | . STRING
   17     | . BOOLEAN
   18     | . DECIMAL
   19     | . VOID
   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO . parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD
   83 parametros: . parametros_def
   85 parametros_def: . tipo $@16 params parametros_extra
   86               | .  [PAR_CERRADO]

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    $default  reduce using rule 86 (parametros_def)

    tipo            go to state 61
    parametros      go to state 94
    parametros_def  go to state 63


state 65

   24 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@6 . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 95


state 66

   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 . COMA CTE_INTEGER $@8 CORCHETE_CERRADO

    COMA  shift, and go to state 96


state 67

   55 factor: PAR_ABIERTO expresion . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 97


state 68

   37 operador_logico: AND .

    $default  reduce using rule 37 (operador_logico)


state 69

   38 operador_logico: OR .

    $default  reduce using rule 38 (operador_logico)


state 70

   42 operador_logico: IGUAL_IGUAL .

    $default  reduce using rule 42 (operador_logico)


state 71

   40 operador_logico: MENOR_QUE .

    $default  reduce using rule 40 (operador_logico)


state 72

   39 operador_logico: MAYOR_QUE .

    $default  reduce using rule 39 (operador_logico)


state 73

   41 operador_logico: DIFERENTE .

    $default  reduce using rule 41 (operador_logico)


state 74

   29 expresion: exp operador_logico . exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exp                  go to state 98
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 75

   45 $@9: .
   46 exp: termino MAS . $@9 termino

    $default  reduce using rule 45 ($@9)

    $@9  go to state 99


state 76

   47 $@10: .
   48 exp: termino MENOS . $@10 termino

    $default  reduce using rule 47 ($@10)

    $@10  go to state 100


state 77

   50 termino: exponencial POR . exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exponencial          go to state 101
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 78

   51 termino: exponencial DIVISION . exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exponencial          go to state 102
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 79

   53 exponencial: factor EXPONENCIAL .

    $default  reduce using rule 53 (exponencial)


state 80

   31 math_choices: ABS .

    $default  reduce using rule 31 (math_choices)


state 81

   32 math_choices: COS .

    $default  reduce using rule 32 (math_choices)


state 82

   33 math_choices: SIN .

    $default  reduce using rule 33 (math_choices)


state 83

   34 math_choices: LOG .

    $default  reduce using rule 34 (math_choices)


state 84

   35 math_choices: TAN .

    $default  reduce using rule 35 (math_choices)


state 85

   36 math_choices: SQRT .

    $default  reduce using rule 36 (math_choices)


state 86

   64 factor_alterno_choices: ID . CORCHETE_ABIERTO exp CORCHETE_CERRADO
   65                       | ID .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, POR, MAS, MENOS, DIVISION, EXPONENCIAL, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   94 llamado: ID . PAR_ABIERTO exp PAR_CERRADO

    PAR_ABIERTO       shift, and go to state 103
    CORCHETE_ABIERTO  shift, and go to state 104

    PAR_ABIERTO  [reduce using rule 65 (factor_alterno_choices)]
    $default     reduce using rule 65 (factor_alterno_choices)


state 87

   61 factor_alterno_choices: CTE_INTEGER .

    $default  reduce using rule 61 (factor_alterno_choices)


state 88

   63 factor_alterno_choices: funcion_matematica .

    $default  reduce using rule 63 (factor_alterno_choices)


state 89

   30 funcion_matematica: math_choices . PAR_ABIERTO exp PAR_CERRADO

    PAR_ABIERTO  shift, and go to state 105


state 90

   57 factor_alterno: operadores_binarios factor_alterno_choices .

    $default  reduce using rule 57 (factor_alterno)


state 91

   62 factor_alterno_choices: llamado .

    $default  reduce using rule 62 (factor_alterno_choices)


state 92

   11 params: . APUNTADOR ID
   12       | . ID
   14       | . ID $@5 dimension_arreglo
   85 parametros_def: tipo $@16 . params parametros_extra

    APUNTADOR  shift, and go to state 106
    ID         shift, and go to state 107

    params  go to state 108


state 93

   76 metodo_main: METHOD VOID MAIN $@11 PAR_ABIERTO parametros PAR_CERRADO . DOS_PUNTOS metodo_body $@12 END METHOD

    DOS_PUNTOS  shift, and go to state 109


state 94

   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros . PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD

    PAR_CERRADO  shift, and go to state 110


state 95

   24 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@6 CORCHETE_CERRADO .

    $default  reduce using rule 24 (dimension_arreglo)


state 96

   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 COMA . CTE_INTEGER $@8 CORCHETE_CERRADO

    CTE_INTEGER  shift, and go to state 111


state 97

   55 factor: PAR_ABIERTO expresion PAR_CERRADO .

    $default  reduce using rule 55 (factor)


state 98

   29 expresion: exp operador_logico exp .

    $default  reduce using rule 29 (expresion)


state 99

   46 exp: termino MAS $@9 . termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    termino              go to state 112
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 100

   48 exp: termino MENOS $@10 . termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    termino              go to state 113
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 101

   50 termino: exponencial POR exponencial .

    $default  reduce using rule 50 (termino)


state 102

   51 termino: exponencial DIVISION exponencial .

    $default  reduce using rule 51 (termino)


state 103

   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
   94 llamado: ID PAR_ABIERTO . exp PAR_CERRADO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exp                  go to state 114
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 104

   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   64 factor_alterno_choices: ID CORCHETE_ABIERTO . exp CORCHETE_CERRADO
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exp                  go to state 115
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 105

   30 funcion_matematica: math_choices PAR_ABIERTO . exp PAR_CERRADO
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exp                  go to state 116
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 106

   11 params: APUNTADOR . ID

    ID  shift, and go to state 117


state 107

   12 params: ID .  [PAR_CERRADO, COMA]
   13 $@5: .  [CORCHETE_ABIERTO]
   14 params: ID . $@5 dimension_arreglo

    CORCHETE_ABIERTO  reduce using rule 13 ($@5)
    $default          reduce using rule 12 (params)

    $@5  go to state 118


state 108

   85 parametros_def: tipo $@16 params . parametros_extra
   87 parametros_extra: . COMA parametros_def
   88                 | .  [PAR_CERRADO]

    COMA  shift, and go to state 119

    $default  reduce using rule 88 (parametros_extra)

    parametros_extra  go to state 120


state 109

   76 metodo_main: METHOD VOID MAIN $@11 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS . metodo_body $@12 END METHOD
   81 metodo_body: . metodo_body body_code
   82            | .

    $default  reduce using rule 82 (metodo_body)

    metodo_body  go to state 121


state 110

   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO . DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD

    DOS_PUNTOS  shift, and go to state 122


state 111

   26 $@8: .
   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER . $@8 CORCHETE_CERRADO

    $default  reduce using rule 26 ($@8)

    $@8  go to state 123


state 112

   46 exp: termino MAS $@9 termino .

    $default  reduce using rule 46 (exp)


state 113

   48 exp: termino MENOS $@10 termino .

    $default  reduce using rule 48 (exp)


state 114

   94 llamado: ID PAR_ABIERTO exp . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 124


state 115

   64 factor_alterno_choices: ID CORCHETE_ABIERTO exp . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 125


state 116

   30 funcion_matematica: math_choices PAR_ABIERTO exp . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 126


state 117

   11 params: APUNTADOR ID .

    $default  reduce using rule 11 (params)


state 118

   14 params: ID $@5 . dimension_arreglo
   24 dimension_arreglo: . CORCHETE_ABIERTO CTE_INTEGER $@6 CORCHETE_CERRADO
   27                  | . CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO

    CORCHETE_ABIERTO  shift, and go to state 36

    dimension_arreglo  go to state 127


state 119

   15 tipo: . INTEGER
   16     | . STRING
   17     | . BOOLEAN
   18     | . DECIMAL
   19     | . VOID
   85 parametros_def: . tipo $@16 params parametros_extra
   86               | .  [PAR_CERRADO]
   87 parametros_extra: COMA . parametros_def

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    $default  reduce using rule 86 (parametros_def)

    tipo            go to state 61
    parametros_def  go to state 128


state 120

   85 parametros_def: tipo $@16 params parametros_extra .

    $default  reduce using rule 85 (parametros_def)


state 121

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   75 $@12: .  [END]
   76 metodo_main: METHOD VOID MAIN $@11 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body . $@12 END METHOD
   81 metodo_body: metodo_body . body_code
   89 body_code: . vars_def
   90          | . asignacion
   91          | . estatuto
   92          | . llamado PUNTO
   93          | . default_functions
   94 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   96 asignacion: . ID $@17 IGUAL expresion PUNTO
   97           | . array_assignment
   98 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
  100 estatuto: . if_statement
  101         | . for_statement
  102         | . while_statement
  103         | . select_statement
  104 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  105 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  108 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  109 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  113 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  114                  | . read
  115 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  123 default_choices: . PRINT
  124                | . PRINTLINE

    PRINT      shift, and go to state 129
    PRINTLINE  shift, and go to state 130
    READ       shift, and go to state 131
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 132
    WHILE      shift, and go to state 133
    IF         shift, and go to state 134
    SELECT     shift, and go to state 135
    ID         shift, and go to state 136

    $default  reduce using rule 75 ($@12)

    vars_def           go to state 137
    $@12               go to state 138
    body_code          go to state 139
    llamado            go to state 140
    asignacion         go to state 141
    array_assignment   go to state 142
    estatuto           go to state 143
    if_statement       go to state 144
    for_statement      go to state 145
    while_statement    go to state 146
    select_statement   go to state 147
    default_functions  go to state 148
    read               go to state 149
    default_choices    go to state 150


state 122

   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS . metodo_body $@15 RETURN expresion PUNTO END METHOD
   81 metodo_body: . metodo_body body_code
   82            | .

    $default  reduce using rule 82 (metodo_body)

    metodo_body  go to state 151


state 123

   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER $@8 . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 152


state 124

   94 llamado: ID PAR_ABIERTO exp PAR_CERRADO .

    $default  reduce using rule 94 (llamado)


state 125

   64 factor_alterno_choices: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO .

    $default  reduce using rule 64 (factor_alterno_choices)


state 126

   30 funcion_matematica: math_choices PAR_ABIERTO exp PAR_CERRADO .

    $default  reduce using rule 30 (funcion_matematica)


state 127

   14 params: ID $@5 dimension_arreglo .

    $default  reduce using rule 14 (params)


state 128

   87 parametros_extra: COMA parametros_def .

    $default  reduce using rule 87 (parametros_extra)


state 129

  123 default_choices: PRINT .

    $default  reduce using rule 123 (default_choices)


state 130

  124 default_choices: PRINTLINE .

    $default  reduce using rule 124 (default_choices)


state 131

  115 read: READ . PAR_ABIERTO ID ids PAR_CERRADO PUNTO

    PAR_ABIERTO  shift, and go to state 153


state 132

  105 for_statement: FOR . ID IGUAL exp TO exp for_step END FOR

    ID  shift, and go to state 154


state 133

  108 while_statement: WHILE . PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    PAR_ABIERTO  shift, and go to state 155


state 134

  104 if_statement: IF . PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    PAR_ABIERTO  shift, and go to state 156


state 135

  109 select_statement: SELECT . ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    ID  shift, and go to state 157


state 136

   94 llamado: ID . PAR_ABIERTO exp PAR_CERRADO
   95 $@17: .  [IGUAL]
   96 asignacion: ID . $@17 IGUAL expresion PUNTO
   98 array_assignment: ID . CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | ID . CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    PAR_ABIERTO       shift, and go to state 103
    CORCHETE_ABIERTO  shift, and go to state 158

    $default  reduce using rule 95 ($@17)

    $@17  go to state 159


state 137

   89 body_code: vars_def .

    $default  reduce using rule 89 (body_code)


state 138

   76 metodo_main: METHOD VOID MAIN $@11 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@12 . END METHOD

    END  shift, and go to state 160


state 139

   81 metodo_body: metodo_body body_code .

    $default  reduce using rule 81 (metodo_body)


state 140

   92 body_code: llamado . PUNTO

    PUNTO  shift, and go to state 161


state 141

   90 body_code: asignacion .

    $default  reduce using rule 90 (body_code)


state 142

   97 asignacion: array_assignment .

    $default  reduce using rule 97 (asignacion)


state 143

   91 body_code: estatuto .

    $default  reduce using rule 91 (body_code)


state 144

  100 estatuto: if_statement .

    $default  reduce using rule 100 (estatuto)


state 145

  101 estatuto: for_statement .

    $default  reduce using rule 101 (estatuto)


state 146

  102 estatuto: while_statement .

    $default  reduce using rule 102 (estatuto)


state 147

  103 estatuto: select_statement .

    $default  reduce using rule 103 (estatuto)


state 148

   93 body_code: default_functions .

    $default  reduce using rule 93 (body_code)


state 149

  114 default_functions: read .

    $default  reduce using rule 114 (default_functions)


state 150

  113 default_functions: default_choices . PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO

    PAR_ABIERTO  shift, and go to state 162


state 151

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   79 $@15: .  [RETURN]
   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body . $@15 RETURN expresion PUNTO END METHOD
   81 metodo_body: metodo_body . body_code
   89 body_code: . vars_def
   90          | . asignacion
   91          | . estatuto
   92          | . llamado PUNTO
   93          | . default_functions
   94 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   96 asignacion: . ID $@17 IGUAL expresion PUNTO
   97           | . array_assignment
   98 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
  100 estatuto: . if_statement
  101         | . for_statement
  102         | . while_statement
  103         | . select_statement
  104 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  105 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  108 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  109 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  113 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  114                  | . read
  115 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  123 default_choices: . PRINT
  124                | . PRINTLINE

    PRINT      shift, and go to state 129
    PRINTLINE  shift, and go to state 130
    READ       shift, and go to state 131
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 132
    WHILE      shift, and go to state 133
    IF         shift, and go to state 134
    SELECT     shift, and go to state 135
    ID         shift, and go to state 136

    $default  reduce using rule 79 ($@15)

    vars_def           go to state 137
    $@15               go to state 163
    body_code          go to state 139
    llamado            go to state 140
    asignacion         go to state 141
    array_assignment   go to state 142
    estatuto           go to state 143
    if_statement       go to state 144
    for_statement      go to state 145
    while_statement    go to state 146
    select_statement   go to state 147
    default_functions  go to state 148
    read               go to state 149
    default_choices    go to state 150


state 152

   27 dimension_arreglo: CORCHETE_ABIERTO CTE_INTEGER $@7 COMA CTE_INTEGER $@8 CORCHETE_CERRADO .

    $default  reduce using rule 27 (dimension_arreglo)


state 153

  115 read: READ PAR_ABIERTO . ID ids PAR_CERRADO PUNTO

    ID  shift, and go to state 164


state 154

  105 for_statement: FOR ID . IGUAL exp TO exp for_step END FOR

    IGUAL  shift, and go to state 165


state 155

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
  108 while_statement: WHILE PAR_ABIERTO . expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    expresion            go to state 166
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 156

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
  104 if_statement: IF PAR_ABIERTO . expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    expresion            go to state 167
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 157

  109 select_statement: SELECT ID . DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DOS_PUNTOS  shift, and go to state 168


state 158

   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
   98 array_assignment: ID CORCHETE_ABIERTO . exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | ID CORCHETE_ABIERTO . exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exp                  go to state 169
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 159

   96 asignacion: ID $@17 . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 170


state 160

   76 metodo_main: METHOD VOID MAIN $@11 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@12 END . METHOD

    METHOD  shift, and go to state 171


state 161

   92 body_code: llamado PUNTO .

    $default  reduce using rule 92 (body_code)


state 162

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
  113 default_functions: default_choices PAR_ABIERTO . default_function_input_def default_function_input PAR_CERRADO PUNTO
  121 default_function_input_def: . expresion
  122                           | . COMILLAS CTE_STRING COMILLAS

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    COMILLAS     shift, and go to state 172
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    expresion                   go to state 173
    exp                         go to state 53
    termino                     go to state 54
    exponencial                 go to state 55
    factor                      go to state 56
    factor_alterno              go to state 57
    operadores_binarios         go to state 58
    var                         go to state 59
    default_function_input_def  go to state 174


state 163

   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 . RETURN expresion PUNTO END METHOD

    RETURN  shift, and go to state 175


state 164

  115 read: READ PAR_ABIERTO ID . ids PAR_CERRADO PUNTO
  116 ids: . ids_def ids
  117    | .  [PAR_CERRADO]
  118 ids_def: . COMA ID

    COMA  shift, and go to state 176

    $default  reduce using rule 117 (ids)

    ids      go to state 177
    ids_def  go to state 178


state 165

   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
  105 for_statement: FOR ID IGUAL . exp TO exp for_step END FOR

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exp                  go to state 179
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 166

  108 while_statement: WHILE PAR_ABIERTO expresion . PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    PAR_CERRADO  shift, and go to state 180


state 167

  104 if_statement: IF PAR_ABIERTO expresion . PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    PAR_CERRADO  shift, and go to state 181


state 168

  109 select_statement: SELECT ID DOS_PUNTOS . CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    CASE  shift, and go to state 182


state 169

   98 array_assignment: ID CORCHETE_ABIERTO exp . CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | ID CORCHETE_ABIERTO exp . COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    COMA              shift, and go to state 183
    CORCHETE_CERRADO  shift, and go to state 184


state 170

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
   96 asignacion: ID $@17 IGUAL . expresion PUNTO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    expresion            go to state 185
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 171

   76 metodo_main: METHOD VOID MAIN $@11 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@12 END METHOD .

    $default  reduce using rule 76 (metodo_main)


state 172

  122 default_function_input_def: COMILLAS . CTE_STRING COMILLAS

    CTE_STRING  shift, and go to state 186


state 173

  121 default_function_input_def: expresion .

    $default  reduce using rule 121 (default_function_input_def)


state 174

  113 default_functions: default_choices PAR_ABIERTO default_function_input_def . default_function_input PAR_CERRADO PUNTO
  119 default_function_input: . MAS default_function_input_def default_function_input
  120                       | .  [PAR_CERRADO]

    MAS  shift, and go to state 187

    $default  reduce using rule 120 (default_function_input)

    default_function_input  go to state 188


state 175

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN . expresion PUNTO END METHOD

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    expresion            go to state 189
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 176

  118 ids_def: COMA . ID

    ID  shift, and go to state 190


state 177

  115 read: READ PAR_ABIERTO ID ids . PAR_CERRADO PUNTO

    PAR_CERRADO  shift, and go to state 191


state 178

  116 ids: . ids_def ids
  116    | ids_def . ids
  117    | .  [PAR_CERRADO]
  118 ids_def: . COMA ID

    COMA  shift, and go to state 176

    $default  reduce using rule 117 (ids)

    ids      go to state 192
    ids_def  go to state 178


state 179

  105 for_statement: FOR ID IGUAL exp . TO exp for_step END FOR

    TO  shift, and go to state 193


state 180

  108 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO . DOS_PUNTOS metodo_body END WHILE

    DOS_PUNTOS  shift, and go to state 194


state 181

  104 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO . DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    DOS_PUNTOS  shift, and go to state 195


state 182

  109 select_statement: SELECT ID DOS_PUNTOS CASE . DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DEFAULT  shift, and go to state 196


state 183

   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
   99 array_assignment: ID CORCHETE_ABIERTO exp COMA . exp CORCHETE_CERRADO IGUAL expresion PUNTO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exp                  go to state 197
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 184

   98 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 198


state 185

   96 asignacion: ID $@17 IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 199


state 186

  122 default_function_input_def: COMILLAS CTE_STRING . COMILLAS

    COMILLAS  shift, and go to state 200


state 187

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
  119 default_function_input: MAS . default_function_input_def default_function_input
  121 default_function_input_def: . expresion
  122                           | . COMILLAS CTE_STRING COMILLAS

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    COMILLAS     shift, and go to state 172
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    expresion                   go to state 173
    exp                         go to state 53
    termino                     go to state 54
    exponencial                 go to state 55
    factor                      go to state 56
    factor_alterno              go to state 57
    operadores_binarios         go to state 58
    var                         go to state 59
    default_function_input_def  go to state 201


state 188

  113 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input . PAR_CERRADO PUNTO

    PAR_CERRADO  shift, and go to state 202


state 189

   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion . PUNTO END METHOD

    PUNTO  shift, and go to state 203


state 190

  118 ids_def: COMA ID .

    $default  reduce using rule 118 (ids_def)


state 191

  115 read: READ PAR_ABIERTO ID ids PAR_CERRADO . PUNTO

    PUNTO  shift, and go to state 204


state 192

  116 ids: ids_def ids .

    $default  reduce using rule 116 (ids)


state 193

   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
  105 for_statement: FOR ID IGUAL exp TO . exp for_step END FOR

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exp                  go to state 205
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 194

   81 metodo_body: . metodo_body body_code
   82            | .
  108 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS . metodo_body END WHILE

    $default  reduce using rule 82 (metodo_body)

    metodo_body  go to state 206


state 195

   81 metodo_body: . metodo_body body_code
   82            | .
  104 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS . metodo_body ELSE DOS_PUNTOS metodo_body END IF

    $default  reduce using rule 82 (metodo_body)

    metodo_body  go to state 207


state 196

  109 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT . DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DOS_PUNTOS  shift, and go to state 208


state 197

   99 array_assignment: ID CORCHETE_ABIERTO exp COMA exp . CORCHETE_CERRADO IGUAL expresion PUNTO

    CORCHETE_CERRADO  shift, and go to state 209


state 198

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
   98 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL . expresion PUNTO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    expresion            go to state 210
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 199

   96 asignacion: ID $@17 IGUAL expresion PUNTO .

    $default  reduce using rule 96 (asignacion)


state 200

  122 default_function_input_def: COMILLAS CTE_STRING COMILLAS .

    $default  reduce using rule 122 (default_function_input_def)


state 201

  119 default_function_input: . MAS default_function_input_def default_function_input
  119                       | MAS default_function_input_def . default_function_input
  120                       | .  [PAR_CERRADO]

    MAS  shift, and go to state 187

    $default  reduce using rule 120 (default_function_input)

    default_function_input  go to state 211


state 202

  113 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO . PUNTO

    PUNTO  shift, and go to state 212


state 203

   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO . END METHOD

    END  shift, and go to state 213


state 204

  115 read: READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO .

    $default  reduce using rule 115 (read)


state 205

  105 for_statement: FOR ID IGUAL exp TO exp . for_step END FOR
  106 for_step: . DOS_PUNTOS metodo_body
  107         | . STEP exp DOS_PUNTOS metodo_body

    STEP        shift, and go to state 214
    DOS_PUNTOS  shift, and go to state 215

    for_step  go to state 216


state 206

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   81 metodo_body: metodo_body . body_code
   89 body_code: . vars_def
   90          | . asignacion
   91          | . estatuto
   92          | . llamado PUNTO
   93          | . default_functions
   94 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   96 asignacion: . ID $@17 IGUAL expresion PUNTO
   97           | . array_assignment
   98 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
  100 estatuto: . if_statement
  101         | . for_statement
  102         | . while_statement
  103         | . select_statement
  104 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  105 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  108 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  108                | WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body . END WHILE
  109 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  113 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  114                  | . read
  115 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  123 default_choices: . PRINT
  124                | . PRINTLINE

    PRINT      shift, and go to state 129
    PRINTLINE  shift, and go to state 130
    READ       shift, and go to state 131
    DEFINE     shift, and go to state 8
    END        shift, and go to state 217
    FOR        shift, and go to state 132
    WHILE      shift, and go to state 133
    IF         shift, and go to state 134
    SELECT     shift, and go to state 135
    ID         shift, and go to state 136

    vars_def           go to state 137
    body_code          go to state 139
    llamado            go to state 140
    asignacion         go to state 141
    array_assignment   go to state 142
    estatuto           go to state 143
    if_statement       go to state 144
    for_statement      go to state 145
    while_statement    go to state 146
    select_statement   go to state 147
    default_functions  go to state 148
    read               go to state 149
    default_choices    go to state 150


state 207

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   81 metodo_body: metodo_body . body_code
   89 body_code: . vars_def
   90          | . asignacion
   91          | . estatuto
   92          | . llamado PUNTO
   93          | . default_functions
   94 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   96 asignacion: . ID $@17 IGUAL expresion PUNTO
   97           | . array_assignment
   98 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
  100 estatuto: . if_statement
  101         | . for_statement
  102         | . while_statement
  103         | . select_statement
  104 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  104             | IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body . ELSE DOS_PUNTOS metodo_body END IF
  105 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  108 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  109 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  113 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  114                  | . read
  115 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  123 default_choices: . PRINT
  124                | . PRINTLINE

    PRINT      shift, and go to state 129
    PRINTLINE  shift, and go to state 130
    READ       shift, and go to state 131
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 132
    WHILE      shift, and go to state 133
    IF         shift, and go to state 134
    SELECT     shift, and go to state 135
    ELSE       shift, and go to state 218
    ID         shift, and go to state 136

    vars_def           go to state 137
    body_code          go to state 139
    llamado            go to state 140
    asignacion         go to state 141
    array_assignment   go to state 142
    estatuto           go to state 143
    if_statement       go to state 144
    for_statement      go to state 145
    while_statement    go to state 146
    select_statement   go to state 147
    default_functions  go to state 148
    read               go to state 149
    default_choices    go to state 150


state 208

   81 metodo_body: . metodo_body body_code
   82            | .
  109 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS . metodo_body END CASE case_statement END SELECT

    $default  reduce using rule 82 (metodo_body)

    metodo_body  go to state 219


state 209

   99 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 220


state 210

   98 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 221


state 211

  119 default_function_input: MAS default_function_input_def default_function_input .

    $default  reduce using rule 119 (default_function_input)


state 212

  113 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO .

    $default  reduce using rule 113 (default_functions)


state 213

   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END . METHOD

    METHOD  shift, and go to state 222


state 214

   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
  107 for_step: STEP . exp DOS_PUNTOS metodo_body

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    exp                  go to state 223
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 215

   81 metodo_body: . metodo_body body_code
   82            | .
  106 for_step: DOS_PUNTOS . metodo_body

    $default  reduce using rule 82 (metodo_body)

    metodo_body  go to state 224


state 216

  105 for_statement: FOR ID IGUAL exp TO exp for_step . END FOR

    END  shift, and go to state 225


state 217

  108 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END . WHILE

    WHILE  shift, and go to state 226


state 218

  104 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE . DOS_PUNTOS metodo_body END IF

    DOS_PUNTOS  shift, and go to state 227


state 219

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   81 metodo_body: metodo_body . body_code
   89 body_code: . vars_def
   90          | . asignacion
   91          | . estatuto
   92          | . llamado PUNTO
   93          | . default_functions
   94 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   96 asignacion: . ID $@17 IGUAL expresion PUNTO
   97           | . array_assignment
   98 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
  100 estatuto: . if_statement
  101         | . for_statement
  102         | . while_statement
  103         | . select_statement
  104 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  105 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  108 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  109 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  109                 | SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body . END CASE case_statement END SELECT
  113 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  114                  | . read
  115 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  123 default_choices: . PRINT
  124                | . PRINTLINE

    PRINT      shift, and go to state 129
    PRINTLINE  shift, and go to state 130
    READ       shift, and go to state 131
    DEFINE     shift, and go to state 8
    END        shift, and go to state 228
    FOR        shift, and go to state 132
    WHILE      shift, and go to state 133
    IF         shift, and go to state 134
    SELECT     shift, and go to state 135
    ID         shift, and go to state 136

    vars_def           go to state 137
    body_code          go to state 139
    llamado            go to state 140
    asignacion         go to state 141
    array_assignment   go to state 142
    estatuto           go to state 143
    if_statement       go to state 144
    for_statement      go to state 145
    while_statement    go to state 146
    select_statement   go to state 147
    default_functions  go to state 148
    read               go to state 149
    default_choices    go to state 150


state 220

   28 expresion: . exp
   29          | . exp operador_logico exp
   44 exp: . termino
   46    | . termino MAS $@9 termino
   48    | . termino MENOS $@10 termino
   49 termino: . exponencial
   50        | . exponencial POR exponencial
   51        | . exponencial DIVISION exponencial
   52 exponencial: . factor
   53            | . factor EXPONENCIAL
   54 factor: . var
   55       | . PAR_ABIERTO expresion PAR_CERRADO
   56       | . factor_alterno
   57 factor_alterno: . operadores_binarios factor_alterno_choices
   58 operadores_binarios: . MAS
   59                    | . MENOS
   60                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   66 var: . ID
   67    | . CTE_INTEGER
   68    | . CTE_STRING
   69    | . CTE_DECIMAL
   70    | . VERDADERO
   71    | . FALSO
   99 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL . expresion PUNTO

    FALSO        shift, and go to state 43
    VERDADERO    shift, and go to state 44
    PAR_ABIERTO  shift, and go to state 45
    MAS          shift, and go to state 46
    MENOS        shift, and go to state 47
    ID           shift, and go to state 48
    CTE_STRING   shift, and go to state 49
    CTE_DECIMAL  shift, and go to state 50
    CTE_INTEGER  shift, and go to state 51

    ID           [reduce using rule 60 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 60 (operadores_binarios)]
    $default     reduce using rule 60 (operadores_binarios)

    expresion            go to state 229
    exp                  go to state 53
    termino              go to state 54
    exponencial          go to state 55
    factor               go to state 56
    factor_alterno       go to state 57
    operadores_binarios  go to state 58
    var                  go to state 59


state 221

   98 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO .

    $default  reduce using rule 98 (array_assignment)


state 222

   80 metodo_def: METHOD tipo $@13 ID $@14 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@15 RETURN expresion PUNTO END METHOD .

    $default  reduce using rule 80 (metodo_def)


state 223

  107 for_step: STEP exp . DOS_PUNTOS metodo_body

    DOS_PUNTOS  shift, and go to state 230


state 224

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   81 metodo_body: metodo_body . body_code
   89 body_code: . vars_def
   90          | . asignacion
   91          | . estatuto
   92          | . llamado PUNTO
   93          | . default_functions
   94 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   96 asignacion: . ID $@17 IGUAL expresion PUNTO
   97           | . array_assignment
   98 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
  100 estatuto: . if_statement
  101         | . for_statement
  102         | . while_statement
  103         | . select_statement
  104 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  105 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  106 for_step: DOS_PUNTOS metodo_body .  [END]
  108 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  109 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  113 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  114                  | . read
  115 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  123 default_choices: . PRINT
  124                | . PRINTLINE

    PRINT      shift, and go to state 129
    PRINTLINE  shift, and go to state 130
    READ       shift, and go to state 131
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 132
    WHILE      shift, and go to state 133
    IF         shift, and go to state 134
    SELECT     shift, and go to state 135
    ID         shift, and go to state 136

    $default  reduce using rule 106 (for_step)

    vars_def           go to state 137
    body_code          go to state 139
    llamado            go to state 140
    asignacion         go to state 141
    array_assignment   go to state 142
    estatuto           go to state 143
    if_statement       go to state 144
    for_statement      go to state 145
    while_statement    go to state 146
    select_statement   go to state 147
    default_functions  go to state 148
    read               go to state 149
    default_choices    go to state 150


state 225

  105 for_statement: FOR ID IGUAL exp TO exp for_step END . FOR

    FOR  shift, and go to state 231


state 226

  108 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE .

    $default  reduce using rule 108 (while_statement)


state 227

   81 metodo_body: . metodo_body body_code
   82            | .
  104 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS . metodo_body END IF

    $default  reduce using rule 82 (metodo_body)

    metodo_body  go to state 232


state 228

  109 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END . CASE case_statement END SELECT

    CASE  shift, and go to state 233


state 229

   99 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 234


state 230

   81 metodo_body: . metodo_body body_code
   82            | .
  107 for_step: STEP exp DOS_PUNTOS . metodo_body

    $default  reduce using rule 82 (metodo_body)

    metodo_body  go to state 235


state 231

  105 for_statement: FOR ID IGUAL exp TO exp for_step END FOR .

    $default  reduce using rule 105 (for_statement)


state 232

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   81 metodo_body: metodo_body . body_code
   89 body_code: . vars_def
   90          | . asignacion
   91          | . estatuto
   92          | . llamado PUNTO
   93          | . default_functions
   94 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   96 asignacion: . ID $@17 IGUAL expresion PUNTO
   97           | . array_assignment
   98 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
  100 estatuto: . if_statement
  101         | . for_statement
  102         | . while_statement
  103         | . select_statement
  104 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  104             | IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body . END IF
  105 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  108 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  109 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  113 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  114                  | . read
  115 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  123 default_choices: . PRINT
  124                | . PRINTLINE

    PRINT      shift, and go to state 129
    PRINTLINE  shift, and go to state 130
    READ       shift, and go to state 131
    DEFINE     shift, and go to state 8
    END        shift, and go to state 236
    FOR        shift, and go to state 132
    WHILE      shift, and go to state 133
    IF         shift, and go to state 134
    SELECT     shift, and go to state 135
    ID         shift, and go to state 136

    vars_def           go to state 137
    body_code          go to state 139
    llamado            go to state 140
    asignacion         go to state 141
    array_assignment   go to state 142
    estatuto           go to state 143
    if_statement       go to state 144
    for_statement      go to state 145
    while_statement    go to state 146
    select_statement   go to state 147
    default_functions  go to state 148
    read               go to state 149
    default_choices    go to state 150


state 233

  109 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE . case_statement END SELECT
  110 case_statement: . case_statement_def case_statement
  111               | .  [END]
  112 case_statement_def: . CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CASE  shift, and go to state 237

    $default  reduce using rule 111 (case_statement)

    case_statement      go to state 238
    case_statement_def  go to state 239


state 234

   99 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO .

    $default  reduce using rule 99 (array_assignment)


state 235

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   81 metodo_body: metodo_body . body_code
   89 body_code: . vars_def
   90          | . asignacion
   91          | . estatuto
   92          | . llamado PUNTO
   93          | . default_functions
   94 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   96 asignacion: . ID $@17 IGUAL expresion PUNTO
   97           | . array_assignment
   98 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
  100 estatuto: . if_statement
  101         | . for_statement
  102         | . while_statement
  103         | . select_statement
  104 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  105 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  107 for_step: STEP exp DOS_PUNTOS metodo_body .  [END]
  108 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  109 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  113 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  114                  | . read
  115 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  123 default_choices: . PRINT
  124                | . PRINTLINE

    PRINT      shift, and go to state 129
    PRINTLINE  shift, and go to state 130
    READ       shift, and go to state 131
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 132
    WHILE      shift, and go to state 133
    IF         shift, and go to state 134
    SELECT     shift, and go to state 135
    ID         shift, and go to state 136

    $default  reduce using rule 107 (for_step)

    vars_def           go to state 137
    body_code          go to state 139
    llamado            go to state 140
    asignacion         go to state 141
    array_assignment   go to state 142
    estatuto           go to state 143
    if_statement       go to state 144
    for_statement      go to state 145
    while_statement    go to state 146
    select_statement   go to state 147
    default_functions  go to state 148
    read               go to state 149
    default_choices    go to state 150


state 236

  104 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END . IF

    IF  shift, and go to state 240


state 237

  112 case_statement_def: CASE . CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CTE_INTEGER  shift, and go to state 241


state 238

  109 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement . END SELECT

    END  shift, and go to state 242


state 239

  110 case_statement: . case_statement_def case_statement
  110               | case_statement_def . case_statement
  111               | .  [END]
  112 case_statement_def: . CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CASE  shift, and go to state 237

    $default  reduce using rule 111 (case_statement)

    case_statement      go to state 243
    case_statement_def  go to state 239


state 240

  104 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF .

    $default  reduce using rule 104 (if_statement)


state 241

  112 case_statement_def: CASE CTE_INTEGER . DOS_PUNTOS metodo_body END CASE

    DOS_PUNTOS  shift, and go to state 244


state 242

  109 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END . SELECT

    SELECT  shift, and go to state 245


state 243

  110 case_statement: case_statement_def case_statement .

    $default  reduce using rule 110 (case_statement)


state 244

   81 metodo_body: . metodo_body body_code
   82            | .
  112 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS . metodo_body END CASE

    $default  reduce using rule 82 (metodo_body)

    metodo_body  go to state 246


state 245

  109 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT .

    $default  reduce using rule 109 (select_statement)


state 246

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   81 metodo_body: metodo_body . body_code
   89 body_code: . vars_def
   90          | . asignacion
   91          | . estatuto
   92          | . llamado PUNTO
   93          | . default_functions
   94 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   96 asignacion: . ID $@17 IGUAL expresion PUNTO
   97           | . array_assignment
   98 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   99                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
  100 estatuto: . if_statement
  101         | . for_statement
  102         | . while_statement
  103         | . select_statement
  104 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
  105 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
  108 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  109 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  112 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body . END CASE
  113 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  114                  | . read
  115 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  123 default_choices: . PRINT
  124                | . PRINTLINE

    PRINT      shift, and go to state 129
    PRINTLINE  shift, and go to state 130
    READ       shift, and go to state 131
    DEFINE     shift, and go to state 8
    END        shift, and go to state 247
    FOR        shift, and go to state 132
    WHILE      shift, and go to state 133
    IF         shift, and go to state 134
    SELECT     shift, and go to state 135
    ID         shift, and go to state 136

    vars_def           go to state 137
    body_code          go to state 139
    llamado            go to state 140
    asignacion         go to state 141
    array_assignment   go to state 142
    estatuto           go to state 143
    if_statement       go to state 144
    for_statement      go to state 145
    while_statement    go to state 146
    select_statement   go to state 147
    default_functions  go to state 148
    read               go to state 149
    default_choices    go to state 150


state 247

  112 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END . CASE

    CASE  shift, and go to state 248


state 248

  112 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE .

    $default  reduce using rule 112 (case_statement_def)
