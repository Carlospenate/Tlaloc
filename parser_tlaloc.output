State 37 conflicts: 2 shift/reduce
State 44 conflicts: 2 shift/reduce
State 52 conflicts: 1 reduce/reduce
State 53 conflicts: 2 shift/reduce
State 73 conflicts: 2 shift/reduce
State 74 conflicts: 2 shift/reduce
State 75 conflicts: 2 shift/reduce
State 76 conflicts: 2 shift/reduce
State 77 conflicts: 2 shift/reduce
State 85 conflicts: 1 shift/reduce
State 102 conflicts: 2 shift/reduce
State 103 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 146 conflicts: 2 shift/reduce
State 147 conflicts: 2 shift/reduce
State 149 conflicts: 2 shift/reduce
State 150 conflicts: 2 shift/reduce
State 153 conflicts: 2 shift/reduce
State 156 conflicts: 2 shift/reduce
State 166 conflicts: 2 shift/reduce
State 174 conflicts: 2 shift/reduce
State 178 conflicts: 2 shift/reduce
State 184 conflicts: 2 shift/reduce
State 189 conflicts: 2 shift/reduce
State 204 conflicts: 2 shift/reduce
State 210 conflicts: 2 shift/reduce


Grammar

    0 $accept: tlaloc $end

    1 $@1: /* empty */

    2 $@2: /* empty */

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    4 vars: vars vars_def
    5     | /* empty */

    6 $@3: /* empty */

    7 $@4: /* empty */

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO

    9 declaracion: APUNTADOR ID
   10            | ID

   11 tipo: INTEGER
   12     | STRING
   13     | BOOLEAN
   14     | DECIMAL
   15     | VOID

   16 asignacion_var: IGUAL expresion

   17 $@5: /* empty */

   18 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER $@5 CORCHETE_CERRADO
   19               | CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO
   20               | /* empty */

   21 expresion: exp
   22          | exp operador_logico exp

   23 funcion_matematica: math_choices PAR_ABIERTO exp PAR_CERRADO

   24 math_choices: ABS
   25             | COS
   26             | SIN
   27             | LOG
   28             | TAN
   29             | SQRT

   30 operador_logico: AND
   31                | OR
   32                | MAYOR_QUE
   33                | MENOR_QUE
   34                | DIFERENTE
   35                | IGUAL_IGUAL
   36                | /* empty */

   37 exp: termino
   38    | termino MAS termino
   39    | termino MENOS termino

   40 termino: exponencial
   41        | exponencial POR exponencial
   42        | exponencial DIVISION exponencial

   43 exponencial: factor
   44            | factor EXPONENCIAL

   45 factor: var
   46       | PAR_ABIERTO expresion PAR_CERRADO
   47       | factor_alterno

   48 factor_alterno: operadores_binarios factor_alterno_choices

   49 operadores_binarios: MAS
   50                    | MENOS
   51                    | /* empty */

   52 factor_alterno_choices: CTE_INTEGER
   53                       | llamado
   54                       | funcion_matematica
   55                       | ID CORCHETE_ABIERTO exp CORCHETE_CERRADO
   56                       | ID

   57 var: ID
   58    | CTE_INTEGER
   59    | CTE_STRING
   60    | CTE_DECIMAL
   61    | VERDADERO
   62    | FALSO

   63 metodo: metodo metodo_def
   64       | /* empty */

   65 $@6: /* empty */

   66 $@7: /* empty */

   67 metodo_main: METHOD VOID MAIN $@6 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@7 END METHOD

   68 $@8: /* empty */

   69 $@9: /* empty */

   70 $@10: /* empty */

   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD

   72 metodo_body: metodo_body body_code
   73            | /* empty */

   74 parametros: parametros_def

   75 $@11: /* empty */

   76 $@12: /* empty */

   77 parametros_def: tipo $@11 declaracion $@12 parametros_extra
   78               | /* empty */

   79 parametros_extra: COMA parametros_def
   80                 | /* empty */

   81 body_code: vars_def
   82          | asignacion
   83          | estatuto
   84          | llamado PUNTO
   85          | default_functions

   86 llamado: ID PAR_ABIERTO exp PAR_CERRADO

   87 asignacion: ID IGUAL expresion PUNTO
   88           | array_assignment

   89 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

   91 estatuto: if_statement
   92         | for_statement
   93         | while_statement
   94         | select_statement

   95 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

   96 for_statement: FOR ID IGUAL exp TO exp for_step END FOR

   97 for_step: DOS_PUNTOS metodo_body
   98         | STEP exp DOS_PUNTOS metodo_body

   99 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

  100 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

  101 case_statement: case_statement_def case_statement
  102               | /* empty */

  103 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

  104 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  105                  | read

  106 read: READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO

  107 ids: ids_def ids
  108    | /* empty */

  109 ids_def: COMA ID

  110 default_function_input: MAS default_function_input_def default_function_input
  111                       | /* empty */

  112 default_function_input_def: expresion
  113                           | COMILLAS CTE_STRING COMILLAS

  114 default_choices: PRINT
  115                | PRINTLINE


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 3
METHOD (259) 67 71
PRINT (260) 114
PRINTLINE (261) 115
READ (262) 106
CASE (263) 100 103
DEFAULT (264) 100
DEFINE (265) 8
AS (266) 8
TO (267) 96
STEP (268) 98
INTEGER (269) 11
DECIMAL (270) 14
MAIN (271) 67
STRING (272) 12
BOOLEAN (273) 13
END (274) 3 67 71 95 96 99 100 103
FALSO (275) 62
VERDADERO (276) 61
VOID (277) 15 67
RETURN (278) 71
AND (279) 30
OR (280) 31
ABS (281) 24
COS (282) 25
SIN (283) 26
LOG (284) 27
TAN (285) 28
SQRT (286) 29
FOR (287) 96
WHILE (288) 99
IF (289) 95
SELECT (290) 100
ELSE (291) 95
PAR_ABIERTO (292) 23 46 67 71 86 95 99 104 106
PAR_CERRADO (293) 23 46 67 71 86 95 99 104 106
COMA (294) 19 79 90 109
DOS_PUNTOS (295) 3 67 71 95 97 98 99 100 103
CORCHETE_ABIERTO (296) 18 19 55 89 90
CORCHETE_CERRADO (297) 18 19 55 89 90
IGUAL (298) 16 87 89 90 96
IGUAL_IGUAL (299) 35
MENOR_QUE (300) 33
MAYOR_QUE (301) 32
DIFERENTE (302) 34
POR (303) 41
MAS (304) 38 49 110
MENOS (305) 39 50
DIVISION (306) 42
EXPONENCIAL (307) 44
PUNTO (308) 8 71 84 87 89 90 104 106
APUNTADOR (309) 9
COMILLAS (310) 113
ID (311) 3 9 10 55 56 57 71 86 87 89 90 96 100 106 109
CTE_STRING (312) 59 113
CTE_DECIMAL (313) 60
CTE_INTEGER (314) 18 19 52 58 103


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
tlaloc (61)
    on left: 3, on right: 0
$@1 (62)
    on left: 1, on right: 3
$@2 (63)
    on left: 2, on right: 3
vars (64)
    on left: 4 5, on right: 3 4
vars_def (65)
    on left: 8, on right: 4 81
$@3 (66)
    on left: 6, on right: 8
$@4 (67)
    on left: 7, on right: 8
declaracion (68)
    on left: 9 10, on right: 8 77
tipo (69)
    on left: 11 12 13 14 15, on right: 8 71 77
asignacion_var (70)
    on left: 16 18 19 20, on right: 8
$@5 (71)
    on left: 17, on right: 18
expresion (72)
    on left: 21 22, on right: 16 46 71 87 89 90 95 99 112
funcion_matematica (73)
    on left: 23, on right: 54
math_choices (74)
    on left: 24 25 26 27 28 29, on right: 23
operador_logico (75)
    on left: 30 31 32 33 34 35 36, on right: 22
exp (76)
    on left: 37 38 39, on right: 21 22 23 55 86 89 90 96 98
termino (77)
    on left: 40 41 42, on right: 37 38 39
exponencial (78)
    on left: 43 44, on right: 40 41 42
factor (79)
    on left: 45 46 47, on right: 43 44
factor_alterno (80)
    on left: 48, on right: 47
operadores_binarios (81)
    on left: 49 50 51, on right: 48
factor_alterno_choices (82)
    on left: 52 53 54 55 56, on right: 48
var (83)
    on left: 57 58 59 60 61 62, on right: 45
metodo (84)
    on left: 63 64, on right: 3 63
metodo_main (85)
    on left: 67, on right: 3
$@6 (86)
    on left: 65, on right: 67
$@7 (87)
    on left: 66, on right: 67
metodo_def (88)
    on left: 71, on right: 63
$@8 (89)
    on left: 68, on right: 71
$@9 (90)
    on left: 69, on right: 71
$@10 (91)
    on left: 70, on right: 71
metodo_body (92)
    on left: 72 73, on right: 67 71 72 95 97 98 99 100 103
parametros (93)
    on left: 74, on right: 67 71
parametros_def (94)
    on left: 77 78, on right: 74 79
$@11 (95)
    on left: 75, on right: 77
$@12 (96)
    on left: 76, on right: 77
parametros_extra (97)
    on left: 79 80, on right: 77
body_code (98)
    on left: 81 82 83 84 85, on right: 72
llamado (99)
    on left: 86, on right: 53 84
asignacion (100)
    on left: 87 88, on right: 82
array_assignment (101)
    on left: 89 90, on right: 88
estatuto (102)
    on left: 91 92 93 94, on right: 83
if_statement (103)
    on left: 95, on right: 91
for_statement (104)
    on left: 96, on right: 92
for_step (105)
    on left: 97 98, on right: 96
while_statement (106)
    on left: 99, on right: 93
select_statement (107)
    on left: 100, on right: 94
case_statement (108)
    on left: 101 102, on right: 100 101
case_statement_def (109)
    on left: 103, on right: 101
default_functions (110)
    on left: 104 105, on right: 85
read (111)
    on left: 106, on right: 105
ids (112)
    on left: 107 108, on right: 106 107
ids_def (113)
    on left: 109, on right: 107
default_function_input (114)
    on left: 110 111, on right: 104 110
default_function_input_def (115)
    on left: 112 113, on right: 104 110
default_choices (116)
    on left: 114 115, on right: 104


state 0

    0 $accept: . tlaloc $end
    3 tlaloc: . PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    PROGRAM  shift, and go to state 1

    tlaloc  go to state 2


state 1

    3 tlaloc: PROGRAM . ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    ID  shift, and go to state 3


state 2

    0 $accept: tlaloc . $end

    $end  shift, and go to state 4


state 3

    1 $@1: .
    3 tlaloc: PROGRAM ID . $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


state 4

    0 $accept: tlaloc $end .

    $default  accept


state 5

    3 tlaloc: PROGRAM ID $@1 . DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM

    DOS_PUNTOS  shift, and go to state 6


state 6

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS . vars $@2 metodo metodo_main END PROGRAM
    4 vars: . vars vars_def
    5     | .

    $default  reduce using rule 5 (vars)

    vars  go to state 7


state 7

    2 $@2: .  [METHOD]
    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars . $@2 metodo metodo_main END PROGRAM
    4 vars: vars . vars_def
    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO

    DEFINE  shift, and go to state 8

    $default  reduce using rule 2 ($@2)

    $@2       go to state 9
    vars_def  go to state 10


state 8

    8 vars_def: DEFINE . declaracion $@3 AS tipo $@4 asignacion_var PUNTO
    9 declaracion: . APUNTADOR ID
   10            | . ID

    APUNTADOR  shift, and go to state 11
    ID         shift, and go to state 12

    declaracion  go to state 13


state 9

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 . metodo metodo_main END PROGRAM
   63 metodo: . metodo metodo_def
   64       | .

    $default  reduce using rule 64 (metodo)

    metodo  go to state 14


state 10

    4 vars: vars vars_def .

    $default  reduce using rule 4 (vars)


state 11

    9 declaracion: APUNTADOR . ID

    ID  shift, and go to state 15


state 12

   10 declaracion: ID .

    $default  reduce using rule 10 (declaracion)


state 13

    6 $@3: .
    8 vars_def: DEFINE declaracion . $@3 AS tipo $@4 asignacion_var PUNTO

    $default  reduce using rule 6 ($@3)

    $@3  go to state 16


state 14

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo . metodo_main END PROGRAM
   63 metodo: metodo . metodo_def
   67 metodo_main: . METHOD VOID MAIN $@6 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@7 END METHOD
   71 metodo_def: . METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD

    METHOD  shift, and go to state 17

    metodo_main  go to state 18
    metodo_def   go to state 19


state 15

    9 declaracion: APUNTADOR ID .

    $default  reduce using rule 9 (declaracion)


state 16

    8 vars_def: DEFINE declaracion $@3 . AS tipo $@4 asignacion_var PUNTO

    AS  shift, and go to state 20


state 17

   11 tipo: . INTEGER
   12     | . STRING
   13     | . BOOLEAN
   14     | . DECIMAL
   15     | . VOID
   67 metodo_main: METHOD . VOID MAIN $@6 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@7 END METHOD
   71 metodo_def: METHOD . tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 25

    tipo  go to state 26


state 18

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main . END PROGRAM

    END  shift, and go to state 27


state 19

   63 metodo: metodo metodo_def .

    $default  reduce using rule 63 (metodo)


state 20

    8 vars_def: DEFINE declaracion $@3 AS . tipo $@4 asignacion_var PUNTO
   11 tipo: . INTEGER
   12     | . STRING
   13     | . BOOLEAN
   14     | . DECIMAL
   15     | . VOID

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    tipo  go to state 29


state 21

   11 tipo: INTEGER .

    $default  reduce using rule 11 (tipo)


state 22

   14 tipo: DECIMAL .

    $default  reduce using rule 14 (tipo)


state 23

   12 tipo: STRING .

    $default  reduce using rule 12 (tipo)


state 24

   13 tipo: BOOLEAN .

    $default  reduce using rule 13 (tipo)


state 25

   15 tipo: VOID .  [ID]
   67 metodo_main: METHOD VOID . MAIN $@6 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@7 END METHOD

    MAIN  shift, and go to state 30

    $default  reduce using rule 15 (tipo)


state 26

   68 $@8: .
   71 metodo_def: METHOD tipo . $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD

    $default  reduce using rule 68 ($@8)

    $@8  go to state 31


state 27

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END . PROGRAM

    PROGRAM  shift, and go to state 32


state 28

   15 tipo: VOID .

    $default  reduce using rule 15 (tipo)


state 29

    7 $@4: .
    8 vars_def: DEFINE declaracion $@3 AS tipo . $@4 asignacion_var PUNTO

    $default  reduce using rule 7 ($@4)

    $@4  go to state 33


state 30

   65 $@6: .
   67 metodo_main: METHOD VOID MAIN . $@6 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@7 END METHOD

    $default  reduce using rule 65 ($@6)

    $@6  go to state 34


state 31

   71 metodo_def: METHOD tipo $@8 . ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD

    ID  shift, and go to state 35


state 32

    3 tlaloc: PROGRAM ID $@1 DOS_PUNTOS vars $@2 metodo metodo_main END PROGRAM .

    $default  reduce using rule 3 (tlaloc)


state 33

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 . asignacion_var PUNTO
   16 asignacion_var: . IGUAL expresion
   18               | . CORCHETE_ABIERTO CTE_INTEGER $@5 CORCHETE_CERRADO
   19               | . CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO
   20               | .  [PUNTO]

    CORCHETE_ABIERTO  shift, and go to state 36
    IGUAL             shift, and go to state 37

    $default  reduce using rule 20 (asignacion_var)

    asignacion_var  go to state 38


state 34

   67 metodo_main: METHOD VOID MAIN $@6 . PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@7 END METHOD

    PAR_ABIERTO  shift, and go to state 39


state 35

   69 $@9: .
   71 metodo_def: METHOD tipo $@8 ID . $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD

    $default  reduce using rule 69 ($@9)

    $@9  go to state 40


state 36

   18 asignacion_var: CORCHETE_ABIERTO . CTE_INTEGER $@5 CORCHETE_CERRADO
   19               | CORCHETE_ABIERTO . CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO

    CTE_INTEGER  shift, and go to state 41


state 37

   16 asignacion_var: IGUAL . expresion
   21 expresion: . exp
   22          | . exp operador_logico exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    expresion            go to state 51
    exp                  go to state 52
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 38

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 asignacion_var . PUNTO

    PUNTO  shift, and go to state 59


state 39

   11 tipo: . INTEGER
   12     | . STRING
   13     | . BOOLEAN
   14     | . DECIMAL
   15     | . VOID
   67 metodo_main: METHOD VOID MAIN $@6 PAR_ABIERTO . parametros PAR_CERRADO DOS_PUNTOS metodo_body $@7 END METHOD
   74 parametros: . parametros_def
   77 parametros_def: . tipo $@11 declaracion $@12 parametros_extra
   78               | .  [PAR_CERRADO]

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    $default  reduce using rule 78 (parametros_def)

    tipo            go to state 60
    parametros      go to state 61
    parametros_def  go to state 62


state 40

   71 metodo_def: METHOD tipo $@8 ID $@9 . PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD

    PAR_ABIERTO  shift, and go to state 63


state 41

   17 $@5: .  [CORCHETE_CERRADO]
   18 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER . $@5 CORCHETE_CERRADO
   19               | CORCHETE_ABIERTO CTE_INTEGER . COMA CTE_INTEGER CORCHETE_CERRADO

    COMA  shift, and go to state 64

    $default  reduce using rule 17 ($@5)

    $@5  go to state 65


state 42

   62 var: FALSO .

    $default  reduce using rule 62 (var)


state 43

   61 var: VERDADERO .

    $default  reduce using rule 61 (var)


state 44

   21 expresion: . exp
   22          | . exp operador_logico exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   46       | PAR_ABIERTO . expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    expresion            go to state 66
    exp                  go to state 52
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 45

   49 operadores_binarios: MAS .

    $default  reduce using rule 49 (operadores_binarios)


state 46

   50 operadores_binarios: MENOS .

    $default  reduce using rule 50 (operadores_binarios)


state 47

   57 var: ID .

    $default  reduce using rule 57 (var)


state 48

   59 var: CTE_STRING .

    $default  reduce using rule 59 (var)


state 49

   60 var: CTE_DECIMAL .

    $default  reduce using rule 60 (var)


state 50

   58 var: CTE_INTEGER .

    $default  reduce using rule 58 (var)


state 51

   16 asignacion_var: IGUAL expresion .

    $default  reduce using rule 16 (asignacion_var)


state 52

   21 expresion: exp .  [PAR_CERRADO, MAS, PUNTO]
   22          | exp . operador_logico exp
   30 operador_logico: . AND
   31                | . OR
   32                | . MAYOR_QUE
   33                | . MENOR_QUE
   34                | . DIFERENTE
   35                | . IGUAL_IGUAL
   36                | .  [FALSO, VERDADERO, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, MAS, MENOS, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]

    AND          shift, and go to state 67
    OR           shift, and go to state 68
    IGUAL_IGUAL  shift, and go to state 69
    MENOR_QUE    shift, and go to state 70
    MAYOR_QUE    shift, and go to state 71
    DIFERENTE    shift, and go to state 72

    PAR_CERRADO  reduce using rule 21 (expresion)
    MAS          reduce using rule 21 (expresion)
    MAS          [reduce using rule 36 (operador_logico)]
    PUNTO        reduce using rule 21 (expresion)
    $default     reduce using rule 36 (operador_logico)

    operador_logico  go to state 73


state 53

   37 exp: termino .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, MAS, MENOS, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   38    | termino . MAS termino
   39    | termino . MENOS termino

    MAS    shift, and go to state 74
    MENOS  shift, and go to state 75

    MAS       [reduce using rule 37 (exp)]
    MENOS     [reduce using rule 37 (exp)]
    $default  reduce using rule 37 (exp)


state 54

   40 termino: exponencial .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, MAS, MENOS, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   41        | exponencial . POR exponencial
   42        | exponencial . DIVISION exponencial

    POR       shift, and go to state 76
    DIVISION  shift, and go to state 77

    $default  reduce using rule 40 (termino)


state 55

   43 exponencial: factor .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, POR, MAS, MENOS, DIVISION, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   44            | factor . EXPONENCIAL

    EXPONENCIAL  shift, and go to state 78

    $default  reduce using rule 43 (exponencial)


state 56

   47 factor: factor_alterno .

    $default  reduce using rule 47 (factor)


state 57

   23 funcion_matematica: . math_choices PAR_ABIERTO exp PAR_CERRADO
   24 math_choices: . ABS
   25             | . COS
   26             | . SIN
   27             | . LOG
   28             | . TAN
   29             | . SQRT
   48 factor_alterno: operadores_binarios . factor_alterno_choices
   52 factor_alterno_choices: . CTE_INTEGER
   53                       | . llamado
   54                       | . funcion_matematica
   55                       | . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO
   56                       | . ID
   86 llamado: . ID PAR_ABIERTO exp PAR_CERRADO

    ABS          shift, and go to state 79
    COS          shift, and go to state 80
    SIN          shift, and go to state 81
    LOG          shift, and go to state 82
    TAN          shift, and go to state 83
    SQRT         shift, and go to state 84
    ID           shift, and go to state 85
    CTE_INTEGER  shift, and go to state 86

    funcion_matematica      go to state 87
    math_choices            go to state 88
    factor_alterno_choices  go to state 89
    llamado                 go to state 90


state 58

   45 factor: var .

    $default  reduce using rule 45 (factor)


state 59

    8 vars_def: DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO .

    $default  reduce using rule 8 (vars_def)


state 60

   75 $@11: .
   77 parametros_def: tipo . $@11 declaracion $@12 parametros_extra

    $default  reduce using rule 75 ($@11)

    $@11  go to state 91


state 61

   67 metodo_main: METHOD VOID MAIN $@6 PAR_ABIERTO parametros . PAR_CERRADO DOS_PUNTOS metodo_body $@7 END METHOD

    PAR_CERRADO  shift, and go to state 92


state 62

   74 parametros: parametros_def .

    $default  reduce using rule 74 (parametros)


state 63

   11 tipo: . INTEGER
   12     | . STRING
   13     | . BOOLEAN
   14     | . DECIMAL
   15     | . VOID
   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO . parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD
   74 parametros: . parametros_def
   77 parametros_def: . tipo $@11 declaracion $@12 parametros_extra
   78               | .  [PAR_CERRADO]

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    $default  reduce using rule 78 (parametros_def)

    tipo            go to state 60
    parametros      go to state 93
    parametros_def  go to state 62


state 64

   19 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER COMA . CTE_INTEGER CORCHETE_CERRADO

    CTE_INTEGER  shift, and go to state 94


state 65

   18 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER $@5 . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 95


state 66

   46 factor: PAR_ABIERTO expresion . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 96


state 67

   30 operador_logico: AND .

    $default  reduce using rule 30 (operador_logico)


state 68

   31 operador_logico: OR .

    $default  reduce using rule 31 (operador_logico)


state 69

   35 operador_logico: IGUAL_IGUAL .

    $default  reduce using rule 35 (operador_logico)


state 70

   33 operador_logico: MENOR_QUE .

    $default  reduce using rule 33 (operador_logico)


state 71

   32 operador_logico: MAYOR_QUE .

    $default  reduce using rule 32 (operador_logico)


state 72

   34 operador_logico: DIFERENTE .

    $default  reduce using rule 34 (operador_logico)


state 73

   22 expresion: exp operador_logico . exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exp                  go to state 97
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 74

   38 exp: termino MAS . termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    termino              go to state 98
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 75

   39 exp: termino MENOS . termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    termino              go to state 99
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 76

   41 termino: exponencial POR . exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exponencial          go to state 100
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 77

   42 termino: exponencial DIVISION . exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exponencial          go to state 101
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 78

   44 exponencial: factor EXPONENCIAL .

    $default  reduce using rule 44 (exponencial)


state 79

   24 math_choices: ABS .

    $default  reduce using rule 24 (math_choices)


state 80

   25 math_choices: COS .

    $default  reduce using rule 25 (math_choices)


state 81

   26 math_choices: SIN .

    $default  reduce using rule 26 (math_choices)


state 82

   27 math_choices: LOG .

    $default  reduce using rule 27 (math_choices)


state 83

   28 math_choices: TAN .

    $default  reduce using rule 28 (math_choices)


state 84

   29 math_choices: SQRT .

    $default  reduce using rule 29 (math_choices)


state 85

   55 factor_alterno_choices: ID . CORCHETE_ABIERTO exp CORCHETE_CERRADO
   56                       | ID .  [TO, STEP, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, POR, MAS, MENOS, DIVISION, EXPONENCIAL, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   86 llamado: ID . PAR_ABIERTO exp PAR_CERRADO

    PAR_ABIERTO       shift, and go to state 102
    CORCHETE_ABIERTO  shift, and go to state 103

    PAR_ABIERTO  [reduce using rule 56 (factor_alterno_choices)]
    $default     reduce using rule 56 (factor_alterno_choices)


state 86

   52 factor_alterno_choices: CTE_INTEGER .

    $default  reduce using rule 52 (factor_alterno_choices)


state 87

   54 factor_alterno_choices: funcion_matematica .

    $default  reduce using rule 54 (factor_alterno_choices)


state 88

   23 funcion_matematica: math_choices . PAR_ABIERTO exp PAR_CERRADO

    PAR_ABIERTO  shift, and go to state 104


state 89

   48 factor_alterno: operadores_binarios factor_alterno_choices .

    $default  reduce using rule 48 (factor_alterno)


state 90

   53 factor_alterno_choices: llamado .

    $default  reduce using rule 53 (factor_alterno_choices)


state 91

    9 declaracion: . APUNTADOR ID
   10            | . ID
   77 parametros_def: tipo $@11 . declaracion $@12 parametros_extra

    APUNTADOR  shift, and go to state 11
    ID         shift, and go to state 12

    declaracion  go to state 105


state 92

   67 metodo_main: METHOD VOID MAIN $@6 PAR_ABIERTO parametros PAR_CERRADO . DOS_PUNTOS metodo_body $@7 END METHOD

    DOS_PUNTOS  shift, and go to state 106


state 93

   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros . PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD

    PAR_CERRADO  shift, and go to state 107


state 94

   19 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 108


state 95

   18 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER $@5 CORCHETE_CERRADO .

    $default  reduce using rule 18 (asignacion_var)


state 96

   46 factor: PAR_ABIERTO expresion PAR_CERRADO .

    $default  reduce using rule 46 (factor)


state 97

   22 expresion: exp operador_logico exp .

    $default  reduce using rule 22 (expresion)


state 98

   38 exp: termino MAS termino .

    $default  reduce using rule 38 (exp)


state 99

   39 exp: termino MENOS termino .

    $default  reduce using rule 39 (exp)


state 100

   41 termino: exponencial POR exponencial .

    $default  reduce using rule 41 (termino)


state 101

   42 termino: exponencial DIVISION exponencial .

    $default  reduce using rule 42 (termino)


state 102

   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   86 llamado: ID PAR_ABIERTO . exp PAR_CERRADO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exp                  go to state 109
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 103

   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   55 factor_alterno_choices: ID CORCHETE_ABIERTO . exp CORCHETE_CERRADO
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exp                  go to state 110
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 104

   23 funcion_matematica: math_choices PAR_ABIERTO . exp PAR_CERRADO
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exp                  go to state 111
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 105

   76 $@12: .
   77 parametros_def: tipo $@11 declaracion . $@12 parametros_extra

    $default  reduce using rule 76 ($@12)

    $@12  go to state 112


state 106

   67 metodo_main: METHOD VOID MAIN $@6 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS . metodo_body $@7 END METHOD
   72 metodo_body: . metodo_body body_code
   73            | .

    $default  reduce using rule 73 (metodo_body)

    metodo_body  go to state 113


state 107

   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO . DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD

    DOS_PUNTOS  shift, and go to state 114


state 108

   19 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO .

    $default  reduce using rule 19 (asignacion_var)


state 109

   86 llamado: ID PAR_ABIERTO exp . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 115


state 110

   55 factor_alterno_choices: ID CORCHETE_ABIERTO exp . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 116


state 111

   23 funcion_matematica: math_choices PAR_ABIERTO exp . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 117


state 112

   77 parametros_def: tipo $@11 declaracion $@12 . parametros_extra
   79 parametros_extra: . COMA parametros_def
   80                 | .  [PAR_CERRADO]

    COMA  shift, and go to state 118

    $default  reduce using rule 80 (parametros_extra)

    parametros_extra  go to state 119


state 113

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   66 $@7: .  [END]
   67 metodo_main: METHOD VOID MAIN $@6 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body . $@7 END METHOD
   72 metodo_body: metodo_body . body_code
   81 body_code: . vars_def
   82          | . asignacion
   83          | . estatuto
   84          | . llamado PUNTO
   85          | . default_functions
   86 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   87 asignacion: . ID IGUAL expresion PUNTO
   88           | . array_assignment
   89 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   91 estatuto: . if_statement
   92         | . for_statement
   93         | . while_statement
   94         | . select_statement
   95 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   96 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   99 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  100 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  104 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  105                  | . read
  106 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  114 default_choices: . PRINT
  115                | . PRINTLINE

    PRINT      shift, and go to state 120
    PRINTLINE  shift, and go to state 121
    READ       shift, and go to state 122
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 123
    WHILE      shift, and go to state 124
    IF         shift, and go to state 125
    SELECT     shift, and go to state 126
    ID         shift, and go to state 127

    $default  reduce using rule 66 ($@7)

    vars_def           go to state 128
    $@7                go to state 129
    body_code          go to state 130
    llamado            go to state 131
    asignacion         go to state 132
    array_assignment   go to state 133
    estatuto           go to state 134
    if_statement       go to state 135
    for_statement      go to state 136
    while_statement    go to state 137
    select_statement   go to state 138
    default_functions  go to state 139
    read               go to state 140
    default_choices    go to state 141


state 114

   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS . metodo_body $@10 RETURN expresion PUNTO END METHOD
   72 metodo_body: . metodo_body body_code
   73            | .

    $default  reduce using rule 73 (metodo_body)

    metodo_body  go to state 142


state 115

   86 llamado: ID PAR_ABIERTO exp PAR_CERRADO .

    $default  reduce using rule 86 (llamado)


state 116

   55 factor_alterno_choices: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO .

    $default  reduce using rule 55 (factor_alterno_choices)


state 117

   23 funcion_matematica: math_choices PAR_ABIERTO exp PAR_CERRADO .

    $default  reduce using rule 23 (funcion_matematica)


state 118

   11 tipo: . INTEGER
   12     | . STRING
   13     | . BOOLEAN
   14     | . DECIMAL
   15     | . VOID
   77 parametros_def: . tipo $@11 declaracion $@12 parametros_extra
   78               | .  [PAR_CERRADO]
   79 parametros_extra: COMA . parametros_def

    INTEGER  shift, and go to state 21
    DECIMAL  shift, and go to state 22
    STRING   shift, and go to state 23
    BOOLEAN  shift, and go to state 24
    VOID     shift, and go to state 28

    $default  reduce using rule 78 (parametros_def)

    tipo            go to state 60
    parametros_def  go to state 143


state 119

   77 parametros_def: tipo $@11 declaracion $@12 parametros_extra .

    $default  reduce using rule 77 (parametros_def)


state 120

  114 default_choices: PRINT .

    $default  reduce using rule 114 (default_choices)


state 121

  115 default_choices: PRINTLINE .

    $default  reduce using rule 115 (default_choices)


state 122

  106 read: READ . PAR_ABIERTO ID ids PAR_CERRADO PUNTO

    PAR_ABIERTO  shift, and go to state 144


state 123

   96 for_statement: FOR . ID IGUAL exp TO exp for_step END FOR

    ID  shift, and go to state 145


state 124

   99 while_statement: WHILE . PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    PAR_ABIERTO  shift, and go to state 146


state 125

   95 if_statement: IF . PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    PAR_ABIERTO  shift, and go to state 147


state 126

  100 select_statement: SELECT . ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    ID  shift, and go to state 148


state 127

   86 llamado: ID . PAR_ABIERTO exp PAR_CERRADO
   87 asignacion: ID . IGUAL expresion PUNTO
   89 array_assignment: ID . CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | ID . CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    PAR_ABIERTO       shift, and go to state 102
    CORCHETE_ABIERTO  shift, and go to state 149
    IGUAL             shift, and go to state 150


state 128

   81 body_code: vars_def .

    $default  reduce using rule 81 (body_code)


state 129

   67 metodo_main: METHOD VOID MAIN $@6 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@7 . END METHOD

    END  shift, and go to state 151


state 130

   72 metodo_body: metodo_body body_code .

    $default  reduce using rule 72 (metodo_body)


state 131

   84 body_code: llamado . PUNTO

    PUNTO  shift, and go to state 152


state 132

   82 body_code: asignacion .

    $default  reduce using rule 82 (body_code)


state 133

   88 asignacion: array_assignment .

    $default  reduce using rule 88 (asignacion)


state 134

   83 body_code: estatuto .

    $default  reduce using rule 83 (body_code)


state 135

   91 estatuto: if_statement .

    $default  reduce using rule 91 (estatuto)


state 136

   92 estatuto: for_statement .

    $default  reduce using rule 92 (estatuto)


state 137

   93 estatuto: while_statement .

    $default  reduce using rule 93 (estatuto)


state 138

   94 estatuto: select_statement .

    $default  reduce using rule 94 (estatuto)


state 139

   85 body_code: default_functions .

    $default  reduce using rule 85 (body_code)


state 140

  105 default_functions: read .

    $default  reduce using rule 105 (default_functions)


state 141

  104 default_functions: default_choices . PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO

    PAR_ABIERTO  shift, and go to state 153


state 142

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   70 $@10: .  [RETURN]
   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body . $@10 RETURN expresion PUNTO END METHOD
   72 metodo_body: metodo_body . body_code
   81 body_code: . vars_def
   82          | . asignacion
   83          | . estatuto
   84          | . llamado PUNTO
   85          | . default_functions
   86 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   87 asignacion: . ID IGUAL expresion PUNTO
   88           | . array_assignment
   89 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   91 estatuto: . if_statement
   92         | . for_statement
   93         | . while_statement
   94         | . select_statement
   95 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   96 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   99 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  100 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  104 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  105                  | . read
  106 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  114 default_choices: . PRINT
  115                | . PRINTLINE

    PRINT      shift, and go to state 120
    PRINTLINE  shift, and go to state 121
    READ       shift, and go to state 122
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 123
    WHILE      shift, and go to state 124
    IF         shift, and go to state 125
    SELECT     shift, and go to state 126
    ID         shift, and go to state 127

    $default  reduce using rule 70 ($@10)

    vars_def           go to state 128
    $@10               go to state 154
    body_code          go to state 130
    llamado            go to state 131
    asignacion         go to state 132
    array_assignment   go to state 133
    estatuto           go to state 134
    if_statement       go to state 135
    for_statement      go to state 136
    while_statement    go to state 137
    select_statement   go to state 138
    default_functions  go to state 139
    read               go to state 140
    default_choices    go to state 141


state 143

   79 parametros_extra: COMA parametros_def .

    $default  reduce using rule 79 (parametros_extra)


state 144

  106 read: READ PAR_ABIERTO . ID ids PAR_CERRADO PUNTO

    ID  shift, and go to state 155


state 145

   96 for_statement: FOR ID . IGUAL exp TO exp for_step END FOR

    IGUAL  shift, and go to state 156


state 146

   21 expresion: . exp
   22          | . exp operador_logico exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   99 while_statement: WHILE PAR_ABIERTO . expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    expresion            go to state 157
    exp                  go to state 52
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 147

   21 expresion: . exp
   22          | . exp operador_logico exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   95 if_statement: IF PAR_ABIERTO . expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    expresion            go to state 158
    exp                  go to state 52
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 148

  100 select_statement: SELECT ID . DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DOS_PUNTOS  shift, and go to state 159


state 149

   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   89 array_assignment: ID CORCHETE_ABIERTO . exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | ID CORCHETE_ABIERTO . exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exp                  go to state 160
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 150

   21 expresion: . exp
   22          | . exp operador_logico exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   87 asignacion: ID IGUAL . expresion PUNTO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    expresion            go to state 161
    exp                  go to state 52
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 151

   67 metodo_main: METHOD VOID MAIN $@6 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@7 END . METHOD

    METHOD  shift, and go to state 162


state 152

   84 body_code: llamado PUNTO .

    $default  reduce using rule 84 (body_code)


state 153

   21 expresion: . exp
   22          | . exp operador_logico exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
  104 default_functions: default_choices PAR_ABIERTO . default_function_input_def default_function_input PAR_CERRADO PUNTO
  112 default_function_input_def: . expresion
  113                           | . COMILLAS CTE_STRING COMILLAS

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    COMILLAS     shift, and go to state 163
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    expresion                   go to state 164
    exp                         go to state 52
    termino                     go to state 53
    exponencial                 go to state 54
    factor                      go to state 55
    factor_alterno              go to state 56
    operadores_binarios         go to state 57
    var                         go to state 58
    default_function_input_def  go to state 165


state 154

   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 . RETURN expresion PUNTO END METHOD

    RETURN  shift, and go to state 166


state 155

  106 read: READ PAR_ABIERTO ID . ids PAR_CERRADO PUNTO
  107 ids: . ids_def ids
  108    | .  [PAR_CERRADO]
  109 ids_def: . COMA ID

    COMA  shift, and go to state 167

    $default  reduce using rule 108 (ids)

    ids      go to state 168
    ids_def  go to state 169


state 156

   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   96 for_statement: FOR ID IGUAL . exp TO exp for_step END FOR

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exp                  go to state 170
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 157

   99 while_statement: WHILE PAR_ABIERTO expresion . PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    PAR_CERRADO  shift, and go to state 171


state 158

   95 if_statement: IF PAR_ABIERTO expresion . PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    PAR_CERRADO  shift, and go to state 172


state 159

  100 select_statement: SELECT ID DOS_PUNTOS . CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    CASE  shift, and go to state 173


state 160

   89 array_assignment: ID CORCHETE_ABIERTO exp . CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | ID CORCHETE_ABIERTO exp . COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    COMA              shift, and go to state 174
    CORCHETE_CERRADO  shift, and go to state 175


state 161

   87 asignacion: ID IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 176


state 162

   67 metodo_main: METHOD VOID MAIN $@6 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@7 END METHOD .

    $default  reduce using rule 67 (metodo_main)


state 163

  113 default_function_input_def: COMILLAS . CTE_STRING COMILLAS

    CTE_STRING  shift, and go to state 177


state 164

  112 default_function_input_def: expresion .

    $default  reduce using rule 112 (default_function_input_def)


state 165

  104 default_functions: default_choices PAR_ABIERTO default_function_input_def . default_function_input PAR_CERRADO PUNTO
  110 default_function_input: . MAS default_function_input_def default_function_input
  111                       | .  [PAR_CERRADO]

    MAS  shift, and go to state 178

    $default  reduce using rule 111 (default_function_input)

    default_function_input  go to state 179


state 166

   21 expresion: . exp
   22          | . exp operador_logico exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN . expresion PUNTO END METHOD

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    expresion            go to state 180
    exp                  go to state 52
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 167

  109 ids_def: COMA . ID

    ID  shift, and go to state 181


state 168

  106 read: READ PAR_ABIERTO ID ids . PAR_CERRADO PUNTO

    PAR_CERRADO  shift, and go to state 182


state 169

  107 ids: . ids_def ids
  107    | ids_def . ids
  108    | .  [PAR_CERRADO]
  109 ids_def: . COMA ID

    COMA  shift, and go to state 167

    $default  reduce using rule 108 (ids)

    ids      go to state 183
    ids_def  go to state 169


state 170

   96 for_statement: FOR ID IGUAL exp . TO exp for_step END FOR

    TO  shift, and go to state 184


state 171

   99 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO . DOS_PUNTOS metodo_body END WHILE

    DOS_PUNTOS  shift, and go to state 185


state 172

   95 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO . DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    DOS_PUNTOS  shift, and go to state 186


state 173

  100 select_statement: SELECT ID DOS_PUNTOS CASE . DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DEFAULT  shift, and go to state 187


state 174

   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   90 array_assignment: ID CORCHETE_ABIERTO exp COMA . exp CORCHETE_CERRADO IGUAL expresion PUNTO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exp                  go to state 188
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 175

   89 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 189


state 176

   87 asignacion: ID IGUAL expresion PUNTO .

    $default  reduce using rule 87 (asignacion)


state 177

  113 default_function_input_def: COMILLAS CTE_STRING . COMILLAS

    COMILLAS  shift, and go to state 190


state 178

   21 expresion: . exp
   22          | . exp operador_logico exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
  110 default_function_input: MAS . default_function_input_def default_function_input
  112 default_function_input_def: . expresion
  113                           | . COMILLAS CTE_STRING COMILLAS

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    COMILLAS     shift, and go to state 163
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    expresion                   go to state 164
    exp                         go to state 52
    termino                     go to state 53
    exponencial                 go to state 54
    factor                      go to state 55
    factor_alterno              go to state 56
    operadores_binarios         go to state 57
    var                         go to state 58
    default_function_input_def  go to state 191


state 179

  104 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input . PAR_CERRADO PUNTO

    PAR_CERRADO  shift, and go to state 192


state 180

   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion . PUNTO END METHOD

    PUNTO  shift, and go to state 193


state 181

  109 ids_def: COMA ID .

    $default  reduce using rule 109 (ids_def)


state 182

  106 read: READ PAR_ABIERTO ID ids PAR_CERRADO . PUNTO

    PUNTO  shift, and go to state 194


state 183

  107 ids: ids_def ids .

    $default  reduce using rule 107 (ids)


state 184

   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   96 for_statement: FOR ID IGUAL exp TO . exp for_step END FOR

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exp                  go to state 195
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 185

   72 metodo_body: . metodo_body body_code
   73            | .
   99 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS . metodo_body END WHILE

    $default  reduce using rule 73 (metodo_body)

    metodo_body  go to state 196


state 186

   72 metodo_body: . metodo_body body_code
   73            | .
   95 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS . metodo_body ELSE DOS_PUNTOS metodo_body END IF

    $default  reduce using rule 73 (metodo_body)

    metodo_body  go to state 197


state 187

  100 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT . DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DOS_PUNTOS  shift, and go to state 198


state 188

   90 array_assignment: ID CORCHETE_ABIERTO exp COMA exp . CORCHETE_CERRADO IGUAL expresion PUNTO

    CORCHETE_CERRADO  shift, and go to state 199


state 189

   21 expresion: . exp
   22          | . exp operador_logico exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   89 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL . expresion PUNTO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    expresion            go to state 200
    exp                  go to state 52
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 190

  113 default_function_input_def: COMILLAS CTE_STRING COMILLAS .

    $default  reduce using rule 113 (default_function_input_def)


state 191

  110 default_function_input: . MAS default_function_input_def default_function_input
  110                       | MAS default_function_input_def . default_function_input
  111                       | .  [PAR_CERRADO]

    MAS  shift, and go to state 178

    $default  reduce using rule 111 (default_function_input)

    default_function_input  go to state 201


state 192

  104 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO . PUNTO

    PUNTO  shift, and go to state 202


state 193

   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO . END METHOD

    END  shift, and go to state 203


state 194

  106 read: READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO .

    $default  reduce using rule 106 (read)


state 195

   96 for_statement: FOR ID IGUAL exp TO exp . for_step END FOR
   97 for_step: . DOS_PUNTOS metodo_body
   98         | . STEP exp DOS_PUNTOS metodo_body

    STEP        shift, and go to state 204
    DOS_PUNTOS  shift, and go to state 205

    for_step  go to state 206


state 196

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   72 metodo_body: metodo_body . body_code
   81 body_code: . vars_def
   82          | . asignacion
   83          | . estatuto
   84          | . llamado PUNTO
   85          | . default_functions
   86 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   87 asignacion: . ID IGUAL expresion PUNTO
   88           | . array_assignment
   89 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   91 estatuto: . if_statement
   92         | . for_statement
   93         | . while_statement
   94         | . select_statement
   95 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   96 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   99 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   99                | WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body . END WHILE
  100 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  104 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  105                  | . read
  106 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  114 default_choices: . PRINT
  115                | . PRINTLINE

    PRINT      shift, and go to state 120
    PRINTLINE  shift, and go to state 121
    READ       shift, and go to state 122
    DEFINE     shift, and go to state 8
    END        shift, and go to state 207
    FOR        shift, and go to state 123
    WHILE      shift, and go to state 124
    IF         shift, and go to state 125
    SELECT     shift, and go to state 126
    ID         shift, and go to state 127

    vars_def           go to state 128
    body_code          go to state 130
    llamado            go to state 131
    asignacion         go to state 132
    array_assignment   go to state 133
    estatuto           go to state 134
    if_statement       go to state 135
    for_statement      go to state 136
    while_statement    go to state 137
    select_statement   go to state 138
    default_functions  go to state 139
    read               go to state 140
    default_choices    go to state 141


state 197

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   72 metodo_body: metodo_body . body_code
   81 body_code: . vars_def
   82          | . asignacion
   83          | . estatuto
   84          | . llamado PUNTO
   85          | . default_functions
   86 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   87 asignacion: . ID IGUAL expresion PUNTO
   88           | . array_assignment
   89 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   91 estatuto: . if_statement
   92         | . for_statement
   93         | . while_statement
   94         | . select_statement
   95 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   95             | IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body . ELSE DOS_PUNTOS metodo_body END IF
   96 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   99 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  100 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  104 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  105                  | . read
  106 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  114 default_choices: . PRINT
  115                | . PRINTLINE

    PRINT      shift, and go to state 120
    PRINTLINE  shift, and go to state 121
    READ       shift, and go to state 122
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 123
    WHILE      shift, and go to state 124
    IF         shift, and go to state 125
    SELECT     shift, and go to state 126
    ELSE       shift, and go to state 208
    ID         shift, and go to state 127

    vars_def           go to state 128
    body_code          go to state 130
    llamado            go to state 131
    asignacion         go to state 132
    array_assignment   go to state 133
    estatuto           go to state 134
    if_statement       go to state 135
    for_statement      go to state 136
    while_statement    go to state 137
    select_statement   go to state 138
    default_functions  go to state 139
    read               go to state 140
    default_choices    go to state 141


state 198

   72 metodo_body: . metodo_body body_code
   73            | .
  100 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS . metodo_body END CASE case_statement END SELECT

    $default  reduce using rule 73 (metodo_body)

    metodo_body  go to state 209


state 199

   90 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 210


state 200

   89 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 211


state 201

  110 default_function_input: MAS default_function_input_def default_function_input .

    $default  reduce using rule 110 (default_function_input)


state 202

  104 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO .

    $default  reduce using rule 104 (default_functions)


state 203

   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END . METHOD

    METHOD  shift, and go to state 212


state 204

   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   98 for_step: STEP . exp DOS_PUNTOS metodo_body

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    exp                  go to state 213
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 205

   72 metodo_body: . metodo_body body_code
   73            | .
   97 for_step: DOS_PUNTOS . metodo_body

    $default  reduce using rule 73 (metodo_body)

    metodo_body  go to state 214


state 206

   96 for_statement: FOR ID IGUAL exp TO exp for_step . END FOR

    END  shift, and go to state 215


state 207

   99 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END . WHILE

    WHILE  shift, and go to state 216


state 208

   95 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE . DOS_PUNTOS metodo_body END IF

    DOS_PUNTOS  shift, and go to state 217


state 209

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   72 metodo_body: metodo_body . body_code
   81 body_code: . vars_def
   82          | . asignacion
   83          | . estatuto
   84          | . llamado PUNTO
   85          | . default_functions
   86 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   87 asignacion: . ID IGUAL expresion PUNTO
   88           | . array_assignment
   89 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   91 estatuto: . if_statement
   92         | . for_statement
   93         | . while_statement
   94         | . select_statement
   95 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   96 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   99 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  100 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  100                 | SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body . END CASE case_statement END SELECT
  104 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  105                  | . read
  106 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  114 default_choices: . PRINT
  115                | . PRINTLINE

    PRINT      shift, and go to state 120
    PRINTLINE  shift, and go to state 121
    READ       shift, and go to state 122
    DEFINE     shift, and go to state 8
    END        shift, and go to state 218
    FOR        shift, and go to state 123
    WHILE      shift, and go to state 124
    IF         shift, and go to state 125
    SELECT     shift, and go to state 126
    ID         shift, and go to state 127

    vars_def           go to state 128
    body_code          go to state 130
    llamado            go to state 131
    asignacion         go to state 132
    array_assignment   go to state 133
    estatuto           go to state 134
    if_statement       go to state 135
    for_statement      go to state 136
    while_statement    go to state 137
    select_statement   go to state 138
    default_functions  go to state 139
    read               go to state 140
    default_choices    go to state 141


state 210

   21 expresion: . exp
   22          | . exp operador_logico exp
   37 exp: . termino
   38    | . termino MAS termino
   39    | . termino MENOS termino
   40 termino: . exponencial
   41        | . exponencial POR exponencial
   42        | . exponencial DIVISION exponencial
   43 exponencial: . factor
   44            | . factor EXPONENCIAL
   45 factor: . var
   46       | . PAR_ABIERTO expresion PAR_CERRADO
   47       | . factor_alterno
   48 factor_alterno: . operadores_binarios factor_alterno_choices
   49 operadores_binarios: . MAS
   50                    | . MENOS
   51                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   57 var: . ID
   58    | . CTE_INTEGER
   59    | . CTE_STRING
   60    | . CTE_DECIMAL
   61    | . VERDADERO
   62    | . FALSO
   90 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL . expresion PUNTO

    FALSO        shift, and go to state 42
    VERDADERO    shift, and go to state 43
    PAR_ABIERTO  shift, and go to state 44
    MAS          shift, and go to state 45
    MENOS        shift, and go to state 46
    ID           shift, and go to state 47
    CTE_STRING   shift, and go to state 48
    CTE_DECIMAL  shift, and go to state 49
    CTE_INTEGER  shift, and go to state 50

    ID           [reduce using rule 51 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 51 (operadores_binarios)]
    $default     reduce using rule 51 (operadores_binarios)

    expresion            go to state 219
    exp                  go to state 52
    termino              go to state 53
    exponencial          go to state 54
    factor               go to state 55
    factor_alterno       go to state 56
    operadores_binarios  go to state 57
    var                  go to state 58


state 211

   89 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO .

    $default  reduce using rule 89 (array_assignment)


state 212

   71 metodo_def: METHOD tipo $@8 ID $@9 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body $@10 RETURN expresion PUNTO END METHOD .

    $default  reduce using rule 71 (metodo_def)


state 213

   98 for_step: STEP exp . DOS_PUNTOS metodo_body

    DOS_PUNTOS  shift, and go to state 220


state 214

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   72 metodo_body: metodo_body . body_code
   81 body_code: . vars_def
   82          | . asignacion
   83          | . estatuto
   84          | . llamado PUNTO
   85          | . default_functions
   86 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   87 asignacion: . ID IGUAL expresion PUNTO
   88           | . array_assignment
   89 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   91 estatuto: . if_statement
   92         | . for_statement
   93         | . while_statement
   94         | . select_statement
   95 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   96 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   97 for_step: DOS_PUNTOS metodo_body .  [END]
   99 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  100 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  104 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  105                  | . read
  106 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  114 default_choices: . PRINT
  115                | . PRINTLINE

    PRINT      shift, and go to state 120
    PRINTLINE  shift, and go to state 121
    READ       shift, and go to state 122
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 123
    WHILE      shift, and go to state 124
    IF         shift, and go to state 125
    SELECT     shift, and go to state 126
    ID         shift, and go to state 127

    $default  reduce using rule 97 (for_step)

    vars_def           go to state 128
    body_code          go to state 130
    llamado            go to state 131
    asignacion         go to state 132
    array_assignment   go to state 133
    estatuto           go to state 134
    if_statement       go to state 135
    for_statement      go to state 136
    while_statement    go to state 137
    select_statement   go to state 138
    default_functions  go to state 139
    read               go to state 140
    default_choices    go to state 141


state 215

   96 for_statement: FOR ID IGUAL exp TO exp for_step END . FOR

    FOR  shift, and go to state 221


state 216

   99 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE .

    $default  reduce using rule 99 (while_statement)


state 217

   72 metodo_body: . metodo_body body_code
   73            | .
   95 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS . metodo_body END IF

    $default  reduce using rule 73 (metodo_body)

    metodo_body  go to state 222


state 218

  100 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END . CASE case_statement END SELECT

    CASE  shift, and go to state 223


state 219

   90 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 224


state 220

   72 metodo_body: . metodo_body body_code
   73            | .
   98 for_step: STEP exp DOS_PUNTOS . metodo_body

    $default  reduce using rule 73 (metodo_body)

    metodo_body  go to state 225


state 221

   96 for_statement: FOR ID IGUAL exp TO exp for_step END FOR .

    $default  reduce using rule 96 (for_statement)


state 222

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   72 metodo_body: metodo_body . body_code
   81 body_code: . vars_def
   82          | . asignacion
   83          | . estatuto
   84          | . llamado PUNTO
   85          | . default_functions
   86 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   87 asignacion: . ID IGUAL expresion PUNTO
   88           | . array_assignment
   89 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   91 estatuto: . if_statement
   92         | . for_statement
   93         | . while_statement
   94         | . select_statement
   95 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   95             | IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body . END IF
   96 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   99 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  100 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  104 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  105                  | . read
  106 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  114 default_choices: . PRINT
  115                | . PRINTLINE

    PRINT      shift, and go to state 120
    PRINTLINE  shift, and go to state 121
    READ       shift, and go to state 122
    DEFINE     shift, and go to state 8
    END        shift, and go to state 226
    FOR        shift, and go to state 123
    WHILE      shift, and go to state 124
    IF         shift, and go to state 125
    SELECT     shift, and go to state 126
    ID         shift, and go to state 127

    vars_def           go to state 128
    body_code          go to state 130
    llamado            go to state 131
    asignacion         go to state 132
    array_assignment   go to state 133
    estatuto           go to state 134
    if_statement       go to state 135
    for_statement      go to state 136
    while_statement    go to state 137
    select_statement   go to state 138
    default_functions  go to state 139
    read               go to state 140
    default_choices    go to state 141


state 223

  100 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE . case_statement END SELECT
  101 case_statement: . case_statement_def case_statement
  102               | .  [END]
  103 case_statement_def: . CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CASE  shift, and go to state 227

    $default  reduce using rule 102 (case_statement)

    case_statement      go to state 228
    case_statement_def  go to state 229


state 224

   90 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO .

    $default  reduce using rule 90 (array_assignment)


state 225

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   72 metodo_body: metodo_body . body_code
   81 body_code: . vars_def
   82          | . asignacion
   83          | . estatuto
   84          | . llamado PUNTO
   85          | . default_functions
   86 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   87 asignacion: . ID IGUAL expresion PUNTO
   88           | . array_assignment
   89 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   91 estatuto: . if_statement
   92         | . for_statement
   93         | . while_statement
   94         | . select_statement
   95 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   96 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   98 for_step: STEP exp DOS_PUNTOS metodo_body .  [END]
   99 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  100 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  104 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  105                  | . read
  106 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  114 default_choices: . PRINT
  115                | . PRINTLINE

    PRINT      shift, and go to state 120
    PRINTLINE  shift, and go to state 121
    READ       shift, and go to state 122
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 123
    WHILE      shift, and go to state 124
    IF         shift, and go to state 125
    SELECT     shift, and go to state 126
    ID         shift, and go to state 127

    $default  reduce using rule 98 (for_step)

    vars_def           go to state 128
    body_code          go to state 130
    llamado            go to state 131
    asignacion         go to state 132
    array_assignment   go to state 133
    estatuto           go to state 134
    if_statement       go to state 135
    for_statement      go to state 136
    while_statement    go to state 137
    select_statement   go to state 138
    default_functions  go to state 139
    read               go to state 140
    default_choices    go to state 141


state 226

   95 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END . IF

    IF  shift, and go to state 230


state 227

  103 case_statement_def: CASE . CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CTE_INTEGER  shift, and go to state 231


state 228

  100 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement . END SELECT

    END  shift, and go to state 232


state 229

  101 case_statement: . case_statement_def case_statement
  101               | case_statement_def . case_statement
  102               | .  [END]
  103 case_statement_def: . CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CASE  shift, and go to state 227

    $default  reduce using rule 102 (case_statement)

    case_statement      go to state 233
    case_statement_def  go to state 229


state 230

   95 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF .

    $default  reduce using rule 95 (if_statement)


state 231

  103 case_statement_def: CASE CTE_INTEGER . DOS_PUNTOS metodo_body END CASE

    DOS_PUNTOS  shift, and go to state 234


state 232

  100 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END . SELECT

    SELECT  shift, and go to state 235


state 233

  101 case_statement: case_statement_def case_statement .

    $default  reduce using rule 101 (case_statement)


state 234

   72 metodo_body: . metodo_body body_code
   73            | .
  103 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS . metodo_body END CASE

    $default  reduce using rule 73 (metodo_body)

    metodo_body  go to state 236


state 235

  100 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT .

    $default  reduce using rule 100 (select_statement)


state 236

    8 vars_def: . DEFINE declaracion $@3 AS tipo $@4 asignacion_var PUNTO
   72 metodo_body: metodo_body . body_code
   81 body_code: . vars_def
   82          | . asignacion
   83          | . estatuto
   84          | . llamado PUNTO
   85          | . default_functions
   86 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   87 asignacion: . ID IGUAL expresion PUNTO
   88           | . array_assignment
   89 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   90                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   91 estatuto: . if_statement
   92         | . for_statement
   93         | . while_statement
   94         | . select_statement
   95 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   96 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   99 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
  100 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
  103 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body . END CASE
  104 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
  105                  | . read
  106 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  114 default_choices: . PRINT
  115                | . PRINTLINE

    PRINT      shift, and go to state 120
    PRINTLINE  shift, and go to state 121
    READ       shift, and go to state 122
    DEFINE     shift, and go to state 8
    END        shift, and go to state 237
    FOR        shift, and go to state 123
    WHILE      shift, and go to state 124
    IF         shift, and go to state 125
    SELECT     shift, and go to state 126
    ID         shift, and go to state 127

    vars_def           go to state 128
    body_code          go to state 130
    llamado            go to state 131
    asignacion         go to state 132
    array_assignment   go to state 133
    estatuto           go to state 134
    if_statement       go to state 135
    for_statement      go to state 136
    while_statement    go to state 137
    select_statement   go to state 138
    default_functions  go to state 139
    read               go to state 140
    default_choices    go to state 141


state 237

  103 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END . CASE

    CASE  shift, and go to state 238


state 238

  103 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE .

    $default  reduce using rule 103 (case_statement_def)
