State 32 conflicts: 2 shift/reduce
State 39 conflicts: 2 shift/reduce
State 47 conflicts: 1 reduce/reduce
State 48 conflicts: 2 shift/reduce
State 68 conflicts: 2 shift/reduce
State 69 conflicts: 2 shift/reduce
State 70 conflicts: 2 shift/reduce
State 71 conflicts: 2 shift/reduce
State 72 conflicts: 2 shift/reduce
State 80 conflicts: 1 shift/reduce
State 96 conflicts: 2 shift/reduce
State 97 conflicts: 2 shift/reduce
State 98 conflicts: 2 shift/reduce
State 139 conflicts: 2 shift/reduce
State 140 conflicts: 2 shift/reduce
State 142 conflicts: 2 shift/reduce
State 143 conflicts: 2 shift/reduce
State 145 conflicts: 2 shift/reduce
State 148 conflicts: 2 shift/reduce
State 157 conflicts: 2 shift/reduce
State 165 conflicts: 2 shift/reduce
State 169 conflicts: 2 shift/reduce
State 175 conflicts: 2 shift/reduce
State 180 conflicts: 2 shift/reduce
State 195 conflicts: 2 shift/reduce
State 201 conflicts: 2 shift/reduce


Grammar

    0 $accept: tlaloc $end

    1 @1: /* empty */

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars metodo metodo_main END PROGRAM

    3 vars: vars vars_def
    4     | /* empty */

    5 vars_def: DEFINE declaracion AS tipo asignacion_var PUNTO

    6 declaracion: APUNTADOR ID
    7            | ID

    8 tipo: INTEGER
    9     | STRING
   10     | BOOLEAN
   11     | DECIMAL
   12     | VOID

   13 asignacion_var: IGUAL expresion
   14               | CORCHETE_ABIERTO CTE_INTEGER CORCHETE_CERRADO
   15               | CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO
   16               | /* empty */

   17 expresion: exp
   18          | exp operador_logico exp

   19 funcion_matematica: math_choices PAR_ABIERTO exp PAR_CERRADO

   20 math_choices: ABS
   21             | COS
   22             | SIN
   23             | LOG
   24             | TAN
   25             | SQRT

   26 operador_logico: AND
   27                | OR
   28                | MAYOR_QUE
   29                | MENOR_QUE
   30                | DIFERENTE
   31                | IGUAL_IGUAL
   32                | /* empty */

   33 exp: termino
   34    | termino MAS termino
   35    | termino MENOS termino

   36 termino: exponencial
   37        | exponencial POR exponencial
   38        | exponencial DIVISION exponencial

   39 exponencial: factor
   40            | factor EXPONENCIAL

   41 factor: var
   42       | PAR_ABIERTO expresion PAR_CERRADO
   43       | factor_alterno

   44 factor_alterno: operadores_binarios factor_alterno_choices

   45 operadores_binarios: MAS
   46                    | MENOS
   47                    | /* empty */

   48 factor_alterno_choices: CTE_INTEGER
   49                       | llamado
   50                       | funcion_matematica
   51                       | ID CORCHETE_ABIERTO exp CORCHETE_CERRADO
   52                       | ID

   53 var: ID
   54    | CTE_INTEGER
   55    | CTE_STRING
   56    | CTE_DECIMAL
   57    | VERDADERO
   58    | FALSO

   59 metodo: metodo metodo_def
   60       | /* empty */

   61 metodo_main: METHOD VOID MAIN PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body END METHOD

   62 @2: /* empty */

   63 @3: /* empty */

   64 metodo_def: METHOD tipo @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END METHOD

   65 metodo_body: metodo_body body_code
   66            | /* empty */

   67 parametros: parametros_def

   68 parametros_def: tipo declaracion parametros_extra
   69               | /* empty */

   70 parametros_extra: COMA parametros
   71                 | /* empty */

   72 body_code: vars_def
   73          | asignacion
   74          | estatuto
   75          | llamado PUNTO
   76          | default_functions

   77 llamado: ID PAR_ABIERTO exp PAR_CERRADO

   78 asignacion: ID IGUAL expresion PUNTO
   79           | array_assignment

   80 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

   82 estatuto: if_statement
   83         | for_statement
   84         | while_statement
   85         | select_statement

   86 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

   87 for_statement: FOR ID IGUAL exp TO exp for_step END FOR

   88 for_step: DOS_PUNTOS metodo_body
   89         | STEP exp DOS_PUNTOS metodo_body

   90 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

   91 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

   92 case_statement: case_statement_def case_statement
   93               | /* empty */

   94 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

   95 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
   96                  | read

   97 read: READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO

   98 ids: ids_def ids
   99    | /* empty */

  100 ids_def: COMA ID

  101 default_function_input: MAS default_function_input_def default_function_input
  102                       | /* empty */

  103 default_function_input_def: expresion
  104                           | COMILLAS CTE_STRING COMILLAS

  105 default_choices: PRINT
  106                | PRINTLINE


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 2
METHOD (259) 61 64
PRINT (260) 105
PRINTLINE (261) 106
READ (262) 97
CASE (263) 91 94
DEFAULT (264) 91
DEFINE (265) 5
AS (266) 5
TO (267) 87
STEP (268) 89
INTEGER (269) 8
DECIMAL (270) 11
MAIN (271) 61
STRING (272) 9
BOOLEAN (273) 10
END (274) 2 61 64 86 87 90 91 94
FALSO (275) 58
VERDADERO (276) 57
VOID (277) 12 61
RETURN (278) 64
AND (279) 26
OR (280) 27
ABS (281) 20
COS (282) 21
SIN (283) 22
LOG (284) 23
TAN (285) 24
SQRT (286) 25
FOR (287) 87
WHILE (288) 90
IF (289) 86
SELECT (290) 91
ELSE (291) 86
PAR_ABIERTO (292) 19 42 61 64 77 86 90 95 97
PAR_CERRADO (293) 19 42 61 64 77 86 90 95 97
COMA (294) 15 70 81 100
DOS_PUNTOS (295) 2 61 64 86 88 89 90 91 94
CORCHETE_ABIERTO (296) 14 15 51 80 81
CORCHETE_CERRADO (297) 14 15 51 80 81
IGUAL (298) 13 78 80 81 87
IGUAL_IGUAL (299) 31
MENOR_QUE (300) 29
MAYOR_QUE (301) 28
DIFERENTE (302) 30
POR (303) 37
MAS (304) 34 45 101
MENOS (305) 35 46
DIVISION (306) 38
EXPONENCIAL (307) 40
PUNTO (308) 5 75 78 80 81 95 97
APUNTADOR (309) 6
COMILLAS (310) 104
ID (311) 2 6 7 51 52 53 64 77 78 80 81 87 91 97 100
CTE_STRING (312) 55 104
CTE_DECIMAL (313) 56
CTE_INTEGER (314) 14 15 48 54 94


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
tlaloc (61)
    on left: 2, on right: 0
@1 (62)
    on left: 1, on right: 2
vars (63)
    on left: 3 4, on right: 2 3
vars_def (64)
    on left: 5, on right: 3 72
declaracion (65)
    on left: 6 7, on right: 5 68
tipo (66)
    on left: 8 9 10 11 12, on right: 5 64 68
asignacion_var (67)
    on left: 13 14 15 16, on right: 5
expresion (68)
    on left: 17 18, on right: 13 42 64 78 80 81 86 90 103
funcion_matematica (69)
    on left: 19, on right: 50
math_choices (70)
    on left: 20 21 22 23 24 25, on right: 19
operador_logico (71)
    on left: 26 27 28 29 30 31 32, on right: 18
exp (72)
    on left: 33 34 35, on right: 17 18 19 51 77 80 81 87 89
termino (73)
    on left: 36 37 38, on right: 33 34 35
exponencial (74)
    on left: 39 40, on right: 36 37 38
factor (75)
    on left: 41 42 43, on right: 39 40
factor_alterno (76)
    on left: 44, on right: 43
operadores_binarios (77)
    on left: 45 46 47, on right: 44
factor_alterno_choices (78)
    on left: 48 49 50 51 52, on right: 44
var (79)
    on left: 53 54 55 56 57 58, on right: 41
metodo (80)
    on left: 59 60, on right: 2 59
metodo_main (81)
    on left: 61, on right: 2
metodo_def (82)
    on left: 64, on right: 59
@2 (83)
    on left: 62, on right: 64
@3 (84)
    on left: 63, on right: 64
metodo_body (85)
    on left: 65 66, on right: 61 64 65 86 88 89 90 91 94
parametros (86)
    on left: 67, on right: 61 64 70
parametros_def (87)
    on left: 68 69, on right: 67
parametros_extra (88)
    on left: 70 71, on right: 68
body_code (89)
    on left: 72 73 74 75 76, on right: 65
llamado (90)
    on left: 77, on right: 49 75
asignacion (91)
    on left: 78 79, on right: 73
array_assignment (92)
    on left: 80 81, on right: 79
estatuto (93)
    on left: 82 83 84 85, on right: 74
if_statement (94)
    on left: 86, on right: 82
for_statement (95)
    on left: 87, on right: 83
for_step (96)
    on left: 88 89, on right: 87
while_statement (97)
    on left: 90, on right: 84
select_statement (98)
    on left: 91, on right: 85
case_statement (99)
    on left: 92 93, on right: 91 92
case_statement_def (100)
    on left: 94, on right: 92
default_functions (101)
    on left: 95 96, on right: 76
read (102)
    on left: 97, on right: 96
ids (103)
    on left: 98 99, on right: 97 98
ids_def (104)
    on left: 100, on right: 98
default_function_input (105)
    on left: 101 102, on right: 95 101
default_function_input_def (106)
    on left: 103 104, on right: 95 101
default_choices (107)
    on left: 105 106, on right: 95


state 0

    0 $accept: . tlaloc $end
    2 tlaloc: . PROGRAM ID @1 DOS_PUNTOS vars metodo metodo_main END PROGRAM

    PROGRAM  shift, and go to state 1

    tlaloc  go to state 2


state 1

    2 tlaloc: PROGRAM . ID @1 DOS_PUNTOS vars metodo metodo_main END PROGRAM

    ID  shift, and go to state 3


state 2

    0 $accept: tlaloc . $end

    $end  shift, and go to state 4


state 3

    1 @1: .
    2 tlaloc: PROGRAM ID . @1 DOS_PUNTOS vars metodo metodo_main END PROGRAM

    $default  reduce using rule 1 (@1)

    @1  go to state 5


state 4

    0 $accept: tlaloc $end .

    $default  accept


state 5

    2 tlaloc: PROGRAM ID @1 . DOS_PUNTOS vars metodo metodo_main END PROGRAM

    DOS_PUNTOS  shift, and go to state 6


state 6

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS . vars metodo metodo_main END PROGRAM
    3 vars: . vars vars_def
    4     | .

    $default  reduce using rule 4 (vars)

    vars  go to state 7


state 7

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars . metodo metodo_main END PROGRAM
    3 vars: vars . vars_def
    5 vars_def: . DEFINE declaracion AS tipo asignacion_var PUNTO
   59 metodo: . metodo metodo_def
   60       | .  [METHOD]

    DEFINE  shift, and go to state 8

    $default  reduce using rule 60 (metodo)

    vars_def  go to state 9
    metodo    go to state 10


state 8

    5 vars_def: DEFINE . declaracion AS tipo asignacion_var PUNTO
    6 declaracion: . APUNTADOR ID
    7            | . ID

    APUNTADOR  shift, and go to state 11
    ID         shift, and go to state 12

    declaracion  go to state 13


state 9

    3 vars: vars vars_def .

    $default  reduce using rule 3 (vars)


state 10

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars metodo . metodo_main END PROGRAM
   59 metodo: metodo . metodo_def
   61 metodo_main: . METHOD VOID MAIN PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body END METHOD
   64 metodo_def: . METHOD tipo @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END METHOD

    METHOD  shift, and go to state 14

    metodo_main  go to state 15
    metodo_def   go to state 16


state 11

    6 declaracion: APUNTADOR . ID

    ID  shift, and go to state 17


state 12

    7 declaracion: ID .

    $default  reduce using rule 7 (declaracion)


state 13

    5 vars_def: DEFINE declaracion . AS tipo asignacion_var PUNTO

    AS  shift, and go to state 18


state 14

    8 tipo: . INTEGER
    9     | . STRING
   10     | . BOOLEAN
   11     | . DECIMAL
   12     | . VOID
   61 metodo_main: METHOD . VOID MAIN PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body END METHOD
   64 metodo_def: METHOD . tipo @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END METHOD

    INTEGER  shift, and go to state 19
    DECIMAL  shift, and go to state 20
    STRING   shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    VOID     shift, and go to state 23

    tipo  go to state 24


state 15

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars metodo metodo_main . END PROGRAM

    END  shift, and go to state 25


state 16

   59 metodo: metodo metodo_def .

    $default  reduce using rule 59 (metodo)


state 17

    6 declaracion: APUNTADOR ID .

    $default  reduce using rule 6 (declaracion)


state 18

    5 vars_def: DEFINE declaracion AS . tipo asignacion_var PUNTO
    8 tipo: . INTEGER
    9     | . STRING
   10     | . BOOLEAN
   11     | . DECIMAL
   12     | . VOID

    INTEGER  shift, and go to state 19
    DECIMAL  shift, and go to state 20
    STRING   shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    VOID     shift, and go to state 26

    tipo  go to state 27


state 19

    8 tipo: INTEGER .

    $default  reduce using rule 8 (tipo)


state 20

   11 tipo: DECIMAL .

    $default  reduce using rule 11 (tipo)


state 21

    9 tipo: STRING .

    $default  reduce using rule 9 (tipo)


state 22

   10 tipo: BOOLEAN .

    $default  reduce using rule 10 (tipo)


state 23

   12 tipo: VOID .  [ID]
   61 metodo_main: METHOD VOID . MAIN PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body END METHOD

    MAIN  shift, and go to state 28

    $default  reduce using rule 12 (tipo)


state 24

   62 @2: .
   64 metodo_def: METHOD tipo . @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END METHOD

    $default  reduce using rule 62 (@2)

    @2  go to state 29


state 25

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars metodo metodo_main END . PROGRAM

    PROGRAM  shift, and go to state 30


state 26

   12 tipo: VOID .

    $default  reduce using rule 12 (tipo)


state 27

    5 vars_def: DEFINE declaracion AS tipo . asignacion_var PUNTO
   13 asignacion_var: . IGUAL expresion
   14               | . CORCHETE_ABIERTO CTE_INTEGER CORCHETE_CERRADO
   15               | . CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO
   16               | .  [PUNTO]

    CORCHETE_ABIERTO  shift, and go to state 31
    IGUAL             shift, and go to state 32

    $default  reduce using rule 16 (asignacion_var)

    asignacion_var  go to state 33


state 28

   61 metodo_main: METHOD VOID MAIN . PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body END METHOD

    PAR_ABIERTO  shift, and go to state 34


state 29

   64 metodo_def: METHOD tipo @2 . ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END METHOD

    ID  shift, and go to state 35


state 30

    2 tlaloc: PROGRAM ID @1 DOS_PUNTOS vars metodo metodo_main END PROGRAM .

    $default  reduce using rule 2 (tlaloc)


state 31

   14 asignacion_var: CORCHETE_ABIERTO . CTE_INTEGER CORCHETE_CERRADO
   15               | CORCHETE_ABIERTO . CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO

    CTE_INTEGER  shift, and go to state 36


state 32

   13 asignacion_var: IGUAL . expresion
   17 expresion: . exp
   18          | . exp operador_logico exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    expresion            go to state 46
    exp                  go to state 47
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 33

    5 vars_def: DEFINE declaracion AS tipo asignacion_var . PUNTO

    PUNTO  shift, and go to state 54


state 34

    8 tipo: . INTEGER
    9     | . STRING
   10     | . BOOLEAN
   11     | . DECIMAL
   12     | . VOID
   61 metodo_main: METHOD VOID MAIN PAR_ABIERTO . parametros PAR_CERRADO DOS_PUNTOS metodo_body END METHOD
   67 parametros: . parametros_def
   68 parametros_def: . tipo declaracion parametros_extra
   69               | .  [PAR_CERRADO]

    INTEGER  shift, and go to state 19
    DECIMAL  shift, and go to state 20
    STRING   shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    VOID     shift, and go to state 26

    $default  reduce using rule 69 (parametros_def)

    tipo            go to state 55
    parametros      go to state 56
    parametros_def  go to state 57


state 35

   63 @3: .
   64 metodo_def: METHOD tipo @2 ID . @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END METHOD

    $default  reduce using rule 63 (@3)

    @3  go to state 58


state 36

   14 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER . CORCHETE_CERRADO
   15               | CORCHETE_ABIERTO CTE_INTEGER . COMA CTE_INTEGER CORCHETE_CERRADO

    COMA              shift, and go to state 59
    CORCHETE_CERRADO  shift, and go to state 60


state 37

   58 var: FALSO .

    $default  reduce using rule 58 (var)


state 38

   57 var: VERDADERO .

    $default  reduce using rule 57 (var)


state 39

   17 expresion: . exp
   18          | . exp operador_logico exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   42       | PAR_ABIERTO . expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    expresion            go to state 61
    exp                  go to state 47
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 40

   45 operadores_binarios: MAS .

    $default  reduce using rule 45 (operadores_binarios)


state 41

   46 operadores_binarios: MENOS .

    $default  reduce using rule 46 (operadores_binarios)


state 42

   53 var: ID .

    $default  reduce using rule 53 (var)


state 43

   55 var: CTE_STRING .

    $default  reduce using rule 55 (var)


state 44

   56 var: CTE_DECIMAL .

    $default  reduce using rule 56 (var)


state 45

   54 var: CTE_INTEGER .

    $default  reduce using rule 54 (var)


state 46

   13 asignacion_var: IGUAL expresion .

    $default  reduce using rule 13 (asignacion_var)


state 47

   17 expresion: exp .  [END, PAR_CERRADO, MAS, PUNTO]
   18          | exp . operador_logico exp
   26 operador_logico: . AND
   27                | . OR
   28                | . MAYOR_QUE
   29                | . MENOR_QUE
   30                | . DIFERENTE
   31                | . IGUAL_IGUAL
   32                | .  [FALSO, VERDADERO, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, MAS, MENOS, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]

    AND          shift, and go to state 62
    OR           shift, and go to state 63
    IGUAL_IGUAL  shift, and go to state 64
    MENOR_QUE    shift, and go to state 65
    MAYOR_QUE    shift, and go to state 66
    DIFERENTE    shift, and go to state 67

    END          reduce using rule 17 (expresion)
    PAR_CERRADO  reduce using rule 17 (expresion)
    MAS          reduce using rule 17 (expresion)
    MAS          [reduce using rule 32 (operador_logico)]
    PUNTO        reduce using rule 17 (expresion)
    $default     reduce using rule 32 (operador_logico)

    operador_logico  go to state 68


state 48

   33 exp: termino .  [TO, STEP, END, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, MAS, MENOS, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   34    | termino . MAS termino
   35    | termino . MENOS termino

    MAS    shift, and go to state 69
    MENOS  shift, and go to state 70

    MAS       [reduce using rule 33 (exp)]
    MENOS     [reduce using rule 33 (exp)]
    $default  reduce using rule 33 (exp)


state 49

   36 termino: exponencial .  [TO, STEP, END, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, MAS, MENOS, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   37        | exponencial . POR exponencial
   38        | exponencial . DIVISION exponencial

    POR       shift, and go to state 71
    DIVISION  shift, and go to state 72

    $default  reduce using rule 36 (termino)


state 50

   39 exponencial: factor .  [TO, STEP, END, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, POR, MAS, MENOS, DIVISION, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   40            | factor . EXPONENCIAL

    EXPONENCIAL  shift, and go to state 73

    $default  reduce using rule 39 (exponencial)


state 51

   43 factor: factor_alterno .

    $default  reduce using rule 43 (factor)


state 52

   19 funcion_matematica: . math_choices PAR_ABIERTO exp PAR_CERRADO
   20 math_choices: . ABS
   21             | . COS
   22             | . SIN
   23             | . LOG
   24             | . TAN
   25             | . SQRT
   44 factor_alterno: operadores_binarios . factor_alterno_choices
   48 factor_alterno_choices: . CTE_INTEGER
   49                       | . llamado
   50                       | . funcion_matematica
   51                       | . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO
   52                       | . ID
   77 llamado: . ID PAR_ABIERTO exp PAR_CERRADO

    ABS          shift, and go to state 74
    COS          shift, and go to state 75
    SIN          shift, and go to state 76
    LOG          shift, and go to state 77
    TAN          shift, and go to state 78
    SQRT         shift, and go to state 79
    ID           shift, and go to state 80
    CTE_INTEGER  shift, and go to state 81

    funcion_matematica      go to state 82
    math_choices            go to state 83
    factor_alterno_choices  go to state 84
    llamado                 go to state 85


state 53

   41 factor: var .

    $default  reduce using rule 41 (factor)


state 54

    5 vars_def: DEFINE declaracion AS tipo asignacion_var PUNTO .

    $default  reduce using rule 5 (vars_def)


state 55

    6 declaracion: . APUNTADOR ID
    7            | . ID
   68 parametros_def: tipo . declaracion parametros_extra

    APUNTADOR  shift, and go to state 11
    ID         shift, and go to state 12

    declaracion  go to state 86


state 56

   61 metodo_main: METHOD VOID MAIN PAR_ABIERTO parametros . PAR_CERRADO DOS_PUNTOS metodo_body END METHOD

    PAR_CERRADO  shift, and go to state 87


state 57

   67 parametros: parametros_def .

    $default  reduce using rule 67 (parametros)


state 58

   64 metodo_def: METHOD tipo @2 ID @3 . PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END METHOD

    PAR_ABIERTO  shift, and go to state 88


state 59

   15 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER COMA . CTE_INTEGER CORCHETE_CERRADO

    CTE_INTEGER  shift, and go to state 89


state 60

   14 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER CORCHETE_CERRADO .

    $default  reduce using rule 14 (asignacion_var)


state 61

   42 factor: PAR_ABIERTO expresion . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 90


state 62

   26 operador_logico: AND .

    $default  reduce using rule 26 (operador_logico)


state 63

   27 operador_logico: OR .

    $default  reduce using rule 27 (operador_logico)


state 64

   31 operador_logico: IGUAL_IGUAL .

    $default  reduce using rule 31 (operador_logico)


state 65

   29 operador_logico: MENOR_QUE .

    $default  reduce using rule 29 (operador_logico)


state 66

   28 operador_logico: MAYOR_QUE .

    $default  reduce using rule 28 (operador_logico)


state 67

   30 operador_logico: DIFERENTE .

    $default  reduce using rule 30 (operador_logico)


state 68

   18 expresion: exp operador_logico . exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exp                  go to state 91
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 69

   34 exp: termino MAS . termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    termino              go to state 92
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 70

   35 exp: termino MENOS . termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    termino              go to state 93
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 71

   37 termino: exponencial POR . exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exponencial          go to state 94
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 72

   38 termino: exponencial DIVISION . exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exponencial          go to state 95
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 73

   40 exponencial: factor EXPONENCIAL .

    $default  reduce using rule 40 (exponencial)


state 74

   20 math_choices: ABS .

    $default  reduce using rule 20 (math_choices)


state 75

   21 math_choices: COS .

    $default  reduce using rule 21 (math_choices)


state 76

   22 math_choices: SIN .

    $default  reduce using rule 22 (math_choices)


state 77

   23 math_choices: LOG .

    $default  reduce using rule 23 (math_choices)


state 78

   24 math_choices: TAN .

    $default  reduce using rule 24 (math_choices)


state 79

   25 math_choices: SQRT .

    $default  reduce using rule 25 (math_choices)


state 80

   51 factor_alterno_choices: ID . CORCHETE_ABIERTO exp CORCHETE_CERRADO
   52                       | ID .  [TO, STEP, END, FALSO, VERDADERO, AND, OR, ABS, COS, SIN, LOG, TAN, SQRT, PAR_ABIERTO, PAR_CERRADO, COMA, DOS_PUNTOS, CORCHETE_CERRADO, IGUAL_IGUAL, MENOR_QUE, MAYOR_QUE, DIFERENTE, POR, MAS, MENOS, DIVISION, EXPONENCIAL, PUNTO, ID, CTE_STRING, CTE_DECIMAL, CTE_INTEGER]
   77 llamado: ID . PAR_ABIERTO exp PAR_CERRADO

    PAR_ABIERTO       shift, and go to state 96
    CORCHETE_ABIERTO  shift, and go to state 97

    PAR_ABIERTO  [reduce using rule 52 (factor_alterno_choices)]
    $default     reduce using rule 52 (factor_alterno_choices)


state 81

   48 factor_alterno_choices: CTE_INTEGER .

    $default  reduce using rule 48 (factor_alterno_choices)


state 82

   50 factor_alterno_choices: funcion_matematica .

    $default  reduce using rule 50 (factor_alterno_choices)


state 83

   19 funcion_matematica: math_choices . PAR_ABIERTO exp PAR_CERRADO

    PAR_ABIERTO  shift, and go to state 98


state 84

   44 factor_alterno: operadores_binarios factor_alterno_choices .

    $default  reduce using rule 44 (factor_alterno)


state 85

   49 factor_alterno_choices: llamado .

    $default  reduce using rule 49 (factor_alterno_choices)


state 86

   68 parametros_def: tipo declaracion . parametros_extra
   70 parametros_extra: . COMA parametros
   71                 | .  [PAR_CERRADO]

    COMA  shift, and go to state 99

    $default  reduce using rule 71 (parametros_extra)

    parametros_extra  go to state 100


state 87

   61 metodo_main: METHOD VOID MAIN PAR_ABIERTO parametros PAR_CERRADO . DOS_PUNTOS metodo_body END METHOD

    DOS_PUNTOS  shift, and go to state 101


state 88

    8 tipo: . INTEGER
    9     | . STRING
   10     | . BOOLEAN
   11     | . DECIMAL
   12     | . VOID
   64 metodo_def: METHOD tipo @2 ID @3 PAR_ABIERTO . parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END METHOD
   67 parametros: . parametros_def
   68 parametros_def: . tipo declaracion parametros_extra
   69               | .  [PAR_CERRADO]

    INTEGER  shift, and go to state 19
    DECIMAL  shift, and go to state 20
    STRING   shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    VOID     shift, and go to state 26

    $default  reduce using rule 69 (parametros_def)

    tipo            go to state 55
    parametros      go to state 102
    parametros_def  go to state 57


state 89

   15 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 103


state 90

   42 factor: PAR_ABIERTO expresion PAR_CERRADO .

    $default  reduce using rule 42 (factor)


state 91

   18 expresion: exp operador_logico exp .

    $default  reduce using rule 18 (expresion)


state 92

   34 exp: termino MAS termino .

    $default  reduce using rule 34 (exp)


state 93

   35 exp: termino MENOS termino .

    $default  reduce using rule 35 (exp)


state 94

   37 termino: exponencial POR exponencial .

    $default  reduce using rule 37 (termino)


state 95

   38 termino: exponencial DIVISION exponencial .

    $default  reduce using rule 38 (termino)


state 96

   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   77 llamado: ID PAR_ABIERTO . exp PAR_CERRADO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exp                  go to state 104
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 97

   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   51 factor_alterno_choices: ID CORCHETE_ABIERTO . exp CORCHETE_CERRADO
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exp                  go to state 105
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 98

   19 funcion_matematica: math_choices PAR_ABIERTO . exp PAR_CERRADO
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exp                  go to state 106
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 99

    8 tipo: . INTEGER
    9     | . STRING
   10     | . BOOLEAN
   11     | . DECIMAL
   12     | . VOID
   67 parametros: . parametros_def
   68 parametros_def: . tipo declaracion parametros_extra
   69               | .  [PAR_CERRADO]
   70 parametros_extra: COMA . parametros

    INTEGER  shift, and go to state 19
    DECIMAL  shift, and go to state 20
    STRING   shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    VOID     shift, and go to state 26

    $default  reduce using rule 69 (parametros_def)

    tipo            go to state 55
    parametros      go to state 107
    parametros_def  go to state 57


state 100

   68 parametros_def: tipo declaracion parametros_extra .

    $default  reduce using rule 68 (parametros_def)


state 101

   61 metodo_main: METHOD VOID MAIN PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS . metodo_body END METHOD
   65 metodo_body: . metodo_body body_code
   66            | .

    $default  reduce using rule 66 (metodo_body)

    metodo_body  go to state 108


state 102

   64 metodo_def: METHOD tipo @2 ID @3 PAR_ABIERTO parametros . PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END METHOD

    PAR_CERRADO  shift, and go to state 109


state 103

   15 asignacion_var: CORCHETE_ABIERTO CTE_INTEGER COMA CTE_INTEGER CORCHETE_CERRADO .

    $default  reduce using rule 15 (asignacion_var)


state 104

   77 llamado: ID PAR_ABIERTO exp . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 110


state 105

   51 factor_alterno_choices: ID CORCHETE_ABIERTO exp . CORCHETE_CERRADO

    CORCHETE_CERRADO  shift, and go to state 111


state 106

   19 funcion_matematica: math_choices PAR_ABIERTO exp . PAR_CERRADO

    PAR_CERRADO  shift, and go to state 112


state 107

   70 parametros_extra: COMA parametros .

    $default  reduce using rule 70 (parametros_extra)


state 108

    5 vars_def: . DEFINE declaracion AS tipo asignacion_var PUNTO
   61 metodo_main: METHOD VOID MAIN PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body . END METHOD
   65 metodo_body: metodo_body . body_code
   72 body_code: . vars_def
   73          | . asignacion
   74          | . estatuto
   75          | . llamado PUNTO
   76          | . default_functions
   77 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   78 asignacion: . ID IGUAL expresion PUNTO
   79           | . array_assignment
   80 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   82 estatuto: . if_statement
   83         | . for_statement
   84         | . while_statement
   85         | . select_statement
   86 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   87 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   90 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   91 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   95 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
   96                  | . read
   97 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  105 default_choices: . PRINT
  106                | . PRINTLINE

    PRINT      shift, and go to state 113
    PRINTLINE  shift, and go to state 114
    READ       shift, and go to state 115
    DEFINE     shift, and go to state 8
    END        shift, and go to state 116
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 123
    llamado            go to state 124
    asignacion         go to state 125
    array_assignment   go to state 126
    estatuto           go to state 127
    if_statement       go to state 128
    for_statement      go to state 129
    while_statement    go to state 130
    select_statement   go to state 131
    default_functions  go to state 132
    read               go to state 133
    default_choices    go to state 134


state 109

   64 metodo_def: METHOD tipo @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO . DOS_PUNTOS metodo_body RETURN expresion END METHOD

    DOS_PUNTOS  shift, and go to state 135


state 110

   77 llamado: ID PAR_ABIERTO exp PAR_CERRADO .

    $default  reduce using rule 77 (llamado)


state 111

   51 factor_alterno_choices: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO .

    $default  reduce using rule 51 (factor_alterno_choices)


state 112

   19 funcion_matematica: math_choices PAR_ABIERTO exp PAR_CERRADO .

    $default  reduce using rule 19 (funcion_matematica)


state 113

  105 default_choices: PRINT .

    $default  reduce using rule 105 (default_choices)


state 114

  106 default_choices: PRINTLINE .

    $default  reduce using rule 106 (default_choices)


state 115

   97 read: READ . PAR_ABIERTO ID ids PAR_CERRADO PUNTO

    PAR_ABIERTO  shift, and go to state 136


state 116

   61 metodo_main: METHOD VOID MAIN PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body END . METHOD

    METHOD  shift, and go to state 137


state 117

   87 for_statement: FOR . ID IGUAL exp TO exp for_step END FOR

    ID  shift, and go to state 138


state 118

   90 while_statement: WHILE . PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    PAR_ABIERTO  shift, and go to state 139


state 119

   86 if_statement: IF . PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    PAR_ABIERTO  shift, and go to state 140


state 120

   91 select_statement: SELECT . ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    ID  shift, and go to state 141


state 121

   77 llamado: ID . PAR_ABIERTO exp PAR_CERRADO
   78 asignacion: ID . IGUAL expresion PUNTO
   80 array_assignment: ID . CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | ID . CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    PAR_ABIERTO       shift, and go to state 96
    CORCHETE_ABIERTO  shift, and go to state 142
    IGUAL             shift, and go to state 143


state 122

   72 body_code: vars_def .

    $default  reduce using rule 72 (body_code)


state 123

   65 metodo_body: metodo_body body_code .

    $default  reduce using rule 65 (metodo_body)


state 124

   75 body_code: llamado . PUNTO

    PUNTO  shift, and go to state 144


state 125

   73 body_code: asignacion .

    $default  reduce using rule 73 (body_code)


state 126

   79 asignacion: array_assignment .

    $default  reduce using rule 79 (asignacion)


state 127

   74 body_code: estatuto .

    $default  reduce using rule 74 (body_code)


state 128

   82 estatuto: if_statement .

    $default  reduce using rule 82 (estatuto)


state 129

   83 estatuto: for_statement .

    $default  reduce using rule 83 (estatuto)


state 130

   84 estatuto: while_statement .

    $default  reduce using rule 84 (estatuto)


state 131

   85 estatuto: select_statement .

    $default  reduce using rule 85 (estatuto)


state 132

   76 body_code: default_functions .

    $default  reduce using rule 76 (body_code)


state 133

   96 default_functions: read .

    $default  reduce using rule 96 (default_functions)


state 134

   95 default_functions: default_choices . PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO

    PAR_ABIERTO  shift, and go to state 145


state 135

   64 metodo_def: METHOD tipo @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS . metodo_body RETURN expresion END METHOD
   65 metodo_body: . metodo_body body_code
   66            | .

    $default  reduce using rule 66 (metodo_body)

    metodo_body  go to state 146


state 136

   97 read: READ PAR_ABIERTO . ID ids PAR_CERRADO PUNTO

    ID  shift, and go to state 147


state 137

   61 metodo_main: METHOD VOID MAIN PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body END METHOD .

    $default  reduce using rule 61 (metodo_main)


state 138

   87 for_statement: FOR ID . IGUAL exp TO exp for_step END FOR

    IGUAL  shift, and go to state 148


state 139

   17 expresion: . exp
   18          | . exp operador_logico exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   90 while_statement: WHILE PAR_ABIERTO . expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    expresion            go to state 149
    exp                  go to state 47
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 140

   17 expresion: . exp
   18          | . exp operador_logico exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   86 if_statement: IF PAR_ABIERTO . expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    expresion            go to state 150
    exp                  go to state 47
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 141

   91 select_statement: SELECT ID . DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DOS_PUNTOS  shift, and go to state 151


state 142

   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   80 array_assignment: ID CORCHETE_ABIERTO . exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | ID CORCHETE_ABIERTO . exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exp                  go to state 152
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 143

   17 expresion: . exp
   18          | . exp operador_logico exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   78 asignacion: ID IGUAL . expresion PUNTO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    expresion            go to state 153
    exp                  go to state 47
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 144

   75 body_code: llamado PUNTO .

    $default  reduce using rule 75 (body_code)


state 145

   17 expresion: . exp
   18          | . exp operador_logico exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   95 default_functions: default_choices PAR_ABIERTO . default_function_input_def default_function_input PAR_CERRADO PUNTO
  103 default_function_input_def: . expresion
  104                           | . COMILLAS CTE_STRING COMILLAS

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    COMILLAS     shift, and go to state 154
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    expresion                   go to state 155
    exp                         go to state 47
    termino                     go to state 48
    exponencial                 go to state 49
    factor                      go to state 50
    factor_alterno              go to state 51
    operadores_binarios         go to state 52
    var                         go to state 53
    default_function_input_def  go to state 156


state 146

    5 vars_def: . DEFINE declaracion AS tipo asignacion_var PUNTO
   64 metodo_def: METHOD tipo @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body . RETURN expresion END METHOD
   65 metodo_body: metodo_body . body_code
   72 body_code: . vars_def
   73          | . asignacion
   74          | . estatuto
   75          | . llamado PUNTO
   76          | . default_functions
   77 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   78 asignacion: . ID IGUAL expresion PUNTO
   79           | . array_assignment
   80 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   82 estatuto: . if_statement
   83         | . for_statement
   84         | . while_statement
   85         | . select_statement
   86 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   87 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   90 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   91 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   95 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
   96                  | . read
   97 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  105 default_choices: . PRINT
  106                | . PRINTLINE

    PRINT      shift, and go to state 113
    PRINTLINE  shift, and go to state 114
    READ       shift, and go to state 115
    DEFINE     shift, and go to state 8
    RETURN     shift, and go to state 157
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 123
    llamado            go to state 124
    asignacion         go to state 125
    array_assignment   go to state 126
    estatuto           go to state 127
    if_statement       go to state 128
    for_statement      go to state 129
    while_statement    go to state 130
    select_statement   go to state 131
    default_functions  go to state 132
    read               go to state 133
    default_choices    go to state 134


state 147

   97 read: READ PAR_ABIERTO ID . ids PAR_CERRADO PUNTO
   98 ids: . ids_def ids
   99    | .  [PAR_CERRADO]
  100 ids_def: . COMA ID

    COMA  shift, and go to state 158

    $default  reduce using rule 99 (ids)

    ids      go to state 159
    ids_def  go to state 160


state 148

   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   87 for_statement: FOR ID IGUAL . exp TO exp for_step END FOR

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exp                  go to state 161
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 149

   90 while_statement: WHILE PAR_ABIERTO expresion . PAR_CERRADO DOS_PUNTOS metodo_body END WHILE

    PAR_CERRADO  shift, and go to state 162


state 150

   86 if_statement: IF PAR_ABIERTO expresion . PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    PAR_CERRADO  shift, and go to state 163


state 151

   91 select_statement: SELECT ID DOS_PUNTOS . CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    CASE  shift, and go to state 164


state 152

   80 array_assignment: ID CORCHETE_ABIERTO exp . CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | ID CORCHETE_ABIERTO exp . COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO

    COMA              shift, and go to state 165
    CORCHETE_CERRADO  shift, and go to state 166


state 153

   78 asignacion: ID IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 167


state 154

  104 default_function_input_def: COMILLAS . CTE_STRING COMILLAS

    CTE_STRING  shift, and go to state 168


state 155

  103 default_function_input_def: expresion .

    $default  reduce using rule 103 (default_function_input_def)


state 156

   95 default_functions: default_choices PAR_ABIERTO default_function_input_def . default_function_input PAR_CERRADO PUNTO
  101 default_function_input: . MAS default_function_input_def default_function_input
  102                       | .  [PAR_CERRADO]

    MAS  shift, and go to state 169

    $default  reduce using rule 102 (default_function_input)

    default_function_input  go to state 170


state 157

   17 expresion: . exp
   18          | . exp operador_logico exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   64 metodo_def: METHOD tipo @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN . expresion END METHOD

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    expresion            go to state 171
    exp                  go to state 47
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 158

  100 ids_def: COMA . ID

    ID  shift, and go to state 172


state 159

   97 read: READ PAR_ABIERTO ID ids . PAR_CERRADO PUNTO

    PAR_CERRADO  shift, and go to state 173


state 160

   98 ids: . ids_def ids
   98    | ids_def . ids
   99    | .  [PAR_CERRADO]
  100 ids_def: . COMA ID

    COMA  shift, and go to state 158

    $default  reduce using rule 99 (ids)

    ids      go to state 174
    ids_def  go to state 160


state 161

   87 for_statement: FOR ID IGUAL exp . TO exp for_step END FOR

    TO  shift, and go to state 175


state 162

   90 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO . DOS_PUNTOS metodo_body END WHILE

    DOS_PUNTOS  shift, and go to state 176


state 163

   86 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO . DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF

    DOS_PUNTOS  shift, and go to state 177


state 164

   91 select_statement: SELECT ID DOS_PUNTOS CASE . DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DEFAULT  shift, and go to state 178


state 165

   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   81 array_assignment: ID CORCHETE_ABIERTO exp COMA . exp CORCHETE_CERRADO IGUAL expresion PUNTO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exp                  go to state 179
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 166

   80 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 180


state 167

   78 asignacion: ID IGUAL expresion PUNTO .

    $default  reduce using rule 78 (asignacion)


state 168

  104 default_function_input_def: COMILLAS CTE_STRING . COMILLAS

    COMILLAS  shift, and go to state 181


state 169

   17 expresion: . exp
   18          | . exp operador_logico exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
  101 default_function_input: MAS . default_function_input_def default_function_input
  103 default_function_input_def: . expresion
  104                           | . COMILLAS CTE_STRING COMILLAS

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    COMILLAS     shift, and go to state 154
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    expresion                   go to state 155
    exp                         go to state 47
    termino                     go to state 48
    exponencial                 go to state 49
    factor                      go to state 50
    factor_alterno              go to state 51
    operadores_binarios         go to state 52
    var                         go to state 53
    default_function_input_def  go to state 182


state 170

   95 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input . PAR_CERRADO PUNTO

    PAR_CERRADO  shift, and go to state 183


state 171

   64 metodo_def: METHOD tipo @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion . END METHOD

    END  shift, and go to state 184


state 172

  100 ids_def: COMA ID .

    $default  reduce using rule 100 (ids_def)


state 173

   97 read: READ PAR_ABIERTO ID ids PAR_CERRADO . PUNTO

    PUNTO  shift, and go to state 185


state 174

   98 ids: ids_def ids .

    $default  reduce using rule 98 (ids)


state 175

   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   87 for_statement: FOR ID IGUAL exp TO . exp for_step END FOR

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exp                  go to state 186
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 176

   65 metodo_body: . metodo_body body_code
   66            | .
   90 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS . metodo_body END WHILE

    $default  reduce using rule 66 (metodo_body)

    metodo_body  go to state 187


state 177

   65 metodo_body: . metodo_body body_code
   66            | .
   86 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS . metodo_body ELSE DOS_PUNTOS metodo_body END IF

    $default  reduce using rule 66 (metodo_body)

    metodo_body  go to state 188


state 178

   91 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT . DOS_PUNTOS metodo_body END CASE case_statement END SELECT

    DOS_PUNTOS  shift, and go to state 189


state 179

   81 array_assignment: ID CORCHETE_ABIERTO exp COMA exp . CORCHETE_CERRADO IGUAL expresion PUNTO

    CORCHETE_CERRADO  shift, and go to state 190


state 180

   17 expresion: . exp
   18          | . exp operador_logico exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   80 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL . expresion PUNTO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    expresion            go to state 191
    exp                  go to state 47
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 181

  104 default_function_input_def: COMILLAS CTE_STRING COMILLAS .

    $default  reduce using rule 104 (default_function_input_def)


state 182

  101 default_function_input: . MAS default_function_input_def default_function_input
  101                       | MAS default_function_input_def . default_function_input
  102                       | .  [PAR_CERRADO]

    MAS  shift, and go to state 169

    $default  reduce using rule 102 (default_function_input)

    default_function_input  go to state 192


state 183

   95 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO . PUNTO

    PUNTO  shift, and go to state 193


state 184

   64 metodo_def: METHOD tipo @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END . METHOD

    METHOD  shift, and go to state 194


state 185

   97 read: READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO .

    $default  reduce using rule 97 (read)


state 186

   87 for_statement: FOR ID IGUAL exp TO exp . for_step END FOR
   88 for_step: . DOS_PUNTOS metodo_body
   89         | . STEP exp DOS_PUNTOS metodo_body

    STEP        shift, and go to state 195
    DOS_PUNTOS  shift, and go to state 196

    for_step  go to state 197


state 187

    5 vars_def: . DEFINE declaracion AS tipo asignacion_var PUNTO
   65 metodo_body: metodo_body . body_code
   72 body_code: . vars_def
   73          | . asignacion
   74          | . estatuto
   75          | . llamado PUNTO
   76          | . default_functions
   77 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   78 asignacion: . ID IGUAL expresion PUNTO
   79           | . array_assignment
   80 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   82 estatuto: . if_statement
   83         | . for_statement
   84         | . while_statement
   85         | . select_statement
   86 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   87 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   90 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   90                | WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body . END WHILE
   91 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   95 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
   96                  | . read
   97 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  105 default_choices: . PRINT
  106                | . PRINTLINE

    PRINT      shift, and go to state 113
    PRINTLINE  shift, and go to state 114
    READ       shift, and go to state 115
    DEFINE     shift, and go to state 8
    END        shift, and go to state 198
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 123
    llamado            go to state 124
    asignacion         go to state 125
    array_assignment   go to state 126
    estatuto           go to state 127
    if_statement       go to state 128
    for_statement      go to state 129
    while_statement    go to state 130
    select_statement   go to state 131
    default_functions  go to state 132
    read               go to state 133
    default_choices    go to state 134


state 188

    5 vars_def: . DEFINE declaracion AS tipo asignacion_var PUNTO
   65 metodo_body: metodo_body . body_code
   72 body_code: . vars_def
   73          | . asignacion
   74          | . estatuto
   75          | . llamado PUNTO
   76          | . default_functions
   77 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   78 asignacion: . ID IGUAL expresion PUNTO
   79           | . array_assignment
   80 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   82 estatuto: . if_statement
   83         | . for_statement
   84         | . while_statement
   85         | . select_statement
   86 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   86             | IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body . ELSE DOS_PUNTOS metodo_body END IF
   87 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   90 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   91 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   95 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
   96                  | . read
   97 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  105 default_choices: . PRINT
  106                | . PRINTLINE

    PRINT      shift, and go to state 113
    PRINTLINE  shift, and go to state 114
    READ       shift, and go to state 115
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ELSE       shift, and go to state 199
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 123
    llamado            go to state 124
    asignacion         go to state 125
    array_assignment   go to state 126
    estatuto           go to state 127
    if_statement       go to state 128
    for_statement      go to state 129
    while_statement    go to state 130
    select_statement   go to state 131
    default_functions  go to state 132
    read               go to state 133
    default_choices    go to state 134


state 189

   65 metodo_body: . metodo_body body_code
   66            | .
   91 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS . metodo_body END CASE case_statement END SELECT

    $default  reduce using rule 66 (metodo_body)

    metodo_body  go to state 200


state 190

   81 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO . IGUAL expresion PUNTO

    IGUAL  shift, and go to state 201


state 191

   80 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 202


state 192

  101 default_function_input: MAS default_function_input_def default_function_input .

    $default  reduce using rule 101 (default_function_input)


state 193

   95 default_functions: default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO .

    $default  reduce using rule 95 (default_functions)


state 194

   64 metodo_def: METHOD tipo @2 ID @3 PAR_ABIERTO parametros PAR_CERRADO DOS_PUNTOS metodo_body RETURN expresion END METHOD .

    $default  reduce using rule 64 (metodo_def)


state 195

   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   89 for_step: STEP . exp DOS_PUNTOS metodo_body

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    exp                  go to state 203
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 196

   65 metodo_body: . metodo_body body_code
   66            | .
   88 for_step: DOS_PUNTOS . metodo_body

    $default  reduce using rule 66 (metodo_body)

    metodo_body  go to state 204


state 197

   87 for_statement: FOR ID IGUAL exp TO exp for_step . END FOR

    END  shift, and go to state 205


state 198

   90 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END . WHILE

    WHILE  shift, and go to state 206


state 199

   86 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE . DOS_PUNTOS metodo_body END IF

    DOS_PUNTOS  shift, and go to state 207


state 200

    5 vars_def: . DEFINE declaracion AS tipo asignacion_var PUNTO
   65 metodo_body: metodo_body . body_code
   72 body_code: . vars_def
   73          | . asignacion
   74          | . estatuto
   75          | . llamado PUNTO
   76          | . default_functions
   77 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   78 asignacion: . ID IGUAL expresion PUNTO
   79           | . array_assignment
   80 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   82 estatuto: . if_statement
   83         | . for_statement
   84         | . while_statement
   85         | . select_statement
   86 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   87 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   90 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   91 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   91                 | SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body . END CASE case_statement END SELECT
   95 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
   96                  | . read
   97 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  105 default_choices: . PRINT
  106                | . PRINTLINE

    PRINT      shift, and go to state 113
    PRINTLINE  shift, and go to state 114
    READ       shift, and go to state 115
    DEFINE     shift, and go to state 8
    END        shift, and go to state 208
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 123
    llamado            go to state 124
    asignacion         go to state 125
    array_assignment   go to state 126
    estatuto           go to state 127
    if_statement       go to state 128
    for_statement      go to state 129
    while_statement    go to state 130
    select_statement   go to state 131
    default_functions  go to state 132
    read               go to state 133
    default_choices    go to state 134


state 201

   17 expresion: . exp
   18          | . exp operador_logico exp
   33 exp: . termino
   34    | . termino MAS termino
   35    | . termino MENOS termino
   36 termino: . exponencial
   37        | . exponencial POR exponencial
   38        | . exponencial DIVISION exponencial
   39 exponencial: . factor
   40            | . factor EXPONENCIAL
   41 factor: . var
   42       | . PAR_ABIERTO expresion PAR_CERRADO
   43       | . factor_alterno
   44 factor_alterno: . operadores_binarios factor_alterno_choices
   45 operadores_binarios: . MAS
   46                    | . MENOS
   47                    | .  [ABS, COS, SIN, LOG, TAN, SQRT, ID, CTE_INTEGER]
   53 var: . ID
   54    | . CTE_INTEGER
   55    | . CTE_STRING
   56    | . CTE_DECIMAL
   57    | . VERDADERO
   58    | . FALSO
   81 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL . expresion PUNTO

    FALSO        shift, and go to state 37
    VERDADERO    shift, and go to state 38
    PAR_ABIERTO  shift, and go to state 39
    MAS          shift, and go to state 40
    MENOS        shift, and go to state 41
    ID           shift, and go to state 42
    CTE_STRING   shift, and go to state 43
    CTE_DECIMAL  shift, and go to state 44
    CTE_INTEGER  shift, and go to state 45

    ID           [reduce using rule 47 (operadores_binarios)]
    CTE_INTEGER  [reduce using rule 47 (operadores_binarios)]
    $default     reduce using rule 47 (operadores_binarios)

    expresion            go to state 209
    exp                  go to state 47
    termino              go to state 48
    exponencial          go to state 49
    factor               go to state 50
    factor_alterno       go to state 51
    operadores_binarios  go to state 52
    var                  go to state 53


state 202

   80 array_assignment: ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO .

    $default  reduce using rule 80 (array_assignment)


state 203

   89 for_step: STEP exp . DOS_PUNTOS metodo_body

    DOS_PUNTOS  shift, and go to state 210


state 204

    5 vars_def: . DEFINE declaracion AS tipo asignacion_var PUNTO
   65 metodo_body: metodo_body . body_code
   72 body_code: . vars_def
   73          | . asignacion
   74          | . estatuto
   75          | . llamado PUNTO
   76          | . default_functions
   77 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   78 asignacion: . ID IGUAL expresion PUNTO
   79           | . array_assignment
   80 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   82 estatuto: . if_statement
   83         | . for_statement
   84         | . while_statement
   85         | . select_statement
   86 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   87 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   88 for_step: DOS_PUNTOS metodo_body .  [END]
   90 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   91 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   95 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
   96                  | . read
   97 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  105 default_choices: . PRINT
  106                | . PRINTLINE

    PRINT      shift, and go to state 113
    PRINTLINE  shift, and go to state 114
    READ       shift, and go to state 115
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    $default  reduce using rule 88 (for_step)

    vars_def           go to state 122
    body_code          go to state 123
    llamado            go to state 124
    asignacion         go to state 125
    array_assignment   go to state 126
    estatuto           go to state 127
    if_statement       go to state 128
    for_statement      go to state 129
    while_statement    go to state 130
    select_statement   go to state 131
    default_functions  go to state 132
    read               go to state 133
    default_choices    go to state 134


state 205

   87 for_statement: FOR ID IGUAL exp TO exp for_step END . FOR

    FOR  shift, and go to state 211


state 206

   90 while_statement: WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE .

    $default  reduce using rule 90 (while_statement)


state 207

   65 metodo_body: . metodo_body body_code
   66            | .
   86 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS . metodo_body END IF

    $default  reduce using rule 66 (metodo_body)

    metodo_body  go to state 212


state 208

   91 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END . CASE case_statement END SELECT

    CASE  shift, and go to state 213


state 209

   81 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion . PUNTO

    PUNTO  shift, and go to state 214


state 210

   65 metodo_body: . metodo_body body_code
   66            | .
   89 for_step: STEP exp DOS_PUNTOS . metodo_body

    $default  reduce using rule 66 (metodo_body)

    metodo_body  go to state 215


state 211

   87 for_statement: FOR ID IGUAL exp TO exp for_step END FOR .

    $default  reduce using rule 87 (for_statement)


state 212

    5 vars_def: . DEFINE declaracion AS tipo asignacion_var PUNTO
   65 metodo_body: metodo_body . body_code
   72 body_code: . vars_def
   73          | . asignacion
   74          | . estatuto
   75          | . llamado PUNTO
   76          | . default_functions
   77 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   78 asignacion: . ID IGUAL expresion PUNTO
   79           | . array_assignment
   80 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   82 estatuto: . if_statement
   83         | . for_statement
   84         | . while_statement
   85         | . select_statement
   86 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   86             | IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body . END IF
   87 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   90 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   91 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   95 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
   96                  | . read
   97 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  105 default_choices: . PRINT
  106                | . PRINTLINE

    PRINT      shift, and go to state 113
    PRINTLINE  shift, and go to state 114
    READ       shift, and go to state 115
    DEFINE     shift, and go to state 8
    END        shift, and go to state 216
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 123
    llamado            go to state 124
    asignacion         go to state 125
    array_assignment   go to state 126
    estatuto           go to state 127
    if_statement       go to state 128
    for_statement      go to state 129
    while_statement    go to state 130
    select_statement   go to state 131
    default_functions  go to state 132
    read               go to state 133
    default_choices    go to state 134


state 213

   91 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE . case_statement END SELECT
   92 case_statement: . case_statement_def case_statement
   93               | .  [END]
   94 case_statement_def: . CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CASE  shift, and go to state 217

    $default  reduce using rule 93 (case_statement)

    case_statement      go to state 218
    case_statement_def  go to state 219


state 214

   81 array_assignment: ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO .

    $default  reduce using rule 81 (array_assignment)


state 215

    5 vars_def: . DEFINE declaracion AS tipo asignacion_var PUNTO
   65 metodo_body: metodo_body . body_code
   72 body_code: . vars_def
   73          | . asignacion
   74          | . estatuto
   75          | . llamado PUNTO
   76          | . default_functions
   77 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   78 asignacion: . ID IGUAL expresion PUNTO
   79           | . array_assignment
   80 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   82 estatuto: . if_statement
   83         | . for_statement
   84         | . while_statement
   85         | . select_statement
   86 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   87 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   89 for_step: STEP exp DOS_PUNTOS metodo_body .  [END]
   90 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   91 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   95 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
   96                  | . read
   97 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  105 default_choices: . PRINT
  106                | . PRINTLINE

    PRINT      shift, and go to state 113
    PRINTLINE  shift, and go to state 114
    READ       shift, and go to state 115
    DEFINE     shift, and go to state 8
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    $default  reduce using rule 89 (for_step)

    vars_def           go to state 122
    body_code          go to state 123
    llamado            go to state 124
    asignacion         go to state 125
    array_assignment   go to state 126
    estatuto           go to state 127
    if_statement       go to state 128
    for_statement      go to state 129
    while_statement    go to state 130
    select_statement   go to state 131
    default_functions  go to state 132
    read               go to state 133
    default_choices    go to state 134


state 216

   86 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END . IF

    IF  shift, and go to state 220


state 217

   94 case_statement_def: CASE . CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CTE_INTEGER  shift, and go to state 221


state 218

   91 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement . END SELECT

    END  shift, and go to state 222


state 219

   92 case_statement: . case_statement_def case_statement
   92               | case_statement_def . case_statement
   93               | .  [END]
   94 case_statement_def: . CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE

    CASE  shift, and go to state 217

    $default  reduce using rule 93 (case_statement)

    case_statement      go to state 223
    case_statement_def  go to state 219


state 220

   86 if_statement: IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF .

    $default  reduce using rule 86 (if_statement)


state 221

   94 case_statement_def: CASE CTE_INTEGER . DOS_PUNTOS metodo_body END CASE

    DOS_PUNTOS  shift, and go to state 224


state 222

   91 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END . SELECT

    SELECT  shift, and go to state 225


state 223

   92 case_statement: case_statement_def case_statement .

    $default  reduce using rule 92 (case_statement)


state 224

   65 metodo_body: . metodo_body body_code
   66            | .
   94 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS . metodo_body END CASE

    $default  reduce using rule 66 (metodo_body)

    metodo_body  go to state 226


state 225

   91 select_statement: SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT .

    $default  reduce using rule 91 (select_statement)


state 226

    5 vars_def: . DEFINE declaracion AS tipo asignacion_var PUNTO
   65 metodo_body: metodo_body . body_code
   72 body_code: . vars_def
   73          | . asignacion
   74          | . estatuto
   75          | . llamado PUNTO
   76          | . default_functions
   77 llamado: . ID PAR_ABIERTO exp PAR_CERRADO
   78 asignacion: . ID IGUAL expresion PUNTO
   79           | . array_assignment
   80 array_assignment: . ID CORCHETE_ABIERTO exp CORCHETE_CERRADO IGUAL expresion PUNTO
   81                 | . ID CORCHETE_ABIERTO exp COMA exp CORCHETE_CERRADO IGUAL expresion PUNTO
   82 estatuto: . if_statement
   83         | . for_statement
   84         | . while_statement
   85         | . select_statement
   86 if_statement: . IF PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body ELSE DOS_PUNTOS metodo_body END IF
   87 for_statement: . FOR ID IGUAL exp TO exp for_step END FOR
   90 while_statement: . WHILE PAR_ABIERTO expresion PAR_CERRADO DOS_PUNTOS metodo_body END WHILE
   91 select_statement: . SELECT ID DOS_PUNTOS CASE DEFAULT DOS_PUNTOS metodo_body END CASE case_statement END SELECT
   94 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body . END CASE
   95 default_functions: . default_choices PAR_ABIERTO default_function_input_def default_function_input PAR_CERRADO PUNTO
   96                  | . read
   97 read: . READ PAR_ABIERTO ID ids PAR_CERRADO PUNTO
  105 default_choices: . PRINT
  106                | . PRINTLINE

    PRINT      shift, and go to state 113
    PRINTLINE  shift, and go to state 114
    READ       shift, and go to state 115
    DEFINE     shift, and go to state 8
    END        shift, and go to state 227
    FOR        shift, and go to state 117
    WHILE      shift, and go to state 118
    IF         shift, and go to state 119
    SELECT     shift, and go to state 120
    ID         shift, and go to state 121

    vars_def           go to state 122
    body_code          go to state 123
    llamado            go to state 124
    asignacion         go to state 125
    array_assignment   go to state 126
    estatuto           go to state 127
    if_statement       go to state 128
    for_statement      go to state 129
    while_statement    go to state 130
    select_statement   go to state 131
    default_functions  go to state 132
    read               go to state 133
    default_choices    go to state 134


state 227

   94 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END . CASE

    CASE  shift, and go to state 228


state 228

   94 case_statement_def: CASE CTE_INTEGER DOS_PUNTOS metodo_body END CASE .

    $default  reduce using rule 94 (case_statement_def)
